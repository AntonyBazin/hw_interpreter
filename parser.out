Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    2DARRBOOL
    2DARRINT
    BACK
    EXTEND1
    EXTEND2
    FALSE
    FORW
    FUNC
    GETB
    GETF
    GETL
    GETR
    LEFT
    NL
    PUSHB
    PUSHF
    PUSHL
    PUSHR
    RET
    RIGHT
    SZ1
    SZ2
    TRUE
    UNDO

Grammar

Rule 0     S' -> program
Rule 1     program -> stmt_list
Rule 2     stmt_list -> statement
Rule 3     stmt_list -> stmt_list statement
Rule 4     statement -> error
Rule 5     statement -> expr
Rule 6     statement -> OPENST stmt_list CLOSEST
Rule 7     statement -> create_id
Rule 8     statement -> assign
Rule 9     statement -> create_1darr
Rule 10    statement -> WHILE OPENBR expr CLOSEBR DO statement
Rule 11    statement -> IF OPENBR expr CLOSEBR statement
Rule 12    statement -> IF OPENBR expr CLOSEBR statement ELSE statement
Rule 13    expr -> MINUS expr
Rule 14    expr -> NOT expr
Rule 15    expr -> INC id
Rule 16    expr -> DEC id
Rule 17    expr -> expr PLUS expr
Rule 18    expr -> expr MINUS expr
Rule 19    expr -> expr MUL expr
Rule 20    expr -> expr DIV expr
Rule 21    expr -> expr OR expr
Rule 22    expr -> expr GT expr
Rule 23    expr -> expr LT expr
Rule 24    expr -> expr EQ expr
Rule 25    expr -> OPENBR expr CLOSEBR
Rule 26    expr -> NUM
Rule 27    expr -> id
Rule 28    create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND
Rule 29    create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND
Rule 30    enum -> expr
Rule 31    enum -> expr COMMA enum
Rule 32    create_id -> UINT id ASGN expr
Rule 33    create_id -> CUINT id ASGN expr
Rule 34    create_id -> BOOL id ASGN expr
Rule 35    create_id -> CBOOL id ASGN expr
Rule 36    assign -> id ASGN expr
Rule 37    id -> ID

Terminals, with rules where they appear

1DARRBOOL            : 28
1DARRINT             : 29
2DARRBOOL            : 
2DARRINT             : 
ASGN                 : 28 29 32 33 34 35 36
BACK                 : 
BOOL                 : 34
CBOOL                : 35
CLOSEBR              : 10 11 12 25
CLOSEIND             : 28 29
CLOSEST              : 6
COMMA                : 31
CUINT                : 33
DEC                  : 16
DIV                  : 20
DO                   : 10
ELSE                 : 12
EQ                   : 24
EXTEND1              : 
EXTEND2              : 
FALSE                : 
FORW                 : 
FUNC                 : 
GETB                 : 
GETF                 : 
GETL                 : 
GETR                 : 
GT                   : 22
ID                   : 37
IF                   : 11 12
INC                  : 15
LEFT                 : 
LT                   : 23
MINUS                : 13 18
MUL                  : 19
NL                   : 
NOT                  : 14
NUM                  : 26
OPENBR               : 10 11 12 25
OPENIND              : 28 29
OPENST               : 6
OR                   : 21
PLUS                 : 17
PUSHB                : 
PUSHF                : 
PUSHL                : 
PUSHR                : 
RET                  : 
RIGHT                : 
SZ1                  : 
SZ2                  : 
TRUE                 : 
UINT                 : 32
UNDO                 : 
WHILE                : 10
error                : 4

Nonterminals, with rules where they appear

assign               : 8
create_1darr         : 9
create_id            : 7
enum                 : 28 29 31
expr                 : 5 10 11 12 13 14 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 30 31 32 33 34 35 36
id                   : 15 16 27 28 29 32 33 34 35 36
program              : 0
statement            : 2 3 10 11 12 12
stmt_list            : 1 3 6

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . stmt_list
    (2) stmt_list -> . statement
    (3) stmt_list -> . stmt_list statement
    (4) statement -> . error
    (5) statement -> . expr
    (6) statement -> . OPENST stmt_list CLOSEST
    (7) statement -> . create_id
    (8) statement -> . assign
    (9) statement -> . create_1darr
    (10) statement -> . WHILE OPENBR expr CLOSEBR DO statement
    (11) statement -> . IF OPENBR expr CLOSEBR statement
    (12) statement -> . IF OPENBR expr CLOSEBR statement ELSE statement
    (13) expr -> . MINUS expr
    (14) expr -> . NOT expr
    (15) expr -> . INC id
    (16) expr -> . DEC id
    (17) expr -> . expr PLUS expr
    (18) expr -> . expr MINUS expr
    (19) expr -> . expr MUL expr
    (20) expr -> . expr DIV expr
    (21) expr -> . expr OR expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LT expr
    (24) expr -> . expr EQ expr
    (25) expr -> . OPENBR expr CLOSEBR
    (26) expr -> . NUM
    (27) expr -> . id
    (32) create_id -> . UINT id ASGN expr
    (33) create_id -> . CUINT id ASGN expr
    (34) create_id -> . BOOL id ASGN expr
    (35) create_id -> . CBOOL id ASGN expr
    (36) assign -> . id ASGN expr
    (28) create_1darr -> . 1DARRBOOL id ASGN OPENIND enum CLOSEIND
    (29) create_1darr -> . 1DARRINT id ASGN OPENIND enum CLOSEIND
    (37) id -> . ID

    error           shift and go to state 4
    OPENST          shift and go to state 6
    WHILE           shift and go to state 10
    IF              shift and go to state 12
    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    INC             shift and go to state 15
    DEC             shift and go to state 17
    OPENBR          shift and go to state 11
    NUM             shift and go to state 18
    UINT            shift and go to state 19
    CUINT           shift and go to state 20
    BOOL            shift and go to state 21
    CBOOL           shift and go to state 22
    1DARRBOOL       shift and go to state 23
    1DARRINT        shift and go to state 24
    ID              shift and go to state 25

    program                        shift and go to state 1
    stmt_list                      shift and go to state 2
    statement                      shift and go to state 3
    expr                           shift and go to state 5
    create_id                      shift and go to state 7
    assign                         shift and go to state 8
    create_1darr                   shift and go to state 9
    id                             shift and go to state 16

state 1

    (0) S' -> program .



state 2

    (1) program -> stmt_list .
    (3) stmt_list -> stmt_list . statement
    (4) statement -> . error
    (5) statement -> . expr
    (6) statement -> . OPENST stmt_list CLOSEST
    (7) statement -> . create_id
    (8) statement -> . assign
    (9) statement -> . create_1darr
    (10) statement -> . WHILE OPENBR expr CLOSEBR DO statement
    (11) statement -> . IF OPENBR expr CLOSEBR statement
    (12) statement -> . IF OPENBR expr CLOSEBR statement ELSE statement
    (13) expr -> . MINUS expr
    (14) expr -> . NOT expr
    (15) expr -> . INC id
    (16) expr -> . DEC id
    (17) expr -> . expr PLUS expr
    (18) expr -> . expr MINUS expr
    (19) expr -> . expr MUL expr
    (20) expr -> . expr DIV expr
    (21) expr -> . expr OR expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LT expr
    (24) expr -> . expr EQ expr
    (25) expr -> . OPENBR expr CLOSEBR
    (26) expr -> . NUM
    (27) expr -> . id
    (32) create_id -> . UINT id ASGN expr
    (33) create_id -> . CUINT id ASGN expr
    (34) create_id -> . BOOL id ASGN expr
    (35) create_id -> . CBOOL id ASGN expr
    (36) assign -> . id ASGN expr
    (28) create_1darr -> . 1DARRBOOL id ASGN OPENIND enum CLOSEIND
    (29) create_1darr -> . 1DARRINT id ASGN OPENIND enum CLOSEIND
    (37) id -> . ID

    $end            reduce using rule 1 (program -> stmt_list .)
    error           shift and go to state 4
    OPENST          shift and go to state 6
    WHILE           shift and go to state 10
    IF              shift and go to state 12
    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    INC             shift and go to state 15
    DEC             shift and go to state 17
    OPENBR          shift and go to state 11
    NUM             shift and go to state 18
    UINT            shift and go to state 19
    CUINT           shift and go to state 20
    BOOL            shift and go to state 21
    CBOOL           shift and go to state 22
    1DARRBOOL       shift and go to state 23
    1DARRINT        shift and go to state 24
    ID              shift and go to state 25

    statement                      shift and go to state 26
    expr                           shift and go to state 5
    create_id                      shift and go to state 7
    assign                         shift and go to state 8
    create_1darr                   shift and go to state 9
    id                             shift and go to state 16

state 3

    (2) stmt_list -> statement .

    error           reduce using rule 2 (stmt_list -> statement .)
    OPENST          reduce using rule 2 (stmt_list -> statement .)
    WHILE           reduce using rule 2 (stmt_list -> statement .)
    IF              reduce using rule 2 (stmt_list -> statement .)
    MINUS           reduce using rule 2 (stmt_list -> statement .)
    NOT             reduce using rule 2 (stmt_list -> statement .)
    INC             reduce using rule 2 (stmt_list -> statement .)
    DEC             reduce using rule 2 (stmt_list -> statement .)
    OPENBR          reduce using rule 2 (stmt_list -> statement .)
    NUM             reduce using rule 2 (stmt_list -> statement .)
    UINT            reduce using rule 2 (stmt_list -> statement .)
    CUINT           reduce using rule 2 (stmt_list -> statement .)
    BOOL            reduce using rule 2 (stmt_list -> statement .)
    CBOOL           reduce using rule 2 (stmt_list -> statement .)
    1DARRBOOL       reduce using rule 2 (stmt_list -> statement .)
    1DARRINT        reduce using rule 2 (stmt_list -> statement .)
    ID              reduce using rule 2 (stmt_list -> statement .)
    $end            reduce using rule 2 (stmt_list -> statement .)
    CLOSEST         reduce using rule 2 (stmt_list -> statement .)


state 4

    (4) statement -> error .

    error           reduce using rule 4 (statement -> error .)
    OPENST          reduce using rule 4 (statement -> error .)
    WHILE           reduce using rule 4 (statement -> error .)
    IF              reduce using rule 4 (statement -> error .)
    MINUS           reduce using rule 4 (statement -> error .)
    NOT             reduce using rule 4 (statement -> error .)
    INC             reduce using rule 4 (statement -> error .)
    DEC             reduce using rule 4 (statement -> error .)
    OPENBR          reduce using rule 4 (statement -> error .)
    NUM             reduce using rule 4 (statement -> error .)
    UINT            reduce using rule 4 (statement -> error .)
    CUINT           reduce using rule 4 (statement -> error .)
    BOOL            reduce using rule 4 (statement -> error .)
    CBOOL           reduce using rule 4 (statement -> error .)
    1DARRBOOL       reduce using rule 4 (statement -> error .)
    1DARRINT        reduce using rule 4 (statement -> error .)
    ID              reduce using rule 4 (statement -> error .)
    $end            reduce using rule 4 (statement -> error .)
    CLOSEST         reduce using rule 4 (statement -> error .)
    ELSE            reduce using rule 4 (statement -> error .)


state 5

    (5) statement -> expr .
    (17) expr -> expr . PLUS expr
    (18) expr -> expr . MINUS expr
    (19) expr -> expr . MUL expr
    (20) expr -> expr . DIV expr
    (21) expr -> expr . OR expr
    (22) expr -> expr . GT expr
    (23) expr -> expr . LT expr
    (24) expr -> expr . EQ expr

  ! shift/reduce conflict for MINUS resolved as shift
    error           reduce using rule 5 (statement -> expr .)
    OPENST          reduce using rule 5 (statement -> expr .)
    WHILE           reduce using rule 5 (statement -> expr .)
    IF              reduce using rule 5 (statement -> expr .)
    NOT             reduce using rule 5 (statement -> expr .)
    INC             reduce using rule 5 (statement -> expr .)
    DEC             reduce using rule 5 (statement -> expr .)
    OPENBR          reduce using rule 5 (statement -> expr .)
    NUM             reduce using rule 5 (statement -> expr .)
    UINT            reduce using rule 5 (statement -> expr .)
    CUINT           reduce using rule 5 (statement -> expr .)
    BOOL            reduce using rule 5 (statement -> expr .)
    CBOOL           reduce using rule 5 (statement -> expr .)
    1DARRBOOL       reduce using rule 5 (statement -> expr .)
    1DARRINT        reduce using rule 5 (statement -> expr .)
    ID              reduce using rule 5 (statement -> expr .)
    $end            reduce using rule 5 (statement -> expr .)
    CLOSEST         reduce using rule 5 (statement -> expr .)
    ELSE            reduce using rule 5 (statement -> expr .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    MUL             shift and go to state 29
    DIV             shift and go to state 30
    OR              shift and go to state 31
    GT              shift and go to state 32
    LT              shift and go to state 33
    EQ              shift and go to state 34

  ! MINUS           [ reduce using rule 5 (statement -> expr .) ]


state 6

    (6) statement -> OPENST . stmt_list CLOSEST
    (2) stmt_list -> . statement
    (3) stmt_list -> . stmt_list statement
    (4) statement -> . error
    (5) statement -> . expr
    (6) statement -> . OPENST stmt_list CLOSEST
    (7) statement -> . create_id
    (8) statement -> . assign
    (9) statement -> . create_1darr
    (10) statement -> . WHILE OPENBR expr CLOSEBR DO statement
    (11) statement -> . IF OPENBR expr CLOSEBR statement
    (12) statement -> . IF OPENBR expr CLOSEBR statement ELSE statement
    (13) expr -> . MINUS expr
    (14) expr -> . NOT expr
    (15) expr -> . INC id
    (16) expr -> . DEC id
    (17) expr -> . expr PLUS expr
    (18) expr -> . expr MINUS expr
    (19) expr -> . expr MUL expr
    (20) expr -> . expr DIV expr
    (21) expr -> . expr OR expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LT expr
    (24) expr -> . expr EQ expr
    (25) expr -> . OPENBR expr CLOSEBR
    (26) expr -> . NUM
    (27) expr -> . id
    (32) create_id -> . UINT id ASGN expr
    (33) create_id -> . CUINT id ASGN expr
    (34) create_id -> . BOOL id ASGN expr
    (35) create_id -> . CBOOL id ASGN expr
    (36) assign -> . id ASGN expr
    (28) create_1darr -> . 1DARRBOOL id ASGN OPENIND enum CLOSEIND
    (29) create_1darr -> . 1DARRINT id ASGN OPENIND enum CLOSEIND
    (37) id -> . ID

    error           shift and go to state 4
    OPENST          shift and go to state 6
    WHILE           shift and go to state 10
    IF              shift and go to state 12
    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    INC             shift and go to state 15
    DEC             shift and go to state 17
    OPENBR          shift and go to state 11
    NUM             shift and go to state 18
    UINT            shift and go to state 19
    CUINT           shift and go to state 20
    BOOL            shift and go to state 21
    CBOOL           shift and go to state 22
    1DARRBOOL       shift and go to state 23
    1DARRINT        shift and go to state 24
    ID              shift and go to state 25

    stmt_list                      shift and go to state 35
    statement                      shift and go to state 3
    expr                           shift and go to state 5
    create_id                      shift and go to state 7
    assign                         shift and go to state 8
    create_1darr                   shift and go to state 9
    id                             shift and go to state 16

state 7

    (7) statement -> create_id .

    error           reduce using rule 7 (statement -> create_id .)
    OPENST          reduce using rule 7 (statement -> create_id .)
    WHILE           reduce using rule 7 (statement -> create_id .)
    IF              reduce using rule 7 (statement -> create_id .)
    MINUS           reduce using rule 7 (statement -> create_id .)
    NOT             reduce using rule 7 (statement -> create_id .)
    INC             reduce using rule 7 (statement -> create_id .)
    DEC             reduce using rule 7 (statement -> create_id .)
    OPENBR          reduce using rule 7 (statement -> create_id .)
    NUM             reduce using rule 7 (statement -> create_id .)
    UINT            reduce using rule 7 (statement -> create_id .)
    CUINT           reduce using rule 7 (statement -> create_id .)
    BOOL            reduce using rule 7 (statement -> create_id .)
    CBOOL           reduce using rule 7 (statement -> create_id .)
    1DARRBOOL       reduce using rule 7 (statement -> create_id .)
    1DARRINT        reduce using rule 7 (statement -> create_id .)
    ID              reduce using rule 7 (statement -> create_id .)
    $end            reduce using rule 7 (statement -> create_id .)
    CLOSEST         reduce using rule 7 (statement -> create_id .)
    ELSE            reduce using rule 7 (statement -> create_id .)


state 8

    (8) statement -> assign .

    error           reduce using rule 8 (statement -> assign .)
    OPENST          reduce using rule 8 (statement -> assign .)
    WHILE           reduce using rule 8 (statement -> assign .)
    IF              reduce using rule 8 (statement -> assign .)
    MINUS           reduce using rule 8 (statement -> assign .)
    NOT             reduce using rule 8 (statement -> assign .)
    INC             reduce using rule 8 (statement -> assign .)
    DEC             reduce using rule 8 (statement -> assign .)
    OPENBR          reduce using rule 8 (statement -> assign .)
    NUM             reduce using rule 8 (statement -> assign .)
    UINT            reduce using rule 8 (statement -> assign .)
    CUINT           reduce using rule 8 (statement -> assign .)
    BOOL            reduce using rule 8 (statement -> assign .)
    CBOOL           reduce using rule 8 (statement -> assign .)
    1DARRBOOL       reduce using rule 8 (statement -> assign .)
    1DARRINT        reduce using rule 8 (statement -> assign .)
    ID              reduce using rule 8 (statement -> assign .)
    $end            reduce using rule 8 (statement -> assign .)
    CLOSEST         reduce using rule 8 (statement -> assign .)
    ELSE            reduce using rule 8 (statement -> assign .)


state 9

    (9) statement -> create_1darr .

    error           reduce using rule 9 (statement -> create_1darr .)
    OPENST          reduce using rule 9 (statement -> create_1darr .)
    WHILE           reduce using rule 9 (statement -> create_1darr .)
    IF              reduce using rule 9 (statement -> create_1darr .)
    MINUS           reduce using rule 9 (statement -> create_1darr .)
    NOT             reduce using rule 9 (statement -> create_1darr .)
    INC             reduce using rule 9 (statement -> create_1darr .)
    DEC             reduce using rule 9 (statement -> create_1darr .)
    OPENBR          reduce using rule 9 (statement -> create_1darr .)
    NUM             reduce using rule 9 (statement -> create_1darr .)
    UINT            reduce using rule 9 (statement -> create_1darr .)
    CUINT           reduce using rule 9 (statement -> create_1darr .)
    BOOL            reduce using rule 9 (statement -> create_1darr .)
    CBOOL           reduce using rule 9 (statement -> create_1darr .)
    1DARRBOOL       reduce using rule 9 (statement -> create_1darr .)
    1DARRINT        reduce using rule 9 (statement -> create_1darr .)
    ID              reduce using rule 9 (statement -> create_1darr .)
    $end            reduce using rule 9 (statement -> create_1darr .)
    CLOSEST         reduce using rule 9 (statement -> create_1darr .)
    ELSE            reduce using rule 9 (statement -> create_1darr .)


state 10

    (10) statement -> WHILE . OPENBR expr CLOSEBR DO statement

    OPENBR          shift and go to state 36


state 11

    (25) expr -> OPENBR . expr CLOSEBR
    (13) expr -> . MINUS expr
    (14) expr -> . NOT expr
    (15) expr -> . INC id
    (16) expr -> . DEC id
    (17) expr -> . expr PLUS expr
    (18) expr -> . expr MINUS expr
    (19) expr -> . expr MUL expr
    (20) expr -> . expr DIV expr
    (21) expr -> . expr OR expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LT expr
    (24) expr -> . expr EQ expr
    (25) expr -> . OPENBR expr CLOSEBR
    (26) expr -> . NUM
    (27) expr -> . id
    (37) id -> . ID

    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    INC             shift and go to state 15
    DEC             shift and go to state 17
    OPENBR          shift and go to state 11
    NUM             shift and go to state 18
    ID              shift and go to state 25

    expr                           shift and go to state 37
    id                             shift and go to state 38

state 12

    (11) statement -> IF . OPENBR expr CLOSEBR statement
    (12) statement -> IF . OPENBR expr CLOSEBR statement ELSE statement

    OPENBR          shift and go to state 39


state 13

    (13) expr -> MINUS . expr
    (13) expr -> . MINUS expr
    (14) expr -> . NOT expr
    (15) expr -> . INC id
    (16) expr -> . DEC id
    (17) expr -> . expr PLUS expr
    (18) expr -> . expr MINUS expr
    (19) expr -> . expr MUL expr
    (20) expr -> . expr DIV expr
    (21) expr -> . expr OR expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LT expr
    (24) expr -> . expr EQ expr
    (25) expr -> . OPENBR expr CLOSEBR
    (26) expr -> . NUM
    (27) expr -> . id
    (37) id -> . ID

    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    INC             shift and go to state 15
    DEC             shift and go to state 17
    OPENBR          shift and go to state 11
    NUM             shift and go to state 18
    ID              shift and go to state 25

    expr                           shift and go to state 40
    id                             shift and go to state 38

state 14

    (14) expr -> NOT . expr
    (13) expr -> . MINUS expr
    (14) expr -> . NOT expr
    (15) expr -> . INC id
    (16) expr -> . DEC id
    (17) expr -> . expr PLUS expr
    (18) expr -> . expr MINUS expr
    (19) expr -> . expr MUL expr
    (20) expr -> . expr DIV expr
    (21) expr -> . expr OR expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LT expr
    (24) expr -> . expr EQ expr
    (25) expr -> . OPENBR expr CLOSEBR
    (26) expr -> . NUM
    (27) expr -> . id
    (37) id -> . ID

    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    INC             shift and go to state 15
    DEC             shift and go to state 17
    OPENBR          shift and go to state 11
    NUM             shift and go to state 18
    ID              shift and go to state 25

    expr                           shift and go to state 41
    id                             shift and go to state 38

state 15

    (15) expr -> INC . id
    (37) id -> . ID

    ID              shift and go to state 25

    id                             shift and go to state 42

state 16

    (27) expr -> id .
    (36) assign -> id . ASGN expr

    PLUS            reduce using rule 27 (expr -> id .)
    MINUS           reduce using rule 27 (expr -> id .)
    MUL             reduce using rule 27 (expr -> id .)
    DIV             reduce using rule 27 (expr -> id .)
    OR              reduce using rule 27 (expr -> id .)
    GT              reduce using rule 27 (expr -> id .)
    LT              reduce using rule 27 (expr -> id .)
    EQ              reduce using rule 27 (expr -> id .)
    error           reduce using rule 27 (expr -> id .)
    OPENST          reduce using rule 27 (expr -> id .)
    WHILE           reduce using rule 27 (expr -> id .)
    IF              reduce using rule 27 (expr -> id .)
    NOT             reduce using rule 27 (expr -> id .)
    INC             reduce using rule 27 (expr -> id .)
    DEC             reduce using rule 27 (expr -> id .)
    OPENBR          reduce using rule 27 (expr -> id .)
    NUM             reduce using rule 27 (expr -> id .)
    UINT            reduce using rule 27 (expr -> id .)
    CUINT           reduce using rule 27 (expr -> id .)
    BOOL            reduce using rule 27 (expr -> id .)
    CBOOL           reduce using rule 27 (expr -> id .)
    1DARRBOOL       reduce using rule 27 (expr -> id .)
    1DARRINT        reduce using rule 27 (expr -> id .)
    ID              reduce using rule 27 (expr -> id .)
    $end            reduce using rule 27 (expr -> id .)
    CLOSEST         reduce using rule 27 (expr -> id .)
    ELSE            reduce using rule 27 (expr -> id .)
    ASGN            shift and go to state 43


state 17

    (16) expr -> DEC . id
    (37) id -> . ID

    ID              shift and go to state 25

    id                             shift and go to state 44

state 18

    (26) expr -> NUM .

    PLUS            reduce using rule 26 (expr -> NUM .)
    MINUS           reduce using rule 26 (expr -> NUM .)
    MUL             reduce using rule 26 (expr -> NUM .)
    DIV             reduce using rule 26 (expr -> NUM .)
    OR              reduce using rule 26 (expr -> NUM .)
    GT              reduce using rule 26 (expr -> NUM .)
    LT              reduce using rule 26 (expr -> NUM .)
    EQ              reduce using rule 26 (expr -> NUM .)
    error           reduce using rule 26 (expr -> NUM .)
    OPENST          reduce using rule 26 (expr -> NUM .)
    WHILE           reduce using rule 26 (expr -> NUM .)
    IF              reduce using rule 26 (expr -> NUM .)
    NOT             reduce using rule 26 (expr -> NUM .)
    INC             reduce using rule 26 (expr -> NUM .)
    DEC             reduce using rule 26 (expr -> NUM .)
    OPENBR          reduce using rule 26 (expr -> NUM .)
    NUM             reduce using rule 26 (expr -> NUM .)
    UINT            reduce using rule 26 (expr -> NUM .)
    CUINT           reduce using rule 26 (expr -> NUM .)
    BOOL            reduce using rule 26 (expr -> NUM .)
    CBOOL           reduce using rule 26 (expr -> NUM .)
    1DARRBOOL       reduce using rule 26 (expr -> NUM .)
    1DARRINT        reduce using rule 26 (expr -> NUM .)
    ID              reduce using rule 26 (expr -> NUM .)
    $end            reduce using rule 26 (expr -> NUM .)
    CLOSEST         reduce using rule 26 (expr -> NUM .)
    CLOSEBR         reduce using rule 26 (expr -> NUM .)
    ELSE            reduce using rule 26 (expr -> NUM .)
    COMMA           reduce using rule 26 (expr -> NUM .)
    CLOSEIND        reduce using rule 26 (expr -> NUM .)


state 19

    (32) create_id -> UINT . id ASGN expr
    (37) id -> . ID

    ID              shift and go to state 25

    id                             shift and go to state 45

state 20

    (33) create_id -> CUINT . id ASGN expr
    (37) id -> . ID

    ID              shift and go to state 25

    id                             shift and go to state 46

state 21

    (34) create_id -> BOOL . id ASGN expr
    (37) id -> . ID

    ID              shift and go to state 25

    id                             shift and go to state 47

state 22

    (35) create_id -> CBOOL . id ASGN expr
    (37) id -> . ID

    ID              shift and go to state 25

    id                             shift and go to state 48

state 23

    (28) create_1darr -> 1DARRBOOL . id ASGN OPENIND enum CLOSEIND
    (37) id -> . ID

    ID              shift and go to state 25

    id                             shift and go to state 49

state 24

    (29) create_1darr -> 1DARRINT . id ASGN OPENIND enum CLOSEIND
    (37) id -> . ID

    ID              shift and go to state 25

    id                             shift and go to state 50

state 25

    (37) id -> ID .

    ASGN            reduce using rule 37 (id -> ID .)
    PLUS            reduce using rule 37 (id -> ID .)
    MINUS           reduce using rule 37 (id -> ID .)
    MUL             reduce using rule 37 (id -> ID .)
    DIV             reduce using rule 37 (id -> ID .)
    OR              reduce using rule 37 (id -> ID .)
    GT              reduce using rule 37 (id -> ID .)
    LT              reduce using rule 37 (id -> ID .)
    EQ              reduce using rule 37 (id -> ID .)
    error           reduce using rule 37 (id -> ID .)
    OPENST          reduce using rule 37 (id -> ID .)
    WHILE           reduce using rule 37 (id -> ID .)
    IF              reduce using rule 37 (id -> ID .)
    NOT             reduce using rule 37 (id -> ID .)
    INC             reduce using rule 37 (id -> ID .)
    DEC             reduce using rule 37 (id -> ID .)
    OPENBR          reduce using rule 37 (id -> ID .)
    NUM             reduce using rule 37 (id -> ID .)
    UINT            reduce using rule 37 (id -> ID .)
    CUINT           reduce using rule 37 (id -> ID .)
    BOOL            reduce using rule 37 (id -> ID .)
    CBOOL           reduce using rule 37 (id -> ID .)
    1DARRBOOL       reduce using rule 37 (id -> ID .)
    1DARRINT        reduce using rule 37 (id -> ID .)
    ID              reduce using rule 37 (id -> ID .)
    $end            reduce using rule 37 (id -> ID .)
    CLOSEST         reduce using rule 37 (id -> ID .)
    CLOSEBR         reduce using rule 37 (id -> ID .)
    ELSE            reduce using rule 37 (id -> ID .)
    COMMA           reduce using rule 37 (id -> ID .)
    CLOSEIND        reduce using rule 37 (id -> ID .)


state 26

    (3) stmt_list -> stmt_list statement .

    error           reduce using rule 3 (stmt_list -> stmt_list statement .)
    OPENST          reduce using rule 3 (stmt_list -> stmt_list statement .)
    WHILE           reduce using rule 3 (stmt_list -> stmt_list statement .)
    IF              reduce using rule 3 (stmt_list -> stmt_list statement .)
    MINUS           reduce using rule 3 (stmt_list -> stmt_list statement .)
    NOT             reduce using rule 3 (stmt_list -> stmt_list statement .)
    INC             reduce using rule 3 (stmt_list -> stmt_list statement .)
    DEC             reduce using rule 3 (stmt_list -> stmt_list statement .)
    OPENBR          reduce using rule 3 (stmt_list -> stmt_list statement .)
    NUM             reduce using rule 3 (stmt_list -> stmt_list statement .)
    UINT            reduce using rule 3 (stmt_list -> stmt_list statement .)
    CUINT           reduce using rule 3 (stmt_list -> stmt_list statement .)
    BOOL            reduce using rule 3 (stmt_list -> stmt_list statement .)
    CBOOL           reduce using rule 3 (stmt_list -> stmt_list statement .)
    1DARRBOOL       reduce using rule 3 (stmt_list -> stmt_list statement .)
    1DARRINT        reduce using rule 3 (stmt_list -> stmt_list statement .)
    ID              reduce using rule 3 (stmt_list -> stmt_list statement .)
    $end            reduce using rule 3 (stmt_list -> stmt_list statement .)
    CLOSEST         reduce using rule 3 (stmt_list -> stmt_list statement .)


state 27

    (17) expr -> expr PLUS . expr
    (13) expr -> . MINUS expr
    (14) expr -> . NOT expr
    (15) expr -> . INC id
    (16) expr -> . DEC id
    (17) expr -> . expr PLUS expr
    (18) expr -> . expr MINUS expr
    (19) expr -> . expr MUL expr
    (20) expr -> . expr DIV expr
    (21) expr -> . expr OR expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LT expr
    (24) expr -> . expr EQ expr
    (25) expr -> . OPENBR expr CLOSEBR
    (26) expr -> . NUM
    (27) expr -> . id
    (37) id -> . ID

    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    INC             shift and go to state 15
    DEC             shift and go to state 17
    OPENBR          shift and go to state 11
    NUM             shift and go to state 18
    ID              shift and go to state 25

    expr                           shift and go to state 51
    id                             shift and go to state 38

state 28

    (18) expr -> expr MINUS . expr
    (13) expr -> . MINUS expr
    (14) expr -> . NOT expr
    (15) expr -> . INC id
    (16) expr -> . DEC id
    (17) expr -> . expr PLUS expr
    (18) expr -> . expr MINUS expr
    (19) expr -> . expr MUL expr
    (20) expr -> . expr DIV expr
    (21) expr -> . expr OR expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LT expr
    (24) expr -> . expr EQ expr
    (25) expr -> . OPENBR expr CLOSEBR
    (26) expr -> . NUM
    (27) expr -> . id
    (37) id -> . ID

    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    INC             shift and go to state 15
    DEC             shift and go to state 17
    OPENBR          shift and go to state 11
    NUM             shift and go to state 18
    ID              shift and go to state 25

    expr                           shift and go to state 52
    id                             shift and go to state 38

state 29

    (19) expr -> expr MUL . expr
    (13) expr -> . MINUS expr
    (14) expr -> . NOT expr
    (15) expr -> . INC id
    (16) expr -> . DEC id
    (17) expr -> . expr PLUS expr
    (18) expr -> . expr MINUS expr
    (19) expr -> . expr MUL expr
    (20) expr -> . expr DIV expr
    (21) expr -> . expr OR expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LT expr
    (24) expr -> . expr EQ expr
    (25) expr -> . OPENBR expr CLOSEBR
    (26) expr -> . NUM
    (27) expr -> . id
    (37) id -> . ID

    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    INC             shift and go to state 15
    DEC             shift and go to state 17
    OPENBR          shift and go to state 11
    NUM             shift and go to state 18
    ID              shift and go to state 25

    expr                           shift and go to state 53
    id                             shift and go to state 38

state 30

    (20) expr -> expr DIV . expr
    (13) expr -> . MINUS expr
    (14) expr -> . NOT expr
    (15) expr -> . INC id
    (16) expr -> . DEC id
    (17) expr -> . expr PLUS expr
    (18) expr -> . expr MINUS expr
    (19) expr -> . expr MUL expr
    (20) expr -> . expr DIV expr
    (21) expr -> . expr OR expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LT expr
    (24) expr -> . expr EQ expr
    (25) expr -> . OPENBR expr CLOSEBR
    (26) expr -> . NUM
    (27) expr -> . id
    (37) id -> . ID

    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    INC             shift and go to state 15
    DEC             shift and go to state 17
    OPENBR          shift and go to state 11
    NUM             shift and go to state 18
    ID              shift and go to state 25

    expr                           shift and go to state 54
    id                             shift and go to state 38

state 31

    (21) expr -> expr OR . expr
    (13) expr -> . MINUS expr
    (14) expr -> . NOT expr
    (15) expr -> . INC id
    (16) expr -> . DEC id
    (17) expr -> . expr PLUS expr
    (18) expr -> . expr MINUS expr
    (19) expr -> . expr MUL expr
    (20) expr -> . expr DIV expr
    (21) expr -> . expr OR expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LT expr
    (24) expr -> . expr EQ expr
    (25) expr -> . OPENBR expr CLOSEBR
    (26) expr -> . NUM
    (27) expr -> . id
    (37) id -> . ID

    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    INC             shift and go to state 15
    DEC             shift and go to state 17
    OPENBR          shift and go to state 11
    NUM             shift and go to state 18
    ID              shift and go to state 25

    expr                           shift and go to state 55
    id                             shift and go to state 38

state 32

    (22) expr -> expr GT . expr
    (13) expr -> . MINUS expr
    (14) expr -> . NOT expr
    (15) expr -> . INC id
    (16) expr -> . DEC id
    (17) expr -> . expr PLUS expr
    (18) expr -> . expr MINUS expr
    (19) expr -> . expr MUL expr
    (20) expr -> . expr DIV expr
    (21) expr -> . expr OR expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LT expr
    (24) expr -> . expr EQ expr
    (25) expr -> . OPENBR expr CLOSEBR
    (26) expr -> . NUM
    (27) expr -> . id
    (37) id -> . ID

    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    INC             shift and go to state 15
    DEC             shift and go to state 17
    OPENBR          shift and go to state 11
    NUM             shift and go to state 18
    ID              shift and go to state 25

    expr                           shift and go to state 56
    id                             shift and go to state 38

state 33

    (23) expr -> expr LT . expr
    (13) expr -> . MINUS expr
    (14) expr -> . NOT expr
    (15) expr -> . INC id
    (16) expr -> . DEC id
    (17) expr -> . expr PLUS expr
    (18) expr -> . expr MINUS expr
    (19) expr -> . expr MUL expr
    (20) expr -> . expr DIV expr
    (21) expr -> . expr OR expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LT expr
    (24) expr -> . expr EQ expr
    (25) expr -> . OPENBR expr CLOSEBR
    (26) expr -> . NUM
    (27) expr -> . id
    (37) id -> . ID

    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    INC             shift and go to state 15
    DEC             shift and go to state 17
    OPENBR          shift and go to state 11
    NUM             shift and go to state 18
    ID              shift and go to state 25

    expr                           shift and go to state 57
    id                             shift and go to state 38

state 34

    (24) expr -> expr EQ . expr
    (13) expr -> . MINUS expr
    (14) expr -> . NOT expr
    (15) expr -> . INC id
    (16) expr -> . DEC id
    (17) expr -> . expr PLUS expr
    (18) expr -> . expr MINUS expr
    (19) expr -> . expr MUL expr
    (20) expr -> . expr DIV expr
    (21) expr -> . expr OR expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LT expr
    (24) expr -> . expr EQ expr
    (25) expr -> . OPENBR expr CLOSEBR
    (26) expr -> . NUM
    (27) expr -> . id
    (37) id -> . ID

    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    INC             shift and go to state 15
    DEC             shift and go to state 17
    OPENBR          shift and go to state 11
    NUM             shift and go to state 18
    ID              shift and go to state 25

    expr                           shift and go to state 58
    id                             shift and go to state 38

state 35

    (6) statement -> OPENST stmt_list . CLOSEST
    (3) stmt_list -> stmt_list . statement
    (4) statement -> . error
    (5) statement -> . expr
    (6) statement -> . OPENST stmt_list CLOSEST
    (7) statement -> . create_id
    (8) statement -> . assign
    (9) statement -> . create_1darr
    (10) statement -> . WHILE OPENBR expr CLOSEBR DO statement
    (11) statement -> . IF OPENBR expr CLOSEBR statement
    (12) statement -> . IF OPENBR expr CLOSEBR statement ELSE statement
    (13) expr -> . MINUS expr
    (14) expr -> . NOT expr
    (15) expr -> . INC id
    (16) expr -> . DEC id
    (17) expr -> . expr PLUS expr
    (18) expr -> . expr MINUS expr
    (19) expr -> . expr MUL expr
    (20) expr -> . expr DIV expr
    (21) expr -> . expr OR expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LT expr
    (24) expr -> . expr EQ expr
    (25) expr -> . OPENBR expr CLOSEBR
    (26) expr -> . NUM
    (27) expr -> . id
    (32) create_id -> . UINT id ASGN expr
    (33) create_id -> . CUINT id ASGN expr
    (34) create_id -> . BOOL id ASGN expr
    (35) create_id -> . CBOOL id ASGN expr
    (36) assign -> . id ASGN expr
    (28) create_1darr -> . 1DARRBOOL id ASGN OPENIND enum CLOSEIND
    (29) create_1darr -> . 1DARRINT id ASGN OPENIND enum CLOSEIND
    (37) id -> . ID

    CLOSEST         shift and go to state 59
    error           shift and go to state 4
    OPENST          shift and go to state 6
    WHILE           shift and go to state 10
    IF              shift and go to state 12
    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    INC             shift and go to state 15
    DEC             shift and go to state 17
    OPENBR          shift and go to state 11
    NUM             shift and go to state 18
    UINT            shift and go to state 19
    CUINT           shift and go to state 20
    BOOL            shift and go to state 21
    CBOOL           shift and go to state 22
    1DARRBOOL       shift and go to state 23
    1DARRINT        shift and go to state 24
    ID              shift and go to state 25

    statement                      shift and go to state 26
    expr                           shift and go to state 5
    create_id                      shift and go to state 7
    assign                         shift and go to state 8
    create_1darr                   shift and go to state 9
    id                             shift and go to state 16

state 36

    (10) statement -> WHILE OPENBR . expr CLOSEBR DO statement
    (13) expr -> . MINUS expr
    (14) expr -> . NOT expr
    (15) expr -> . INC id
    (16) expr -> . DEC id
    (17) expr -> . expr PLUS expr
    (18) expr -> . expr MINUS expr
    (19) expr -> . expr MUL expr
    (20) expr -> . expr DIV expr
    (21) expr -> . expr OR expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LT expr
    (24) expr -> . expr EQ expr
    (25) expr -> . OPENBR expr CLOSEBR
    (26) expr -> . NUM
    (27) expr -> . id
    (37) id -> . ID

    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    INC             shift and go to state 15
    DEC             shift and go to state 17
    OPENBR          shift and go to state 11
    NUM             shift and go to state 18
    ID              shift and go to state 25

    expr                           shift and go to state 60
    id                             shift and go to state 38

state 37

    (25) expr -> OPENBR expr . CLOSEBR
    (17) expr -> expr . PLUS expr
    (18) expr -> expr . MINUS expr
    (19) expr -> expr . MUL expr
    (20) expr -> expr . DIV expr
    (21) expr -> expr . OR expr
    (22) expr -> expr . GT expr
    (23) expr -> expr . LT expr
    (24) expr -> expr . EQ expr

    CLOSEBR         shift and go to state 61
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    MUL             shift and go to state 29
    DIV             shift and go to state 30
    OR              shift and go to state 31
    GT              shift and go to state 32
    LT              shift and go to state 33
    EQ              shift and go to state 34


state 38

    (27) expr -> id .

    CLOSEBR         reduce using rule 27 (expr -> id .)
    PLUS            reduce using rule 27 (expr -> id .)
    MINUS           reduce using rule 27 (expr -> id .)
    MUL             reduce using rule 27 (expr -> id .)
    DIV             reduce using rule 27 (expr -> id .)
    OR              reduce using rule 27 (expr -> id .)
    GT              reduce using rule 27 (expr -> id .)
    LT              reduce using rule 27 (expr -> id .)
    EQ              reduce using rule 27 (expr -> id .)
    error           reduce using rule 27 (expr -> id .)
    OPENST          reduce using rule 27 (expr -> id .)
    WHILE           reduce using rule 27 (expr -> id .)
    IF              reduce using rule 27 (expr -> id .)
    NOT             reduce using rule 27 (expr -> id .)
    INC             reduce using rule 27 (expr -> id .)
    DEC             reduce using rule 27 (expr -> id .)
    OPENBR          reduce using rule 27 (expr -> id .)
    NUM             reduce using rule 27 (expr -> id .)
    UINT            reduce using rule 27 (expr -> id .)
    CUINT           reduce using rule 27 (expr -> id .)
    BOOL            reduce using rule 27 (expr -> id .)
    CBOOL           reduce using rule 27 (expr -> id .)
    1DARRBOOL       reduce using rule 27 (expr -> id .)
    1DARRINT        reduce using rule 27 (expr -> id .)
    ID              reduce using rule 27 (expr -> id .)
    $end            reduce using rule 27 (expr -> id .)
    CLOSEST         reduce using rule 27 (expr -> id .)
    ELSE            reduce using rule 27 (expr -> id .)
    COMMA           reduce using rule 27 (expr -> id .)
    CLOSEIND        reduce using rule 27 (expr -> id .)


state 39

    (11) statement -> IF OPENBR . expr CLOSEBR statement
    (12) statement -> IF OPENBR . expr CLOSEBR statement ELSE statement
    (13) expr -> . MINUS expr
    (14) expr -> . NOT expr
    (15) expr -> . INC id
    (16) expr -> . DEC id
    (17) expr -> . expr PLUS expr
    (18) expr -> . expr MINUS expr
    (19) expr -> . expr MUL expr
    (20) expr -> . expr DIV expr
    (21) expr -> . expr OR expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LT expr
    (24) expr -> . expr EQ expr
    (25) expr -> . OPENBR expr CLOSEBR
    (26) expr -> . NUM
    (27) expr -> . id
    (37) id -> . ID

    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    INC             shift and go to state 15
    DEC             shift and go to state 17
    OPENBR          shift and go to state 11
    NUM             shift and go to state 18
    ID              shift and go to state 25

    expr                           shift and go to state 62
    id                             shift and go to state 38

state 40

    (13) expr -> MINUS expr .
    (17) expr -> expr . PLUS expr
    (18) expr -> expr . MINUS expr
    (19) expr -> expr . MUL expr
    (20) expr -> expr . DIV expr
    (21) expr -> expr . OR expr
    (22) expr -> expr . GT expr
    (23) expr -> expr . LT expr
    (24) expr -> expr . EQ expr

    PLUS            reduce using rule 13 (expr -> MINUS expr .)
    MINUS           reduce using rule 13 (expr -> MINUS expr .)
    MUL             reduce using rule 13 (expr -> MINUS expr .)
    DIV             reduce using rule 13 (expr -> MINUS expr .)
    OR              reduce using rule 13 (expr -> MINUS expr .)
    GT              reduce using rule 13 (expr -> MINUS expr .)
    LT              reduce using rule 13 (expr -> MINUS expr .)
    EQ              reduce using rule 13 (expr -> MINUS expr .)
    error           reduce using rule 13 (expr -> MINUS expr .)
    OPENST          reduce using rule 13 (expr -> MINUS expr .)
    WHILE           reduce using rule 13 (expr -> MINUS expr .)
    IF              reduce using rule 13 (expr -> MINUS expr .)
    NOT             reduce using rule 13 (expr -> MINUS expr .)
    INC             reduce using rule 13 (expr -> MINUS expr .)
    DEC             reduce using rule 13 (expr -> MINUS expr .)
    OPENBR          reduce using rule 13 (expr -> MINUS expr .)
    NUM             reduce using rule 13 (expr -> MINUS expr .)
    UINT            reduce using rule 13 (expr -> MINUS expr .)
    CUINT           reduce using rule 13 (expr -> MINUS expr .)
    BOOL            reduce using rule 13 (expr -> MINUS expr .)
    CBOOL           reduce using rule 13 (expr -> MINUS expr .)
    1DARRBOOL       reduce using rule 13 (expr -> MINUS expr .)
    1DARRINT        reduce using rule 13 (expr -> MINUS expr .)
    ID              reduce using rule 13 (expr -> MINUS expr .)
    $end            reduce using rule 13 (expr -> MINUS expr .)
    CLOSEST         reduce using rule 13 (expr -> MINUS expr .)
    CLOSEBR         reduce using rule 13 (expr -> MINUS expr .)
    ELSE            reduce using rule 13 (expr -> MINUS expr .)
    COMMA           reduce using rule 13 (expr -> MINUS expr .)
    CLOSEIND        reduce using rule 13 (expr -> MINUS expr .)

  ! PLUS            [ shift and go to state 27 ]
  ! MINUS           [ shift and go to state 28 ]
  ! MUL             [ shift and go to state 29 ]
  ! DIV             [ shift and go to state 30 ]
  ! OR              [ shift and go to state 31 ]
  ! GT              [ shift and go to state 32 ]
  ! LT              [ shift and go to state 33 ]
  ! EQ              [ shift and go to state 34 ]


state 41

    (14) expr -> NOT expr .
    (17) expr -> expr . PLUS expr
    (18) expr -> expr . MINUS expr
    (19) expr -> expr . MUL expr
    (20) expr -> expr . DIV expr
    (21) expr -> expr . OR expr
    (22) expr -> expr . GT expr
    (23) expr -> expr . LT expr
    (24) expr -> expr . EQ expr

    PLUS            reduce using rule 14 (expr -> NOT expr .)
    MINUS           reduce using rule 14 (expr -> NOT expr .)
    MUL             reduce using rule 14 (expr -> NOT expr .)
    DIV             reduce using rule 14 (expr -> NOT expr .)
    OR              reduce using rule 14 (expr -> NOT expr .)
    GT              reduce using rule 14 (expr -> NOT expr .)
    LT              reduce using rule 14 (expr -> NOT expr .)
    EQ              reduce using rule 14 (expr -> NOT expr .)
    error           reduce using rule 14 (expr -> NOT expr .)
    OPENST          reduce using rule 14 (expr -> NOT expr .)
    WHILE           reduce using rule 14 (expr -> NOT expr .)
    IF              reduce using rule 14 (expr -> NOT expr .)
    NOT             reduce using rule 14 (expr -> NOT expr .)
    INC             reduce using rule 14 (expr -> NOT expr .)
    DEC             reduce using rule 14 (expr -> NOT expr .)
    OPENBR          reduce using rule 14 (expr -> NOT expr .)
    NUM             reduce using rule 14 (expr -> NOT expr .)
    UINT            reduce using rule 14 (expr -> NOT expr .)
    CUINT           reduce using rule 14 (expr -> NOT expr .)
    BOOL            reduce using rule 14 (expr -> NOT expr .)
    CBOOL           reduce using rule 14 (expr -> NOT expr .)
    1DARRBOOL       reduce using rule 14 (expr -> NOT expr .)
    1DARRINT        reduce using rule 14 (expr -> NOT expr .)
    ID              reduce using rule 14 (expr -> NOT expr .)
    $end            reduce using rule 14 (expr -> NOT expr .)
    CLOSEST         reduce using rule 14 (expr -> NOT expr .)
    CLOSEBR         reduce using rule 14 (expr -> NOT expr .)
    ELSE            reduce using rule 14 (expr -> NOT expr .)
    COMMA           reduce using rule 14 (expr -> NOT expr .)
    CLOSEIND        reduce using rule 14 (expr -> NOT expr .)

  ! PLUS            [ shift and go to state 27 ]
  ! MINUS           [ shift and go to state 28 ]
  ! MUL             [ shift and go to state 29 ]
  ! DIV             [ shift and go to state 30 ]
  ! OR              [ shift and go to state 31 ]
  ! GT              [ shift and go to state 32 ]
  ! LT              [ shift and go to state 33 ]
  ! EQ              [ shift and go to state 34 ]


state 42

    (15) expr -> INC id .

    PLUS            reduce using rule 15 (expr -> INC id .)
    MINUS           reduce using rule 15 (expr -> INC id .)
    MUL             reduce using rule 15 (expr -> INC id .)
    DIV             reduce using rule 15 (expr -> INC id .)
    OR              reduce using rule 15 (expr -> INC id .)
    GT              reduce using rule 15 (expr -> INC id .)
    LT              reduce using rule 15 (expr -> INC id .)
    EQ              reduce using rule 15 (expr -> INC id .)
    error           reduce using rule 15 (expr -> INC id .)
    OPENST          reduce using rule 15 (expr -> INC id .)
    WHILE           reduce using rule 15 (expr -> INC id .)
    IF              reduce using rule 15 (expr -> INC id .)
    NOT             reduce using rule 15 (expr -> INC id .)
    INC             reduce using rule 15 (expr -> INC id .)
    DEC             reduce using rule 15 (expr -> INC id .)
    OPENBR          reduce using rule 15 (expr -> INC id .)
    NUM             reduce using rule 15 (expr -> INC id .)
    UINT            reduce using rule 15 (expr -> INC id .)
    CUINT           reduce using rule 15 (expr -> INC id .)
    BOOL            reduce using rule 15 (expr -> INC id .)
    CBOOL           reduce using rule 15 (expr -> INC id .)
    1DARRBOOL       reduce using rule 15 (expr -> INC id .)
    1DARRINT        reduce using rule 15 (expr -> INC id .)
    ID              reduce using rule 15 (expr -> INC id .)
    $end            reduce using rule 15 (expr -> INC id .)
    CLOSEST         reduce using rule 15 (expr -> INC id .)
    CLOSEBR         reduce using rule 15 (expr -> INC id .)
    ELSE            reduce using rule 15 (expr -> INC id .)
    COMMA           reduce using rule 15 (expr -> INC id .)
    CLOSEIND        reduce using rule 15 (expr -> INC id .)


state 43

    (36) assign -> id ASGN . expr
    (13) expr -> . MINUS expr
    (14) expr -> . NOT expr
    (15) expr -> . INC id
    (16) expr -> . DEC id
    (17) expr -> . expr PLUS expr
    (18) expr -> . expr MINUS expr
    (19) expr -> . expr MUL expr
    (20) expr -> . expr DIV expr
    (21) expr -> . expr OR expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LT expr
    (24) expr -> . expr EQ expr
    (25) expr -> . OPENBR expr CLOSEBR
    (26) expr -> . NUM
    (27) expr -> . id
    (37) id -> . ID

    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    INC             shift and go to state 15
    DEC             shift and go to state 17
    OPENBR          shift and go to state 11
    NUM             shift and go to state 18
    ID              shift and go to state 25

    id                             shift and go to state 38
    expr                           shift and go to state 63

state 44

    (16) expr -> DEC id .

    PLUS            reduce using rule 16 (expr -> DEC id .)
    MINUS           reduce using rule 16 (expr -> DEC id .)
    MUL             reduce using rule 16 (expr -> DEC id .)
    DIV             reduce using rule 16 (expr -> DEC id .)
    OR              reduce using rule 16 (expr -> DEC id .)
    GT              reduce using rule 16 (expr -> DEC id .)
    LT              reduce using rule 16 (expr -> DEC id .)
    EQ              reduce using rule 16 (expr -> DEC id .)
    error           reduce using rule 16 (expr -> DEC id .)
    OPENST          reduce using rule 16 (expr -> DEC id .)
    WHILE           reduce using rule 16 (expr -> DEC id .)
    IF              reduce using rule 16 (expr -> DEC id .)
    NOT             reduce using rule 16 (expr -> DEC id .)
    INC             reduce using rule 16 (expr -> DEC id .)
    DEC             reduce using rule 16 (expr -> DEC id .)
    OPENBR          reduce using rule 16 (expr -> DEC id .)
    NUM             reduce using rule 16 (expr -> DEC id .)
    UINT            reduce using rule 16 (expr -> DEC id .)
    CUINT           reduce using rule 16 (expr -> DEC id .)
    BOOL            reduce using rule 16 (expr -> DEC id .)
    CBOOL           reduce using rule 16 (expr -> DEC id .)
    1DARRBOOL       reduce using rule 16 (expr -> DEC id .)
    1DARRINT        reduce using rule 16 (expr -> DEC id .)
    ID              reduce using rule 16 (expr -> DEC id .)
    $end            reduce using rule 16 (expr -> DEC id .)
    CLOSEST         reduce using rule 16 (expr -> DEC id .)
    CLOSEBR         reduce using rule 16 (expr -> DEC id .)
    ELSE            reduce using rule 16 (expr -> DEC id .)
    COMMA           reduce using rule 16 (expr -> DEC id .)
    CLOSEIND        reduce using rule 16 (expr -> DEC id .)


state 45

    (32) create_id -> UINT id . ASGN expr

    ASGN            shift and go to state 64


state 46

    (33) create_id -> CUINT id . ASGN expr

    ASGN            shift and go to state 65


state 47

    (34) create_id -> BOOL id . ASGN expr

    ASGN            shift and go to state 66


state 48

    (35) create_id -> CBOOL id . ASGN expr

    ASGN            shift and go to state 67


state 49

    (28) create_1darr -> 1DARRBOOL id . ASGN OPENIND enum CLOSEIND

    ASGN            shift and go to state 68


state 50

    (29) create_1darr -> 1DARRINT id . ASGN OPENIND enum CLOSEIND

    ASGN            shift and go to state 69


state 51

    (17) expr -> expr PLUS expr .
    (17) expr -> expr . PLUS expr
    (18) expr -> expr . MINUS expr
    (19) expr -> expr . MUL expr
    (20) expr -> expr . DIV expr
    (21) expr -> expr . OR expr
    (22) expr -> expr . GT expr
    (23) expr -> expr . LT expr
    (24) expr -> expr . EQ expr

    PLUS            reduce using rule 17 (expr -> expr PLUS expr .)
    MINUS           reduce using rule 17 (expr -> expr PLUS expr .)
    OR              reduce using rule 17 (expr -> expr PLUS expr .)
    GT              reduce using rule 17 (expr -> expr PLUS expr .)
    LT              reduce using rule 17 (expr -> expr PLUS expr .)
    EQ              reduce using rule 17 (expr -> expr PLUS expr .)
    error           reduce using rule 17 (expr -> expr PLUS expr .)
    OPENST          reduce using rule 17 (expr -> expr PLUS expr .)
    WHILE           reduce using rule 17 (expr -> expr PLUS expr .)
    IF              reduce using rule 17 (expr -> expr PLUS expr .)
    NOT             reduce using rule 17 (expr -> expr PLUS expr .)
    INC             reduce using rule 17 (expr -> expr PLUS expr .)
    DEC             reduce using rule 17 (expr -> expr PLUS expr .)
    OPENBR          reduce using rule 17 (expr -> expr PLUS expr .)
    NUM             reduce using rule 17 (expr -> expr PLUS expr .)
    UINT            reduce using rule 17 (expr -> expr PLUS expr .)
    CUINT           reduce using rule 17 (expr -> expr PLUS expr .)
    BOOL            reduce using rule 17 (expr -> expr PLUS expr .)
    CBOOL           reduce using rule 17 (expr -> expr PLUS expr .)
    1DARRBOOL       reduce using rule 17 (expr -> expr PLUS expr .)
    1DARRINT        reduce using rule 17 (expr -> expr PLUS expr .)
    ID              reduce using rule 17 (expr -> expr PLUS expr .)
    $end            reduce using rule 17 (expr -> expr PLUS expr .)
    CLOSEST         reduce using rule 17 (expr -> expr PLUS expr .)
    CLOSEBR         reduce using rule 17 (expr -> expr PLUS expr .)
    ELSE            reduce using rule 17 (expr -> expr PLUS expr .)
    COMMA           reduce using rule 17 (expr -> expr PLUS expr .)
    CLOSEIND        reduce using rule 17 (expr -> expr PLUS expr .)
    MUL             shift and go to state 29
    DIV             shift and go to state 30

  ! MUL             [ reduce using rule 17 (expr -> expr PLUS expr .) ]
  ! DIV             [ reduce using rule 17 (expr -> expr PLUS expr .) ]
  ! PLUS            [ shift and go to state 27 ]
  ! MINUS           [ shift and go to state 28 ]
  ! OR              [ shift and go to state 31 ]
  ! GT              [ shift and go to state 32 ]
  ! LT              [ shift and go to state 33 ]
  ! EQ              [ shift and go to state 34 ]


state 52

    (18) expr -> expr MINUS expr .
    (17) expr -> expr . PLUS expr
    (18) expr -> expr . MINUS expr
    (19) expr -> expr . MUL expr
    (20) expr -> expr . DIV expr
    (21) expr -> expr . OR expr
    (22) expr -> expr . GT expr
    (23) expr -> expr . LT expr
    (24) expr -> expr . EQ expr

    PLUS            reduce using rule 18 (expr -> expr MINUS expr .)
    MINUS           reduce using rule 18 (expr -> expr MINUS expr .)
    OR              reduce using rule 18 (expr -> expr MINUS expr .)
    GT              reduce using rule 18 (expr -> expr MINUS expr .)
    LT              reduce using rule 18 (expr -> expr MINUS expr .)
    EQ              reduce using rule 18 (expr -> expr MINUS expr .)
    error           reduce using rule 18 (expr -> expr MINUS expr .)
    OPENST          reduce using rule 18 (expr -> expr MINUS expr .)
    WHILE           reduce using rule 18 (expr -> expr MINUS expr .)
    IF              reduce using rule 18 (expr -> expr MINUS expr .)
    NOT             reduce using rule 18 (expr -> expr MINUS expr .)
    INC             reduce using rule 18 (expr -> expr MINUS expr .)
    DEC             reduce using rule 18 (expr -> expr MINUS expr .)
    OPENBR          reduce using rule 18 (expr -> expr MINUS expr .)
    NUM             reduce using rule 18 (expr -> expr MINUS expr .)
    UINT            reduce using rule 18 (expr -> expr MINUS expr .)
    CUINT           reduce using rule 18 (expr -> expr MINUS expr .)
    BOOL            reduce using rule 18 (expr -> expr MINUS expr .)
    CBOOL           reduce using rule 18 (expr -> expr MINUS expr .)
    1DARRBOOL       reduce using rule 18 (expr -> expr MINUS expr .)
    1DARRINT        reduce using rule 18 (expr -> expr MINUS expr .)
    ID              reduce using rule 18 (expr -> expr MINUS expr .)
    $end            reduce using rule 18 (expr -> expr MINUS expr .)
    CLOSEST         reduce using rule 18 (expr -> expr MINUS expr .)
    CLOSEBR         reduce using rule 18 (expr -> expr MINUS expr .)
    ELSE            reduce using rule 18 (expr -> expr MINUS expr .)
    COMMA           reduce using rule 18 (expr -> expr MINUS expr .)
    CLOSEIND        reduce using rule 18 (expr -> expr MINUS expr .)
    MUL             shift and go to state 29
    DIV             shift and go to state 30

  ! MUL             [ reduce using rule 18 (expr -> expr MINUS expr .) ]
  ! DIV             [ reduce using rule 18 (expr -> expr MINUS expr .) ]
  ! PLUS            [ shift and go to state 27 ]
  ! MINUS           [ shift and go to state 28 ]
  ! OR              [ shift and go to state 31 ]
  ! GT              [ shift and go to state 32 ]
  ! LT              [ shift and go to state 33 ]
  ! EQ              [ shift and go to state 34 ]


state 53

    (19) expr -> expr MUL expr .
    (17) expr -> expr . PLUS expr
    (18) expr -> expr . MINUS expr
    (19) expr -> expr . MUL expr
    (20) expr -> expr . DIV expr
    (21) expr -> expr . OR expr
    (22) expr -> expr . GT expr
    (23) expr -> expr . LT expr
    (24) expr -> expr . EQ expr

    PLUS            reduce using rule 19 (expr -> expr MUL expr .)
    MINUS           reduce using rule 19 (expr -> expr MUL expr .)
    MUL             reduce using rule 19 (expr -> expr MUL expr .)
    DIV             reduce using rule 19 (expr -> expr MUL expr .)
    OR              reduce using rule 19 (expr -> expr MUL expr .)
    GT              reduce using rule 19 (expr -> expr MUL expr .)
    LT              reduce using rule 19 (expr -> expr MUL expr .)
    EQ              reduce using rule 19 (expr -> expr MUL expr .)
    error           reduce using rule 19 (expr -> expr MUL expr .)
    OPENST          reduce using rule 19 (expr -> expr MUL expr .)
    WHILE           reduce using rule 19 (expr -> expr MUL expr .)
    IF              reduce using rule 19 (expr -> expr MUL expr .)
    NOT             reduce using rule 19 (expr -> expr MUL expr .)
    INC             reduce using rule 19 (expr -> expr MUL expr .)
    DEC             reduce using rule 19 (expr -> expr MUL expr .)
    OPENBR          reduce using rule 19 (expr -> expr MUL expr .)
    NUM             reduce using rule 19 (expr -> expr MUL expr .)
    UINT            reduce using rule 19 (expr -> expr MUL expr .)
    CUINT           reduce using rule 19 (expr -> expr MUL expr .)
    BOOL            reduce using rule 19 (expr -> expr MUL expr .)
    CBOOL           reduce using rule 19 (expr -> expr MUL expr .)
    1DARRBOOL       reduce using rule 19 (expr -> expr MUL expr .)
    1DARRINT        reduce using rule 19 (expr -> expr MUL expr .)
    ID              reduce using rule 19 (expr -> expr MUL expr .)
    $end            reduce using rule 19 (expr -> expr MUL expr .)
    CLOSEST         reduce using rule 19 (expr -> expr MUL expr .)
    CLOSEBR         reduce using rule 19 (expr -> expr MUL expr .)
    ELSE            reduce using rule 19 (expr -> expr MUL expr .)
    COMMA           reduce using rule 19 (expr -> expr MUL expr .)
    CLOSEIND        reduce using rule 19 (expr -> expr MUL expr .)

  ! PLUS            [ shift and go to state 27 ]
  ! MINUS           [ shift and go to state 28 ]
  ! MUL             [ shift and go to state 29 ]
  ! DIV             [ shift and go to state 30 ]
  ! OR              [ shift and go to state 31 ]
  ! GT              [ shift and go to state 32 ]
  ! LT              [ shift and go to state 33 ]
  ! EQ              [ shift and go to state 34 ]


state 54

    (20) expr -> expr DIV expr .
    (17) expr -> expr . PLUS expr
    (18) expr -> expr . MINUS expr
    (19) expr -> expr . MUL expr
    (20) expr -> expr . DIV expr
    (21) expr -> expr . OR expr
    (22) expr -> expr . GT expr
    (23) expr -> expr . LT expr
    (24) expr -> expr . EQ expr

    PLUS            reduce using rule 20 (expr -> expr DIV expr .)
    MINUS           reduce using rule 20 (expr -> expr DIV expr .)
    MUL             reduce using rule 20 (expr -> expr DIV expr .)
    DIV             reduce using rule 20 (expr -> expr DIV expr .)
    OR              reduce using rule 20 (expr -> expr DIV expr .)
    GT              reduce using rule 20 (expr -> expr DIV expr .)
    LT              reduce using rule 20 (expr -> expr DIV expr .)
    EQ              reduce using rule 20 (expr -> expr DIV expr .)
    error           reduce using rule 20 (expr -> expr DIV expr .)
    OPENST          reduce using rule 20 (expr -> expr DIV expr .)
    WHILE           reduce using rule 20 (expr -> expr DIV expr .)
    IF              reduce using rule 20 (expr -> expr DIV expr .)
    NOT             reduce using rule 20 (expr -> expr DIV expr .)
    INC             reduce using rule 20 (expr -> expr DIV expr .)
    DEC             reduce using rule 20 (expr -> expr DIV expr .)
    OPENBR          reduce using rule 20 (expr -> expr DIV expr .)
    NUM             reduce using rule 20 (expr -> expr DIV expr .)
    UINT            reduce using rule 20 (expr -> expr DIV expr .)
    CUINT           reduce using rule 20 (expr -> expr DIV expr .)
    BOOL            reduce using rule 20 (expr -> expr DIV expr .)
    CBOOL           reduce using rule 20 (expr -> expr DIV expr .)
    1DARRBOOL       reduce using rule 20 (expr -> expr DIV expr .)
    1DARRINT        reduce using rule 20 (expr -> expr DIV expr .)
    ID              reduce using rule 20 (expr -> expr DIV expr .)
    $end            reduce using rule 20 (expr -> expr DIV expr .)
    CLOSEST         reduce using rule 20 (expr -> expr DIV expr .)
    CLOSEBR         reduce using rule 20 (expr -> expr DIV expr .)
    ELSE            reduce using rule 20 (expr -> expr DIV expr .)
    COMMA           reduce using rule 20 (expr -> expr DIV expr .)
    CLOSEIND        reduce using rule 20 (expr -> expr DIV expr .)

  ! PLUS            [ shift and go to state 27 ]
  ! MINUS           [ shift and go to state 28 ]
  ! MUL             [ shift and go to state 29 ]
  ! DIV             [ shift and go to state 30 ]
  ! OR              [ shift and go to state 31 ]
  ! GT              [ shift and go to state 32 ]
  ! LT              [ shift and go to state 33 ]
  ! EQ              [ shift and go to state 34 ]


state 55

    (21) expr -> expr OR expr .
    (17) expr -> expr . PLUS expr
    (18) expr -> expr . MINUS expr
    (19) expr -> expr . MUL expr
    (20) expr -> expr . DIV expr
    (21) expr -> expr . OR expr
    (22) expr -> expr . GT expr
    (23) expr -> expr . LT expr
    (24) expr -> expr . EQ expr

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
    error           reduce using rule 21 (expr -> expr OR expr .)
    OPENST          reduce using rule 21 (expr -> expr OR expr .)
    WHILE           reduce using rule 21 (expr -> expr OR expr .)
    IF              reduce using rule 21 (expr -> expr OR expr .)
    NOT             reduce using rule 21 (expr -> expr OR expr .)
    INC             reduce using rule 21 (expr -> expr OR expr .)
    DEC             reduce using rule 21 (expr -> expr OR expr .)
    OPENBR          reduce using rule 21 (expr -> expr OR expr .)
    NUM             reduce using rule 21 (expr -> expr OR expr .)
    UINT            reduce using rule 21 (expr -> expr OR expr .)
    CUINT           reduce using rule 21 (expr -> expr OR expr .)
    BOOL            reduce using rule 21 (expr -> expr OR expr .)
    CBOOL           reduce using rule 21 (expr -> expr OR expr .)
    1DARRBOOL       reduce using rule 21 (expr -> expr OR expr .)
    1DARRINT        reduce using rule 21 (expr -> expr OR expr .)
    ID              reduce using rule 21 (expr -> expr OR expr .)
    $end            reduce using rule 21 (expr -> expr OR expr .)
    CLOSEST         reduce using rule 21 (expr -> expr OR expr .)
    CLOSEBR         reduce using rule 21 (expr -> expr OR expr .)
    ELSE            reduce using rule 21 (expr -> expr OR expr .)
    COMMA           reduce using rule 21 (expr -> expr OR expr .)
    CLOSEIND        reduce using rule 21 (expr -> expr OR expr .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    MUL             shift and go to state 29
    DIV             shift and go to state 30
    OR              shift and go to state 31
    GT              shift and go to state 32
    LT              shift and go to state 33
    EQ              shift and go to state 34

  ! PLUS            [ reduce using rule 21 (expr -> expr OR expr .) ]
  ! MINUS           [ reduce using rule 21 (expr -> expr OR expr .) ]
  ! MUL             [ reduce using rule 21 (expr -> expr OR expr .) ]
  ! DIV             [ reduce using rule 21 (expr -> expr OR expr .) ]
  ! OR              [ reduce using rule 21 (expr -> expr OR expr .) ]
  ! GT              [ reduce using rule 21 (expr -> expr OR expr .) ]
  ! LT              [ reduce using rule 21 (expr -> expr OR expr .) ]
  ! EQ              [ reduce using rule 21 (expr -> expr OR expr .) ]


state 56

    (22) expr -> expr GT expr .
    (17) expr -> expr . PLUS expr
    (18) expr -> expr . MINUS expr
    (19) expr -> expr . MUL expr
    (20) expr -> expr . DIV expr
    (21) expr -> expr . OR expr
    (22) expr -> expr . GT expr
    (23) expr -> expr . LT expr
    (24) expr -> expr . EQ expr

    OR              reduce using rule 22 (expr -> expr GT expr .)
    GT              reduce using rule 22 (expr -> expr GT expr .)
    LT              reduce using rule 22 (expr -> expr GT expr .)
    EQ              reduce using rule 22 (expr -> expr GT expr .)
    error           reduce using rule 22 (expr -> expr GT expr .)
    OPENST          reduce using rule 22 (expr -> expr GT expr .)
    WHILE           reduce using rule 22 (expr -> expr GT expr .)
    IF              reduce using rule 22 (expr -> expr GT expr .)
    NOT             reduce using rule 22 (expr -> expr GT expr .)
    INC             reduce using rule 22 (expr -> expr GT expr .)
    DEC             reduce using rule 22 (expr -> expr GT expr .)
    OPENBR          reduce using rule 22 (expr -> expr GT expr .)
    NUM             reduce using rule 22 (expr -> expr GT expr .)
    UINT            reduce using rule 22 (expr -> expr GT expr .)
    CUINT           reduce using rule 22 (expr -> expr GT expr .)
    BOOL            reduce using rule 22 (expr -> expr GT expr .)
    CBOOL           reduce using rule 22 (expr -> expr GT expr .)
    1DARRBOOL       reduce using rule 22 (expr -> expr GT expr .)
    1DARRINT        reduce using rule 22 (expr -> expr GT expr .)
    ID              reduce using rule 22 (expr -> expr GT expr .)
    $end            reduce using rule 22 (expr -> expr GT expr .)
    CLOSEST         reduce using rule 22 (expr -> expr GT expr .)
    CLOSEBR         reduce using rule 22 (expr -> expr GT expr .)
    ELSE            reduce using rule 22 (expr -> expr GT expr .)
    COMMA           reduce using rule 22 (expr -> expr GT expr .)
    CLOSEIND        reduce using rule 22 (expr -> expr GT expr .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    MUL             shift and go to state 29
    DIV             shift and go to state 30

  ! PLUS            [ reduce using rule 22 (expr -> expr GT expr .) ]
  ! MINUS           [ reduce using rule 22 (expr -> expr GT expr .) ]
  ! MUL             [ reduce using rule 22 (expr -> expr GT expr .) ]
  ! DIV             [ reduce using rule 22 (expr -> expr GT expr .) ]
  ! OR              [ shift and go to state 31 ]
  ! GT              [ shift and go to state 32 ]
  ! LT              [ shift and go to state 33 ]
  ! EQ              [ shift and go to state 34 ]


state 57

    (23) expr -> expr LT expr .
    (17) expr -> expr . PLUS expr
    (18) expr -> expr . MINUS expr
    (19) expr -> expr . MUL expr
    (20) expr -> expr . DIV expr
    (21) expr -> expr . OR expr
    (22) expr -> expr . GT expr
    (23) expr -> expr . LT expr
    (24) expr -> expr . EQ expr

    OR              reduce using rule 23 (expr -> expr LT expr .)
    GT              reduce using rule 23 (expr -> expr LT expr .)
    LT              reduce using rule 23 (expr -> expr LT expr .)
    EQ              reduce using rule 23 (expr -> expr LT expr .)
    error           reduce using rule 23 (expr -> expr LT expr .)
    OPENST          reduce using rule 23 (expr -> expr LT expr .)
    WHILE           reduce using rule 23 (expr -> expr LT expr .)
    IF              reduce using rule 23 (expr -> expr LT expr .)
    NOT             reduce using rule 23 (expr -> expr LT expr .)
    INC             reduce using rule 23 (expr -> expr LT expr .)
    DEC             reduce using rule 23 (expr -> expr LT expr .)
    OPENBR          reduce using rule 23 (expr -> expr LT expr .)
    NUM             reduce using rule 23 (expr -> expr LT expr .)
    UINT            reduce using rule 23 (expr -> expr LT expr .)
    CUINT           reduce using rule 23 (expr -> expr LT expr .)
    BOOL            reduce using rule 23 (expr -> expr LT expr .)
    CBOOL           reduce using rule 23 (expr -> expr LT expr .)
    1DARRBOOL       reduce using rule 23 (expr -> expr LT expr .)
    1DARRINT        reduce using rule 23 (expr -> expr LT expr .)
    ID              reduce using rule 23 (expr -> expr LT expr .)
    $end            reduce using rule 23 (expr -> expr LT expr .)
    CLOSEST         reduce using rule 23 (expr -> expr LT expr .)
    CLOSEBR         reduce using rule 23 (expr -> expr LT expr .)
    ELSE            reduce using rule 23 (expr -> expr LT expr .)
    COMMA           reduce using rule 23 (expr -> expr LT expr .)
    CLOSEIND        reduce using rule 23 (expr -> expr LT expr .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    MUL             shift and go to state 29
    DIV             shift and go to state 30

  ! PLUS            [ reduce using rule 23 (expr -> expr LT expr .) ]
  ! MINUS           [ reduce using rule 23 (expr -> expr LT expr .) ]
  ! MUL             [ reduce using rule 23 (expr -> expr LT expr .) ]
  ! DIV             [ reduce using rule 23 (expr -> expr LT expr .) ]
  ! OR              [ shift and go to state 31 ]
  ! GT              [ shift and go to state 32 ]
  ! LT              [ shift and go to state 33 ]
  ! EQ              [ shift and go to state 34 ]


state 58

    (24) expr -> expr EQ expr .
    (17) expr -> expr . PLUS expr
    (18) expr -> expr . MINUS expr
    (19) expr -> expr . MUL expr
    (20) expr -> expr . DIV expr
    (21) expr -> expr . OR expr
    (22) expr -> expr . GT expr
    (23) expr -> expr . LT expr
    (24) expr -> expr . EQ expr

    OR              reduce using rule 24 (expr -> expr EQ expr .)
    GT              reduce using rule 24 (expr -> expr EQ expr .)
    LT              reduce using rule 24 (expr -> expr EQ expr .)
    EQ              reduce using rule 24 (expr -> expr EQ expr .)
    error           reduce using rule 24 (expr -> expr EQ expr .)
    OPENST          reduce using rule 24 (expr -> expr EQ expr .)
    WHILE           reduce using rule 24 (expr -> expr EQ expr .)
    IF              reduce using rule 24 (expr -> expr EQ expr .)
    NOT             reduce using rule 24 (expr -> expr EQ expr .)
    INC             reduce using rule 24 (expr -> expr EQ expr .)
    DEC             reduce using rule 24 (expr -> expr EQ expr .)
    OPENBR          reduce using rule 24 (expr -> expr EQ expr .)
    NUM             reduce using rule 24 (expr -> expr EQ expr .)
    UINT            reduce using rule 24 (expr -> expr EQ expr .)
    CUINT           reduce using rule 24 (expr -> expr EQ expr .)
    BOOL            reduce using rule 24 (expr -> expr EQ expr .)
    CBOOL           reduce using rule 24 (expr -> expr EQ expr .)
    1DARRBOOL       reduce using rule 24 (expr -> expr EQ expr .)
    1DARRINT        reduce using rule 24 (expr -> expr EQ expr .)
    ID              reduce using rule 24 (expr -> expr EQ expr .)
    $end            reduce using rule 24 (expr -> expr EQ expr .)
    CLOSEST         reduce using rule 24 (expr -> expr EQ expr .)
    CLOSEBR         reduce using rule 24 (expr -> expr EQ expr .)
    ELSE            reduce using rule 24 (expr -> expr EQ expr .)
    COMMA           reduce using rule 24 (expr -> expr EQ expr .)
    CLOSEIND        reduce using rule 24 (expr -> expr EQ expr .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    MUL             shift and go to state 29
    DIV             shift and go to state 30

  ! PLUS            [ reduce using rule 24 (expr -> expr EQ expr .) ]
  ! MINUS           [ reduce using rule 24 (expr -> expr EQ expr .) ]
  ! MUL             [ reduce using rule 24 (expr -> expr EQ expr .) ]
  ! DIV             [ reduce using rule 24 (expr -> expr EQ expr .) ]
  ! OR              [ shift and go to state 31 ]
  ! GT              [ shift and go to state 32 ]
  ! LT              [ shift and go to state 33 ]
  ! EQ              [ shift and go to state 34 ]


state 59

    (6) statement -> OPENST stmt_list CLOSEST .

    error           reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    OPENST          reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    WHILE           reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    IF              reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    MINUS           reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    NOT             reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    INC             reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    DEC             reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    OPENBR          reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    NUM             reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    UINT            reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    CUINT           reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    BOOL            reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    CBOOL           reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    1DARRBOOL       reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    1DARRINT        reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    ID              reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    $end            reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    CLOSEST         reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    ELSE            reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)


state 60

    (10) statement -> WHILE OPENBR expr . CLOSEBR DO statement
    (17) expr -> expr . PLUS expr
    (18) expr -> expr . MINUS expr
    (19) expr -> expr . MUL expr
    (20) expr -> expr . DIV expr
    (21) expr -> expr . OR expr
    (22) expr -> expr . GT expr
    (23) expr -> expr . LT expr
    (24) expr -> expr . EQ expr

    CLOSEBR         shift and go to state 70
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    MUL             shift and go to state 29
    DIV             shift and go to state 30
    OR              shift and go to state 31
    GT              shift and go to state 32
    LT              shift and go to state 33
    EQ              shift and go to state 34


state 61

    (25) expr -> OPENBR expr CLOSEBR .

    PLUS            reduce using rule 25 (expr -> OPENBR expr CLOSEBR .)
    MINUS           reduce using rule 25 (expr -> OPENBR expr CLOSEBR .)
    MUL             reduce using rule 25 (expr -> OPENBR expr CLOSEBR .)
    DIV             reduce using rule 25 (expr -> OPENBR expr CLOSEBR .)
    OR              reduce using rule 25 (expr -> OPENBR expr CLOSEBR .)
    GT              reduce using rule 25 (expr -> OPENBR expr CLOSEBR .)
    LT              reduce using rule 25 (expr -> OPENBR expr CLOSEBR .)
    EQ              reduce using rule 25 (expr -> OPENBR expr CLOSEBR .)
    error           reduce using rule 25 (expr -> OPENBR expr CLOSEBR .)
    OPENST          reduce using rule 25 (expr -> OPENBR expr CLOSEBR .)
    WHILE           reduce using rule 25 (expr -> OPENBR expr CLOSEBR .)
    IF              reduce using rule 25 (expr -> OPENBR expr CLOSEBR .)
    NOT             reduce using rule 25 (expr -> OPENBR expr CLOSEBR .)
    INC             reduce using rule 25 (expr -> OPENBR expr CLOSEBR .)
    DEC             reduce using rule 25 (expr -> OPENBR expr CLOSEBR .)
    OPENBR          reduce using rule 25 (expr -> OPENBR expr CLOSEBR .)
    NUM             reduce using rule 25 (expr -> OPENBR expr CLOSEBR .)
    UINT            reduce using rule 25 (expr -> OPENBR expr CLOSEBR .)
    CUINT           reduce using rule 25 (expr -> OPENBR expr CLOSEBR .)
    BOOL            reduce using rule 25 (expr -> OPENBR expr CLOSEBR .)
    CBOOL           reduce using rule 25 (expr -> OPENBR expr CLOSEBR .)
    1DARRBOOL       reduce using rule 25 (expr -> OPENBR expr CLOSEBR .)
    1DARRINT        reduce using rule 25 (expr -> OPENBR expr CLOSEBR .)
    ID              reduce using rule 25 (expr -> OPENBR expr CLOSEBR .)
    $end            reduce using rule 25 (expr -> OPENBR expr CLOSEBR .)
    CLOSEST         reduce using rule 25 (expr -> OPENBR expr CLOSEBR .)
    CLOSEBR         reduce using rule 25 (expr -> OPENBR expr CLOSEBR .)
    ELSE            reduce using rule 25 (expr -> OPENBR expr CLOSEBR .)
    COMMA           reduce using rule 25 (expr -> OPENBR expr CLOSEBR .)
    CLOSEIND        reduce using rule 25 (expr -> OPENBR expr CLOSEBR .)


state 62

    (11) statement -> IF OPENBR expr . CLOSEBR statement
    (12) statement -> IF OPENBR expr . CLOSEBR statement ELSE statement
    (17) expr -> expr . PLUS expr
    (18) expr -> expr . MINUS expr
    (19) expr -> expr . MUL expr
    (20) expr -> expr . DIV expr
    (21) expr -> expr . OR expr
    (22) expr -> expr . GT expr
    (23) expr -> expr . LT expr
    (24) expr -> expr . EQ expr

    CLOSEBR         shift and go to state 71
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    MUL             shift and go to state 29
    DIV             shift and go to state 30
    OR              shift and go to state 31
    GT              shift and go to state 32
    LT              shift and go to state 33
    EQ              shift and go to state 34


state 63

    (36) assign -> id ASGN expr .
    (17) expr -> expr . PLUS expr
    (18) expr -> expr . MINUS expr
    (19) expr -> expr . MUL expr
    (20) expr -> expr . DIV expr
    (21) expr -> expr . OR expr
    (22) expr -> expr . GT expr
    (23) expr -> expr . LT expr
    (24) expr -> expr . EQ expr

    error           reduce using rule 36 (assign -> id ASGN expr .)
    OPENST          reduce using rule 36 (assign -> id ASGN expr .)
    WHILE           reduce using rule 36 (assign -> id ASGN expr .)
    IF              reduce using rule 36 (assign -> id ASGN expr .)
    NOT             reduce using rule 36 (assign -> id ASGN expr .)
    INC             reduce using rule 36 (assign -> id ASGN expr .)
    DEC             reduce using rule 36 (assign -> id ASGN expr .)
    OPENBR          reduce using rule 36 (assign -> id ASGN expr .)
    NUM             reduce using rule 36 (assign -> id ASGN expr .)
    UINT            reduce using rule 36 (assign -> id ASGN expr .)
    CUINT           reduce using rule 36 (assign -> id ASGN expr .)
    BOOL            reduce using rule 36 (assign -> id ASGN expr .)
    CBOOL           reduce using rule 36 (assign -> id ASGN expr .)
    1DARRBOOL       reduce using rule 36 (assign -> id ASGN expr .)
    1DARRINT        reduce using rule 36 (assign -> id ASGN expr .)
    ID              reduce using rule 36 (assign -> id ASGN expr .)
    $end            reduce using rule 36 (assign -> id ASGN expr .)
    CLOSEST         reduce using rule 36 (assign -> id ASGN expr .)
    ELSE            reduce using rule 36 (assign -> id ASGN expr .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    MUL             shift and go to state 29
    DIV             shift and go to state 30
    OR              shift and go to state 31
    GT              shift and go to state 32
    LT              shift and go to state 33
    EQ              shift and go to state 34

  ! MINUS           [ reduce using rule 36 (assign -> id ASGN expr .) ]


state 64

    (32) create_id -> UINT id ASGN . expr
    (13) expr -> . MINUS expr
    (14) expr -> . NOT expr
    (15) expr -> . INC id
    (16) expr -> . DEC id
    (17) expr -> . expr PLUS expr
    (18) expr -> . expr MINUS expr
    (19) expr -> . expr MUL expr
    (20) expr -> . expr DIV expr
    (21) expr -> . expr OR expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LT expr
    (24) expr -> . expr EQ expr
    (25) expr -> . OPENBR expr CLOSEBR
    (26) expr -> . NUM
    (27) expr -> . id
    (37) id -> . ID

    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    INC             shift and go to state 15
    DEC             shift and go to state 17
    OPENBR          shift and go to state 11
    NUM             shift and go to state 18
    ID              shift and go to state 25

    id                             shift and go to state 38
    expr                           shift and go to state 72

state 65

    (33) create_id -> CUINT id ASGN . expr
    (13) expr -> . MINUS expr
    (14) expr -> . NOT expr
    (15) expr -> . INC id
    (16) expr -> . DEC id
    (17) expr -> . expr PLUS expr
    (18) expr -> . expr MINUS expr
    (19) expr -> . expr MUL expr
    (20) expr -> . expr DIV expr
    (21) expr -> . expr OR expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LT expr
    (24) expr -> . expr EQ expr
    (25) expr -> . OPENBR expr CLOSEBR
    (26) expr -> . NUM
    (27) expr -> . id
    (37) id -> . ID

    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    INC             shift and go to state 15
    DEC             shift and go to state 17
    OPENBR          shift and go to state 11
    NUM             shift and go to state 18
    ID              shift and go to state 25

    id                             shift and go to state 38
    expr                           shift and go to state 73

state 66

    (34) create_id -> BOOL id ASGN . expr
    (13) expr -> . MINUS expr
    (14) expr -> . NOT expr
    (15) expr -> . INC id
    (16) expr -> . DEC id
    (17) expr -> . expr PLUS expr
    (18) expr -> . expr MINUS expr
    (19) expr -> . expr MUL expr
    (20) expr -> . expr DIV expr
    (21) expr -> . expr OR expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LT expr
    (24) expr -> . expr EQ expr
    (25) expr -> . OPENBR expr CLOSEBR
    (26) expr -> . NUM
    (27) expr -> . id
    (37) id -> . ID

    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    INC             shift and go to state 15
    DEC             shift and go to state 17
    OPENBR          shift and go to state 11
    NUM             shift and go to state 18
    ID              shift and go to state 25

    id                             shift and go to state 38
    expr                           shift and go to state 74

state 67

    (35) create_id -> CBOOL id ASGN . expr
    (13) expr -> . MINUS expr
    (14) expr -> . NOT expr
    (15) expr -> . INC id
    (16) expr -> . DEC id
    (17) expr -> . expr PLUS expr
    (18) expr -> . expr MINUS expr
    (19) expr -> . expr MUL expr
    (20) expr -> . expr DIV expr
    (21) expr -> . expr OR expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LT expr
    (24) expr -> . expr EQ expr
    (25) expr -> . OPENBR expr CLOSEBR
    (26) expr -> . NUM
    (27) expr -> . id
    (37) id -> . ID

    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    INC             shift and go to state 15
    DEC             shift and go to state 17
    OPENBR          shift and go to state 11
    NUM             shift and go to state 18
    ID              shift and go to state 25

    id                             shift and go to state 38
    expr                           shift and go to state 75

state 68

    (28) create_1darr -> 1DARRBOOL id ASGN . OPENIND enum CLOSEIND

    OPENIND         shift and go to state 76


state 69

    (29) create_1darr -> 1DARRINT id ASGN . OPENIND enum CLOSEIND

    OPENIND         shift and go to state 77


state 70

    (10) statement -> WHILE OPENBR expr CLOSEBR . DO statement

    DO              shift and go to state 78


state 71

    (11) statement -> IF OPENBR expr CLOSEBR . statement
    (12) statement -> IF OPENBR expr CLOSEBR . statement ELSE statement
    (4) statement -> . error
    (5) statement -> . expr
    (6) statement -> . OPENST stmt_list CLOSEST
    (7) statement -> . create_id
    (8) statement -> . assign
    (9) statement -> . create_1darr
    (10) statement -> . WHILE OPENBR expr CLOSEBR DO statement
    (11) statement -> . IF OPENBR expr CLOSEBR statement
    (12) statement -> . IF OPENBR expr CLOSEBR statement ELSE statement
    (13) expr -> . MINUS expr
    (14) expr -> . NOT expr
    (15) expr -> . INC id
    (16) expr -> . DEC id
    (17) expr -> . expr PLUS expr
    (18) expr -> . expr MINUS expr
    (19) expr -> . expr MUL expr
    (20) expr -> . expr DIV expr
    (21) expr -> . expr OR expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LT expr
    (24) expr -> . expr EQ expr
    (25) expr -> . OPENBR expr CLOSEBR
    (26) expr -> . NUM
    (27) expr -> . id
    (32) create_id -> . UINT id ASGN expr
    (33) create_id -> . CUINT id ASGN expr
    (34) create_id -> . BOOL id ASGN expr
    (35) create_id -> . CBOOL id ASGN expr
    (36) assign -> . id ASGN expr
    (28) create_1darr -> . 1DARRBOOL id ASGN OPENIND enum CLOSEIND
    (29) create_1darr -> . 1DARRINT id ASGN OPENIND enum CLOSEIND
    (37) id -> . ID

    error           shift and go to state 4
    OPENST          shift and go to state 6
    WHILE           shift and go to state 10
    IF              shift and go to state 12
    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    INC             shift and go to state 15
    DEC             shift and go to state 17
    OPENBR          shift and go to state 11
    NUM             shift and go to state 18
    UINT            shift and go to state 19
    CUINT           shift and go to state 20
    BOOL            shift and go to state 21
    CBOOL           shift and go to state 22
    1DARRBOOL       shift and go to state 23
    1DARRINT        shift and go to state 24
    ID              shift and go to state 25

    expr                           shift and go to state 5
    statement                      shift and go to state 79
    create_id                      shift and go to state 7
    assign                         shift and go to state 8
    create_1darr                   shift and go to state 9
    id                             shift and go to state 16

state 72

    (32) create_id -> UINT id ASGN expr .
    (17) expr -> expr . PLUS expr
    (18) expr -> expr . MINUS expr
    (19) expr -> expr . MUL expr
    (20) expr -> expr . DIV expr
    (21) expr -> expr . OR expr
    (22) expr -> expr . GT expr
    (23) expr -> expr . LT expr
    (24) expr -> expr . EQ expr

    error           reduce using rule 32 (create_id -> UINT id ASGN expr .)
    OPENST          reduce using rule 32 (create_id -> UINT id ASGN expr .)
    WHILE           reduce using rule 32 (create_id -> UINT id ASGN expr .)
    IF              reduce using rule 32 (create_id -> UINT id ASGN expr .)
    NOT             reduce using rule 32 (create_id -> UINT id ASGN expr .)
    INC             reduce using rule 32 (create_id -> UINT id ASGN expr .)
    DEC             reduce using rule 32 (create_id -> UINT id ASGN expr .)
    OPENBR          reduce using rule 32 (create_id -> UINT id ASGN expr .)
    NUM             reduce using rule 32 (create_id -> UINT id ASGN expr .)
    UINT            reduce using rule 32 (create_id -> UINT id ASGN expr .)
    CUINT           reduce using rule 32 (create_id -> UINT id ASGN expr .)
    BOOL            reduce using rule 32 (create_id -> UINT id ASGN expr .)
    CBOOL           reduce using rule 32 (create_id -> UINT id ASGN expr .)
    1DARRBOOL       reduce using rule 32 (create_id -> UINT id ASGN expr .)
    1DARRINT        reduce using rule 32 (create_id -> UINT id ASGN expr .)
    ID              reduce using rule 32 (create_id -> UINT id ASGN expr .)
    $end            reduce using rule 32 (create_id -> UINT id ASGN expr .)
    CLOSEST         reduce using rule 32 (create_id -> UINT id ASGN expr .)
    ELSE            reduce using rule 32 (create_id -> UINT id ASGN expr .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    MUL             shift and go to state 29
    DIV             shift and go to state 30
    OR              shift and go to state 31
    GT              shift and go to state 32
    LT              shift and go to state 33
    EQ              shift and go to state 34

  ! MINUS           [ reduce using rule 32 (create_id -> UINT id ASGN expr .) ]


state 73

    (33) create_id -> CUINT id ASGN expr .
    (17) expr -> expr . PLUS expr
    (18) expr -> expr . MINUS expr
    (19) expr -> expr . MUL expr
    (20) expr -> expr . DIV expr
    (21) expr -> expr . OR expr
    (22) expr -> expr . GT expr
    (23) expr -> expr . LT expr
    (24) expr -> expr . EQ expr

    error           reduce using rule 33 (create_id -> CUINT id ASGN expr .)
    OPENST          reduce using rule 33 (create_id -> CUINT id ASGN expr .)
    WHILE           reduce using rule 33 (create_id -> CUINT id ASGN expr .)
    IF              reduce using rule 33 (create_id -> CUINT id ASGN expr .)
    NOT             reduce using rule 33 (create_id -> CUINT id ASGN expr .)
    INC             reduce using rule 33 (create_id -> CUINT id ASGN expr .)
    DEC             reduce using rule 33 (create_id -> CUINT id ASGN expr .)
    OPENBR          reduce using rule 33 (create_id -> CUINT id ASGN expr .)
    NUM             reduce using rule 33 (create_id -> CUINT id ASGN expr .)
    UINT            reduce using rule 33 (create_id -> CUINT id ASGN expr .)
    CUINT           reduce using rule 33 (create_id -> CUINT id ASGN expr .)
    BOOL            reduce using rule 33 (create_id -> CUINT id ASGN expr .)
    CBOOL           reduce using rule 33 (create_id -> CUINT id ASGN expr .)
    1DARRBOOL       reduce using rule 33 (create_id -> CUINT id ASGN expr .)
    1DARRINT        reduce using rule 33 (create_id -> CUINT id ASGN expr .)
    ID              reduce using rule 33 (create_id -> CUINT id ASGN expr .)
    $end            reduce using rule 33 (create_id -> CUINT id ASGN expr .)
    CLOSEST         reduce using rule 33 (create_id -> CUINT id ASGN expr .)
    ELSE            reduce using rule 33 (create_id -> CUINT id ASGN expr .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    MUL             shift and go to state 29
    DIV             shift and go to state 30
    OR              shift and go to state 31
    GT              shift and go to state 32
    LT              shift and go to state 33
    EQ              shift and go to state 34

  ! MINUS           [ reduce using rule 33 (create_id -> CUINT id ASGN expr .) ]


state 74

    (34) create_id -> BOOL id ASGN expr .
    (17) expr -> expr . PLUS expr
    (18) expr -> expr . MINUS expr
    (19) expr -> expr . MUL expr
    (20) expr -> expr . DIV expr
    (21) expr -> expr . OR expr
    (22) expr -> expr . GT expr
    (23) expr -> expr . LT expr
    (24) expr -> expr . EQ expr

    error           reduce using rule 34 (create_id -> BOOL id ASGN expr .)
    OPENST          reduce using rule 34 (create_id -> BOOL id ASGN expr .)
    WHILE           reduce using rule 34 (create_id -> BOOL id ASGN expr .)
    IF              reduce using rule 34 (create_id -> BOOL id ASGN expr .)
    NOT             reduce using rule 34 (create_id -> BOOL id ASGN expr .)
    INC             reduce using rule 34 (create_id -> BOOL id ASGN expr .)
    DEC             reduce using rule 34 (create_id -> BOOL id ASGN expr .)
    OPENBR          reduce using rule 34 (create_id -> BOOL id ASGN expr .)
    NUM             reduce using rule 34 (create_id -> BOOL id ASGN expr .)
    UINT            reduce using rule 34 (create_id -> BOOL id ASGN expr .)
    CUINT           reduce using rule 34 (create_id -> BOOL id ASGN expr .)
    BOOL            reduce using rule 34 (create_id -> BOOL id ASGN expr .)
    CBOOL           reduce using rule 34 (create_id -> BOOL id ASGN expr .)
    1DARRBOOL       reduce using rule 34 (create_id -> BOOL id ASGN expr .)
    1DARRINT        reduce using rule 34 (create_id -> BOOL id ASGN expr .)
    ID              reduce using rule 34 (create_id -> BOOL id ASGN expr .)
    $end            reduce using rule 34 (create_id -> BOOL id ASGN expr .)
    CLOSEST         reduce using rule 34 (create_id -> BOOL id ASGN expr .)
    ELSE            reduce using rule 34 (create_id -> BOOL id ASGN expr .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    MUL             shift and go to state 29
    DIV             shift and go to state 30
    OR              shift and go to state 31
    GT              shift and go to state 32
    LT              shift and go to state 33
    EQ              shift and go to state 34

  ! MINUS           [ reduce using rule 34 (create_id -> BOOL id ASGN expr .) ]


state 75

    (35) create_id -> CBOOL id ASGN expr .
    (17) expr -> expr . PLUS expr
    (18) expr -> expr . MINUS expr
    (19) expr -> expr . MUL expr
    (20) expr -> expr . DIV expr
    (21) expr -> expr . OR expr
    (22) expr -> expr . GT expr
    (23) expr -> expr . LT expr
    (24) expr -> expr . EQ expr

    error           reduce using rule 35 (create_id -> CBOOL id ASGN expr .)
    OPENST          reduce using rule 35 (create_id -> CBOOL id ASGN expr .)
    WHILE           reduce using rule 35 (create_id -> CBOOL id ASGN expr .)
    IF              reduce using rule 35 (create_id -> CBOOL id ASGN expr .)
    NOT             reduce using rule 35 (create_id -> CBOOL id ASGN expr .)
    INC             reduce using rule 35 (create_id -> CBOOL id ASGN expr .)
    DEC             reduce using rule 35 (create_id -> CBOOL id ASGN expr .)
    OPENBR          reduce using rule 35 (create_id -> CBOOL id ASGN expr .)
    NUM             reduce using rule 35 (create_id -> CBOOL id ASGN expr .)
    UINT            reduce using rule 35 (create_id -> CBOOL id ASGN expr .)
    CUINT           reduce using rule 35 (create_id -> CBOOL id ASGN expr .)
    BOOL            reduce using rule 35 (create_id -> CBOOL id ASGN expr .)
    CBOOL           reduce using rule 35 (create_id -> CBOOL id ASGN expr .)
    1DARRBOOL       reduce using rule 35 (create_id -> CBOOL id ASGN expr .)
    1DARRINT        reduce using rule 35 (create_id -> CBOOL id ASGN expr .)
    ID              reduce using rule 35 (create_id -> CBOOL id ASGN expr .)
    $end            reduce using rule 35 (create_id -> CBOOL id ASGN expr .)
    CLOSEST         reduce using rule 35 (create_id -> CBOOL id ASGN expr .)
    ELSE            reduce using rule 35 (create_id -> CBOOL id ASGN expr .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    MUL             shift and go to state 29
    DIV             shift and go to state 30
    OR              shift and go to state 31
    GT              shift and go to state 32
    LT              shift and go to state 33
    EQ              shift and go to state 34

  ! MINUS           [ reduce using rule 35 (create_id -> CBOOL id ASGN expr .) ]


state 76

    (28) create_1darr -> 1DARRBOOL id ASGN OPENIND . enum CLOSEIND
    (30) enum -> . expr
    (31) enum -> . expr COMMA enum
    (13) expr -> . MINUS expr
    (14) expr -> . NOT expr
    (15) expr -> . INC id
    (16) expr -> . DEC id
    (17) expr -> . expr PLUS expr
    (18) expr -> . expr MINUS expr
    (19) expr -> . expr MUL expr
    (20) expr -> . expr DIV expr
    (21) expr -> . expr OR expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LT expr
    (24) expr -> . expr EQ expr
    (25) expr -> . OPENBR expr CLOSEBR
    (26) expr -> . NUM
    (27) expr -> . id
    (37) id -> . ID

    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    INC             shift and go to state 15
    DEC             shift and go to state 17
    OPENBR          shift and go to state 11
    NUM             shift and go to state 18
    ID              shift and go to state 25

    id                             shift and go to state 38
    enum                           shift and go to state 80
    expr                           shift and go to state 81

state 77

    (29) create_1darr -> 1DARRINT id ASGN OPENIND . enum CLOSEIND
    (30) enum -> . expr
    (31) enum -> . expr COMMA enum
    (13) expr -> . MINUS expr
    (14) expr -> . NOT expr
    (15) expr -> . INC id
    (16) expr -> . DEC id
    (17) expr -> . expr PLUS expr
    (18) expr -> . expr MINUS expr
    (19) expr -> . expr MUL expr
    (20) expr -> . expr DIV expr
    (21) expr -> . expr OR expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LT expr
    (24) expr -> . expr EQ expr
    (25) expr -> . OPENBR expr CLOSEBR
    (26) expr -> . NUM
    (27) expr -> . id
    (37) id -> . ID

    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    INC             shift and go to state 15
    DEC             shift and go to state 17
    OPENBR          shift and go to state 11
    NUM             shift and go to state 18
    ID              shift and go to state 25

    id                             shift and go to state 38
    enum                           shift and go to state 82
    expr                           shift and go to state 81

state 78

    (10) statement -> WHILE OPENBR expr CLOSEBR DO . statement
    (4) statement -> . error
    (5) statement -> . expr
    (6) statement -> . OPENST stmt_list CLOSEST
    (7) statement -> . create_id
    (8) statement -> . assign
    (9) statement -> . create_1darr
    (10) statement -> . WHILE OPENBR expr CLOSEBR DO statement
    (11) statement -> . IF OPENBR expr CLOSEBR statement
    (12) statement -> . IF OPENBR expr CLOSEBR statement ELSE statement
    (13) expr -> . MINUS expr
    (14) expr -> . NOT expr
    (15) expr -> . INC id
    (16) expr -> . DEC id
    (17) expr -> . expr PLUS expr
    (18) expr -> . expr MINUS expr
    (19) expr -> . expr MUL expr
    (20) expr -> . expr DIV expr
    (21) expr -> . expr OR expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LT expr
    (24) expr -> . expr EQ expr
    (25) expr -> . OPENBR expr CLOSEBR
    (26) expr -> . NUM
    (27) expr -> . id
    (32) create_id -> . UINT id ASGN expr
    (33) create_id -> . CUINT id ASGN expr
    (34) create_id -> . BOOL id ASGN expr
    (35) create_id -> . CBOOL id ASGN expr
    (36) assign -> . id ASGN expr
    (28) create_1darr -> . 1DARRBOOL id ASGN OPENIND enum CLOSEIND
    (29) create_1darr -> . 1DARRINT id ASGN OPENIND enum CLOSEIND
    (37) id -> . ID

    error           shift and go to state 4
    OPENST          shift and go to state 6
    WHILE           shift and go to state 10
    IF              shift and go to state 12
    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    INC             shift and go to state 15
    DEC             shift and go to state 17
    OPENBR          shift and go to state 11
    NUM             shift and go to state 18
    UINT            shift and go to state 19
    CUINT           shift and go to state 20
    BOOL            shift and go to state 21
    CBOOL           shift and go to state 22
    1DARRBOOL       shift and go to state 23
    1DARRINT        shift and go to state 24
    ID              shift and go to state 25

    expr                           shift and go to state 5
    statement                      shift and go to state 83
    create_id                      shift and go to state 7
    assign                         shift and go to state 8
    create_1darr                   shift and go to state 9
    id                             shift and go to state 16

state 79

    (11) statement -> IF OPENBR expr CLOSEBR statement .
    (12) statement -> IF OPENBR expr CLOSEBR statement . ELSE statement

    error           reduce using rule 11 (statement -> IF OPENBR expr CLOSEBR statement .)
    OPENST          reduce using rule 11 (statement -> IF OPENBR expr CLOSEBR statement .)
    WHILE           reduce using rule 11 (statement -> IF OPENBR expr CLOSEBR statement .)
    IF              reduce using rule 11 (statement -> IF OPENBR expr CLOSEBR statement .)
    MINUS           reduce using rule 11 (statement -> IF OPENBR expr CLOSEBR statement .)
    NOT             reduce using rule 11 (statement -> IF OPENBR expr CLOSEBR statement .)
    INC             reduce using rule 11 (statement -> IF OPENBR expr CLOSEBR statement .)
    DEC             reduce using rule 11 (statement -> IF OPENBR expr CLOSEBR statement .)
    OPENBR          reduce using rule 11 (statement -> IF OPENBR expr CLOSEBR statement .)
    NUM             reduce using rule 11 (statement -> IF OPENBR expr CLOSEBR statement .)
    UINT            reduce using rule 11 (statement -> IF OPENBR expr CLOSEBR statement .)
    CUINT           reduce using rule 11 (statement -> IF OPENBR expr CLOSEBR statement .)
    BOOL            reduce using rule 11 (statement -> IF OPENBR expr CLOSEBR statement .)
    CBOOL           reduce using rule 11 (statement -> IF OPENBR expr CLOSEBR statement .)
    1DARRBOOL       reduce using rule 11 (statement -> IF OPENBR expr CLOSEBR statement .)
    1DARRINT        reduce using rule 11 (statement -> IF OPENBR expr CLOSEBR statement .)
    ID              reduce using rule 11 (statement -> IF OPENBR expr CLOSEBR statement .)
    $end            reduce using rule 11 (statement -> IF OPENBR expr CLOSEBR statement .)
    CLOSEST         reduce using rule 11 (statement -> IF OPENBR expr CLOSEBR statement .)
    ELSE            shift and go to state 84

  ! ELSE            [ reduce using rule 11 (statement -> IF OPENBR expr CLOSEBR statement .) ]


state 80

    (28) create_1darr -> 1DARRBOOL id ASGN OPENIND enum . CLOSEIND

    CLOSEIND        shift and go to state 85


state 81

    (30) enum -> expr .
    (31) enum -> expr . COMMA enum
    (17) expr -> expr . PLUS expr
    (18) expr -> expr . MINUS expr
    (19) expr -> expr . MUL expr
    (20) expr -> expr . DIV expr
    (21) expr -> expr . OR expr
    (22) expr -> expr . GT expr
    (23) expr -> expr . LT expr
    (24) expr -> expr . EQ expr

    CLOSEIND        reduce using rule 30 (enum -> expr .)
    COMMA           shift and go to state 86
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    MUL             shift and go to state 29
    DIV             shift and go to state 30
    OR              shift and go to state 31
    GT              shift and go to state 32
    LT              shift and go to state 33
    EQ              shift and go to state 34


state 82

    (29) create_1darr -> 1DARRINT id ASGN OPENIND enum . CLOSEIND

    CLOSEIND        shift and go to state 87


state 83

    (10) statement -> WHILE OPENBR expr CLOSEBR DO statement .

    error           reduce using rule 10 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    OPENST          reduce using rule 10 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    WHILE           reduce using rule 10 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    IF              reduce using rule 10 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    MINUS           reduce using rule 10 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    NOT             reduce using rule 10 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    INC             reduce using rule 10 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    DEC             reduce using rule 10 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    OPENBR          reduce using rule 10 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    NUM             reduce using rule 10 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    UINT            reduce using rule 10 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    CUINT           reduce using rule 10 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    BOOL            reduce using rule 10 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    CBOOL           reduce using rule 10 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    1DARRBOOL       reduce using rule 10 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    1DARRINT        reduce using rule 10 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    ID              reduce using rule 10 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    $end            reduce using rule 10 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    CLOSEST         reduce using rule 10 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    ELSE            reduce using rule 10 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)


state 84

    (12) statement -> IF OPENBR expr CLOSEBR statement ELSE . statement
    (4) statement -> . error
    (5) statement -> . expr
    (6) statement -> . OPENST stmt_list CLOSEST
    (7) statement -> . create_id
    (8) statement -> . assign
    (9) statement -> . create_1darr
    (10) statement -> . WHILE OPENBR expr CLOSEBR DO statement
    (11) statement -> . IF OPENBR expr CLOSEBR statement
    (12) statement -> . IF OPENBR expr CLOSEBR statement ELSE statement
    (13) expr -> . MINUS expr
    (14) expr -> . NOT expr
    (15) expr -> . INC id
    (16) expr -> . DEC id
    (17) expr -> . expr PLUS expr
    (18) expr -> . expr MINUS expr
    (19) expr -> . expr MUL expr
    (20) expr -> . expr DIV expr
    (21) expr -> . expr OR expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LT expr
    (24) expr -> . expr EQ expr
    (25) expr -> . OPENBR expr CLOSEBR
    (26) expr -> . NUM
    (27) expr -> . id
    (32) create_id -> . UINT id ASGN expr
    (33) create_id -> . CUINT id ASGN expr
    (34) create_id -> . BOOL id ASGN expr
    (35) create_id -> . CBOOL id ASGN expr
    (36) assign -> . id ASGN expr
    (28) create_1darr -> . 1DARRBOOL id ASGN OPENIND enum CLOSEIND
    (29) create_1darr -> . 1DARRINT id ASGN OPENIND enum CLOSEIND
    (37) id -> . ID

    error           shift and go to state 4
    OPENST          shift and go to state 6
    WHILE           shift and go to state 10
    IF              shift and go to state 12
    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    INC             shift and go to state 15
    DEC             shift and go to state 17
    OPENBR          shift and go to state 11
    NUM             shift and go to state 18
    UINT            shift and go to state 19
    CUINT           shift and go to state 20
    BOOL            shift and go to state 21
    CBOOL           shift and go to state 22
    1DARRBOOL       shift and go to state 23
    1DARRINT        shift and go to state 24
    ID              shift and go to state 25

    expr                           shift and go to state 5
    statement                      shift and go to state 88
    create_id                      shift and go to state 7
    assign                         shift and go to state 8
    create_1darr                   shift and go to state 9
    id                             shift and go to state 16

state 85

    (28) create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .

    error           reduce using rule 28 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    OPENST          reduce using rule 28 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    WHILE           reduce using rule 28 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    IF              reduce using rule 28 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    MINUS           reduce using rule 28 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    NOT             reduce using rule 28 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    INC             reduce using rule 28 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    DEC             reduce using rule 28 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    OPENBR          reduce using rule 28 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    NUM             reduce using rule 28 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    UINT            reduce using rule 28 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    CUINT           reduce using rule 28 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    BOOL            reduce using rule 28 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    CBOOL           reduce using rule 28 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    1DARRBOOL       reduce using rule 28 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    1DARRINT        reduce using rule 28 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    ID              reduce using rule 28 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    $end            reduce using rule 28 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    CLOSEST         reduce using rule 28 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    ELSE            reduce using rule 28 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)


state 86

    (31) enum -> expr COMMA . enum
    (30) enum -> . expr
    (31) enum -> . expr COMMA enum
    (13) expr -> . MINUS expr
    (14) expr -> . NOT expr
    (15) expr -> . INC id
    (16) expr -> . DEC id
    (17) expr -> . expr PLUS expr
    (18) expr -> . expr MINUS expr
    (19) expr -> . expr MUL expr
    (20) expr -> . expr DIV expr
    (21) expr -> . expr OR expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LT expr
    (24) expr -> . expr EQ expr
    (25) expr -> . OPENBR expr CLOSEBR
    (26) expr -> . NUM
    (27) expr -> . id
    (37) id -> . ID

    MINUS           shift and go to state 13
    NOT             shift and go to state 14
    INC             shift and go to state 15
    DEC             shift and go to state 17
    OPENBR          shift and go to state 11
    NUM             shift and go to state 18
    ID              shift and go to state 25

    expr                           shift and go to state 81
    enum                           shift and go to state 89
    id                             shift and go to state 38

state 87

    (29) create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .

    error           reduce using rule 29 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    OPENST          reduce using rule 29 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    WHILE           reduce using rule 29 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    IF              reduce using rule 29 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    MINUS           reduce using rule 29 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    NOT             reduce using rule 29 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    INC             reduce using rule 29 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    DEC             reduce using rule 29 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    OPENBR          reduce using rule 29 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    NUM             reduce using rule 29 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    UINT            reduce using rule 29 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    CUINT           reduce using rule 29 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    BOOL            reduce using rule 29 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    CBOOL           reduce using rule 29 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    1DARRBOOL       reduce using rule 29 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    1DARRINT        reduce using rule 29 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    ID              reduce using rule 29 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    $end            reduce using rule 29 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    CLOSEST         reduce using rule 29 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    ELSE            reduce using rule 29 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)


state 88

    (12) statement -> IF OPENBR expr CLOSEBR statement ELSE statement .

    error           reduce using rule 12 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    OPENST          reduce using rule 12 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    WHILE           reduce using rule 12 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    IF              reduce using rule 12 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    MINUS           reduce using rule 12 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    NOT             reduce using rule 12 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    INC             reduce using rule 12 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    DEC             reduce using rule 12 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    OPENBR          reduce using rule 12 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    NUM             reduce using rule 12 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    UINT            reduce using rule 12 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    CUINT           reduce using rule 12 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    BOOL            reduce using rule 12 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    CBOOL           reduce using rule 12 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    1DARRBOOL       reduce using rule 12 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    1DARRINT        reduce using rule 12 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    ID              reduce using rule 12 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    $end            reduce using rule 12 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    CLOSEST         reduce using rule 12 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    ELSE            reduce using rule 12 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)


state 89

    (31) enum -> expr COMMA enum .

    CLOSEIND        reduce using rule 31 (enum -> expr COMMA enum .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MINUS in state 5 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 55 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 55 resolved as shift
WARNING: shift/reduce conflict for MUL in state 55 resolved as shift
WARNING: shift/reduce conflict for DIV in state 55 resolved as shift
WARNING: shift/reduce conflict for OR in state 55 resolved as shift
WARNING: shift/reduce conflict for GT in state 55 resolved as shift
WARNING: shift/reduce conflict for LT in state 55 resolved as shift
WARNING: shift/reduce conflict for EQ in state 55 resolved as shift
