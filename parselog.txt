   yacc.py: 362:PLY: PARSE DEBUG START
   yacc.py: 410:
   yacc.py: 411:State  : 0
   yacc.py: 435:Stack  : . LexToken(UINT,'UINT',1,0)
   yacc.py: 445:Action : Shift and goto state 11
   yacc.py: 410:
   yacc.py: 411:State  : 11
   yacc.py: 435:Stack  : UINT . LexToken(ID,'a',1,5)
   yacc.py: 445:Action : Shift and goto state 29
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 430:Defaulted state 29: Reduce using 24
   yacc.py: 435:Stack  : UINT ID . None
   yacc.py: 471:Action : Reduce rule [id -> ID] with ['a'] and goto state 28
   yacc.py: 506:Result : <STNode @ 0x7fd8be6d0390> (id:a)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 435:Stack  : UINT id . LexToken(ASGN,'=',1,7)
   yacc.py: 445:Action : Shift and goto state 40
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 435:Stack  : UINT id ASGN . LexToken(NUM,2,1,9)
   yacc.py: 445:Action : Shift and goto state 19
   yacc.py: 410:
   yacc.py: 411:State  : 19
   yacc.py: 435:Stack  : UINT id ASGN NUM . LexToken(NUM,2,1,11)
   yacc.py: 471:Action : Reduce rule [factor -> NUM] with [2] and goto state 16
   yacc.py: 506:Result : <STNode @ 0x7fd8be6d02e8> (number:2)
   yacc.py: 410:
   yacc.py: 411:State  : 16
   yacc.py: 435:Stack  : UINT id ASGN factor . LexToken(NUM,2,1,11)
   yacc.py: 471:Action : Reduce rule [term -> factor] with [number:2] and goto state 9
   yacc.py: 506:Result : <STNode @ 0x7fd8be6d02e8> (number:2)
   yacc.py: 410:
   yacc.py: 411:State  : 9
   yacc.py: 435:Stack  : UINT id ASGN term . LexToken(NUM,2,1,11)
   yacc.py: 471:Action : Reduce rule [expr -> term] with [number:2] and goto state 46
   yacc.py: 506:Result : <STNode @ 0x7fd8be6d02e8> (number:2)
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 435:Stack  : UINT id ASGN expr . LexToken(NUM,2,1,11)
   yacc.py: 471:Action : Reduce rule [create_id -> UINT id ASGN expr] with ['UINT',id:a,'=',number:2] and goto state 7
   yacc.py: 506:Result : <STNode @ 0x7fd8be6d0518> (create:UINT)
   yacc.py: 410:
   yacc.py: 411:State  : 7
   yacc.py: 435:Stack  : create_id . LexToken(NUM,2,1,11)
   yacc.py: 471:Action : Reduce rule [statement -> create_id] with [create:UINT] and goto state 3
   yacc.py: 506:Result : <STNode @ 0x7fd8be6d0518> (create:UINT)
   yacc.py: 410:
   yacc.py: 411:State  : 3
   yacc.py: 435:Stack  : statement . LexToken(NUM,2,1,11)
   yacc.py: 471:Action : Reduce rule [stmt_list -> statement] with [create:UINT] and goto state 2
   yacc.py: 506:Result : <STNode @ 0x7fd8be6d0518> (create:UINT)
   yacc.py: 410:
   yacc.py: 411:State  : 2
   yacc.py: 435:Stack  : stmt_list . LexToken(NUM,2,1,11)
   yacc.py: 445:Action : Shift and goto state 19
   yacc.py: 410:
   yacc.py: 411:State  : 19
   yacc.py: 435:Stack  : stmt_list NUM . LexToken(MUL,'*',1,12)
   yacc.py: 471:Action : Reduce rule [factor -> NUM] with [2] and goto state 16
   yacc.py: 506:Result : <STNode @ 0x7fd8be6d0400> (number:2)
   yacc.py: 410:
   yacc.py: 411:State  : 16
   yacc.py: 435:Stack  : stmt_list factor . LexToken(MUL,'*',1,12)
   yacc.py: 471:Action : Reduce rule [term -> factor] with [number:2] and goto state 9
   yacc.py: 506:Result : <STNode @ 0x7fd8be6d0400> (number:2)
   yacc.py: 410:
   yacc.py: 411:State  : 9
   yacc.py: 435:Stack  : stmt_list term . LexToken(MUL,'*',1,12)
   yacc.py: 445:Action : Shift and goto state 24
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 435:Stack  : stmt_list term MUL . LexToken(MINUS,'-',1,13)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
   yacc.py: 435:Stack  : stmt_list term MUL MINUS . LexToken(ID,'a',1,14)
   yacc.py: 445:Action : Shift and goto state 17
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 435:Stack  : stmt_list term MUL MINUS ID . $end
   yacc.py: 471:Action : Reduce rule [call_id -> ID] with ['a'] and goto state 27
   yacc.py: 506:Result : <STNode @ 0x7fd8c0196a58> (call:a)
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 435:Stack  : stmt_list term MUL MINUS call_id . $end
   yacc.py: 471:Action : Reduce rule [factor -> call_id] with [call:a] and goto state 26
   yacc.py: 506:Result : <STNode @ 0x7fd8c0196a58> (call:a)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 435:Stack  : stmt_list term MUL MINUS factor . $end
   yacc.py: 471:Action : Reduce rule [factor -> MINUS factor] with ['-',call:a] and goto state 38
   yacc.py: 506:Result : <STNode @ 0x7fd8be6efc88> (invert:None)
   yacc.py: 410:
   yacc.py: 411:State  : 38
   yacc.py: 435:Stack  : stmt_list term MUL factor . $end
   yacc.py: 471:Action : Reduce rule [term -> term MUL factor] with [number:2,'*',invert:None] and goto state 9
   yacc.py: 506:Result : <STNode @ 0x7fd8be6d0438> (oper:*)
   yacc.py: 410:
   yacc.py: 411:State  : 9
   yacc.py: 435:Stack  : stmt_list term . $end
   yacc.py: 471:Action : Reduce rule [expr -> term] with [oper:*] and goto state 5
   yacc.py: 506:Result : <STNode @ 0x7fd8be6d0438> (oper:*)
   yacc.py: 410:
   yacc.py: 411:State  : 5
   yacc.py: 435:Stack  : stmt_list expr . $end
   yacc.py: 471:Action : Reduce rule [statement -> expr] with [oper:*] and goto state 20
   yacc.py: 506:Result : <STNode @ 0x7fd8be6d0438> (oper:*)
   yacc.py: 410:
   yacc.py: 411:State  : 20
   yacc.py: 435:Stack  : stmt_list statement . $end
   yacc.py: 471:Action : Reduce rule [stmt_list -> stmt_list statement] with [create:UINT,oper:*] and goto state 2
   yacc.py: 506:Result : <STNode @ 0x7fd8be6efcc0> (conjunction:None)
   yacc.py: 410:
   yacc.py: 411:State  : 2
   yacc.py: 435:Stack  : stmt_list . $end
   yacc.py: 471:Action : Reduce rule [program -> stmt_list] with [<STNode @ 0x7fd8be6efcc0>] and goto state 1
   yacc.py: 506:Result : <STNode @ 0x7fd8c0196240> (program:None)
   yacc.py: 410:
   yacc.py: 411:State  : 1
   yacc.py: 435:Stack  : program . $end
   yacc.py: 571:Done   : Returning <STNode @ 0x7fd8c0196240> (program:None)
   yacc.py: 572:PLY: PARSE DEBUG END
