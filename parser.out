Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BACK
    FALSE
    FORW
    GETB
    GETF
    GETL
    GETR
    LEFT
    NL
    PUSHB
    PUSHF
    PUSHL
    PUSHR
    RET
    RIGHT
    TRUE
    UNDO

Grammar

Rule 0     S' -> program
Rule 1     program -> stmt_list
Rule 2     stmt_list -> statement
Rule 3     stmt_list -> stmt_list statement
Rule 4     statement -> error
Rule 5     statement -> expr
Rule 6     statement -> OPENST stmt_list CLOSEST
Rule 7     statement -> create_id
Rule 8     statement -> assign
Rule 9     statement -> create_1darr
Rule 10    statement -> create_2darr
Rule 11    statement -> extend1
Rule 12    statement -> extend2
Rule 13    statement -> declaration
Rule 14    statement -> call
Rule 15    statement -> WHILE OPENBR expr CLOSEBR DO statement
Rule 16    statement -> IF OPENBR expr CLOSEBR statement
Rule 17    statement -> IF OPENBR expr CLOSEBR statement ELSE statement
Rule 18    expr -> MINUS expr
Rule 19    expr -> NOT expr
Rule 20    expr -> INC id
Rule 21    expr -> DEC id
Rule 22    expr -> expr PLUS expr
Rule 23    expr -> expr MINUS expr
Rule 24    expr -> expr MUL expr
Rule 25    expr -> expr DIV expr
Rule 26    expr -> expr OR expr
Rule 27    expr -> expr GT expr
Rule 28    expr -> expr LT expr
Rule 29    expr -> expr EQ expr
Rule 30    expr -> OPENBR expr CLOSEBR
Rule 31    expr -> id OPENBR expr CLOSEBR
Rule 32    expr -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
Rule 33    expr -> SZ1 id
Rule 34    expr -> SZ2 id expr
Rule 35    expr -> NUM
Rule 36    expr -> id
Rule 37    create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND
Rule 38    create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND
Rule 39    extend1 -> EXTEND1 id expr
Rule 40    extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
Rule 41    create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND
Rule 42    create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND
Rule 43    enum -> expr
Rule 44    enum -> expr COMMA enum
Rule 45    enum2 -> enum
Rule 46    enum2 -> enum DCOMMA enum2
Rule 47    declaration -> OPENIND enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST
Rule 48    enum_ids -> create_id
Rule 49    enum_ids -> create_1darr
Rule 50    enum_ids -> create_2darr
Rule 51    enum_ids -> create_id COMMA enum_ids
Rule 52    enum_ids -> create_1darr COMMA enum_ids
Rule 53    enum_ids -> create_2darr COMMA enum_ids
Rule 54    opt_enum_ids -> <empty>
Rule 55    opt_enum_ids -> enum_ids
Rule 56    enum_rets -> create_id
Rule 57    enum_rets -> create_id COMMA enum_ids
Rule 58    call -> OPENIND enum_id CLOSEIND ASGN id OPENBR enum_par CLOSEBR
Rule 59    enum_id -> id
Rule 60    enum_id -> COMMA enum_id
Rule 61    enum_id -> id COMMA enum_id_tail
Rule 62    enum_id -> id OPENBR expr CLOSEBR
Rule 63    enum_id -> id OPENBR expr CLOSEBR COMMA enum_id_tail
Rule 64    enum_id -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
Rule 65    enum_id -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR COMMA enum_id_tail
Rule 66    enum_id_tail -> <empty>
Rule 67    enum_id_tail -> id
Rule 68    enum_id_tail -> COMMA enum_id_tail
Rule 69    enum_id_tail -> id COMMA enum_id_tail
Rule 70    enum_id_tail -> id OPENBR expr CLOSEBR
Rule 71    enum_id_tail -> id OPENBR expr CLOSEBR COMMA enum_id_tail
Rule 72    enum_id_tail -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
Rule 73    enum_id_tail -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR COMMA enum_id_tail
Rule 74    enum_par -> <empty>
Rule 75    enum_par -> expr
Rule 76    enum_par -> COMMA enum_par
Rule 77    enum_par -> expr COMMA enum_par
Rule 78    create_id -> UINT id ASGN expr
Rule 79    create_id -> CUINT id ASGN expr
Rule 80    create_id -> BOOL id ASGN expr
Rule 81    create_id -> CBOOL id ASGN expr
Rule 82    assign -> id ASGN expr
Rule 83    assign -> id OPENBR expr CLOSEBR ASGN expr
Rule 84    assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr
Rule 85    id -> ID

Terminals, with rules where they appear

1DARRBOOL            : 37
1DARRINT             : 38
2DARRBOOL            : 41
2DARRINT             : 42
ASGN                 : 37 38 41 42 58 78 79 80 81 82 83 84
BACK                 : 
BOOL                 : 80
CBOOL                : 81
CLOSEBR              : 15 16 17 30 31 32 32 40 40 47 58 62 63 64 64 65 65 70 71 72 72 73 73 83 84
CLOSEIND             : 37 38 41 42 47 58
CLOSEST              : 6 47
COMMA                : 44 51 52 53 57 60 61 63 65 68 69 71 73 76 77 84
CUINT                : 79
DCOMMA               : 46
DEC                  : 21
DIV                  : 25
DO                   : 15
ELSE                 : 17
EQ                   : 29
EXTEND1              : 39
EXTEND2              : 40
FALSE                : 
FORW                 : 
FUNC                 : 47
GETB                 : 
GETF                 : 
GETL                 : 
GETR                 : 
GT                   : 27
ID                   : 85
IF                   : 16 17
INC                  : 20
LEFT                 : 
LT                   : 28
MINUS                : 18 23
MUL                  : 24
NL                   : 
NOT                  : 19
NUM                  : 35
OPENBR               : 15 16 17 30 31 32 32 40 40 47 58 62 63 64 64 65 65 70 71 72 72 73 73 83 84
OPENIND              : 37 38 41 42 47 58
OPENST               : 6 47
OR                   : 26
PLUS                 : 22
PUSHB                : 
PUSHF                : 
PUSHL                : 
PUSHR                : 
RET                  : 
RIGHT                : 
SZ1                  : 33
SZ2                  : 34
TRUE                 : 
UINT                 : 78
UNDO                 : 
WHILE                : 15
error                : 4

Nonterminals, with rules where they appear

assign               : 8
call                 : 14
create_1darr         : 9 49 52
create_2darr         : 10 50 53
create_id            : 7 48 51 56 57
declaration          : 13
enum                 : 37 38 44 45 46
enum2                : 41 42 46
enum_id              : 58 60
enum_id_tail         : 61 63 65 68 69 71 73
enum_ids             : 51 52 53 55 57
enum_par             : 58 76 77
enum_rets            : 47
expr                 : 5 15 16 17 18 19 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 31 32 32 34 39 40 40 43 44 62 63 64 64 65 65 70 71 72 72 73 73 75 77 78 79 80 81 82 83 83 84 84 84
extend1              : 11
extend2              : 12
id                   : 20 21 31 32 33 34 36 37 38 39 40 41 42 47 58 59 61 62 63 64 65 67 69 70 71 72 73 78 79 80 81 82 83 84
opt_enum_ids         : 47
program              : 0
statement            : 2 3 15 16 17 17
stmt_list            : 1 3 6 47

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . stmt_list
    (2) stmt_list -> . statement
    (3) stmt_list -> . stmt_list statement
    (4) statement -> . error
    (5) statement -> . expr
    (6) statement -> . OPENST stmt_list CLOSEST
    (7) statement -> . create_id
    (8) statement -> . assign
    (9) statement -> . create_1darr
    (10) statement -> . create_2darr
    (11) statement -> . extend1
    (12) statement -> . extend2
    (13) statement -> . declaration
    (14) statement -> . call
    (15) statement -> . WHILE OPENBR expr CLOSEBR DO statement
    (16) statement -> . IF OPENBR expr CLOSEBR statement
    (17) statement -> . IF OPENBR expr CLOSEBR statement ELSE statement
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (78) create_id -> . UINT id ASGN expr
    (79) create_id -> . CUINT id ASGN expr
    (80) create_id -> . BOOL id ASGN expr
    (81) create_id -> . CBOOL id ASGN expr
    (82) assign -> . id ASGN expr
    (83) assign -> . id OPENBR expr CLOSEBR ASGN expr
    (84) assign -> . id OPENBR expr COMMA expr CLOSEBR ASGN expr
    (37) create_1darr -> . 1DARRBOOL id ASGN OPENIND enum CLOSEIND
    (38) create_1darr -> . 1DARRINT id ASGN OPENIND enum CLOSEIND
    (41) create_2darr -> . 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND
    (42) create_2darr -> . 2DARRINT id ASGN OPENIND enum2 CLOSEIND
    (39) extend1 -> . EXTEND1 id expr
    (40) extend2 -> . EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (47) declaration -> . OPENIND enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST
    (58) call -> . OPENIND enum_id CLOSEIND ASGN id OPENBR enum_par CLOSEBR
    (85) id -> . ID

    error           shift and go to state 4
    OPENST          shift and go to state 6
    WHILE           shift and go to state 15
    IF              shift and go to state 17
    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    UINT            shift and go to state 26
    CUINT           shift and go to state 27
    BOOL            shift and go to state 28
    CBOOL           shift and go to state 29
    1DARRBOOL       shift and go to state 30
    1DARRINT        shift and go to state 32
    2DARRBOOL       shift and go to state 33
    2DARRINT        shift and go to state 34
    EXTEND1         shift and go to state 35
    EXTEND2         shift and go to state 36
    OPENIND         shift and go to state 31
    ID              shift and go to state 37

    program                        shift and go to state 1
    stmt_list                      shift and go to state 2
    statement                      shift and go to state 3
    expr                           shift and go to state 5
    create_id                      shift and go to state 7
    assign                         shift and go to state 8
    create_1darr                   shift and go to state 9
    create_2darr                   shift and go to state 10
    extend1                        shift and go to state 11
    extend2                        shift and go to state 12
    declaration                    shift and go to state 13
    call                           shift and go to state 14
    id                             shift and go to state 21

state 1

    (0) S' -> program .



state 2

    (1) program -> stmt_list .
    (3) stmt_list -> stmt_list . statement
    (4) statement -> . error
    (5) statement -> . expr
    (6) statement -> . OPENST stmt_list CLOSEST
    (7) statement -> . create_id
    (8) statement -> . assign
    (9) statement -> . create_1darr
    (10) statement -> . create_2darr
    (11) statement -> . extend1
    (12) statement -> . extend2
    (13) statement -> . declaration
    (14) statement -> . call
    (15) statement -> . WHILE OPENBR expr CLOSEBR DO statement
    (16) statement -> . IF OPENBR expr CLOSEBR statement
    (17) statement -> . IF OPENBR expr CLOSEBR statement ELSE statement
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (78) create_id -> . UINT id ASGN expr
    (79) create_id -> . CUINT id ASGN expr
    (80) create_id -> . BOOL id ASGN expr
    (81) create_id -> . CBOOL id ASGN expr
    (82) assign -> . id ASGN expr
    (83) assign -> . id OPENBR expr CLOSEBR ASGN expr
    (84) assign -> . id OPENBR expr COMMA expr CLOSEBR ASGN expr
    (37) create_1darr -> . 1DARRBOOL id ASGN OPENIND enum CLOSEIND
    (38) create_1darr -> . 1DARRINT id ASGN OPENIND enum CLOSEIND
    (41) create_2darr -> . 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND
    (42) create_2darr -> . 2DARRINT id ASGN OPENIND enum2 CLOSEIND
    (39) extend1 -> . EXTEND1 id expr
    (40) extend2 -> . EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (47) declaration -> . OPENIND enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST
    (58) call -> . OPENIND enum_id CLOSEIND ASGN id OPENBR enum_par CLOSEBR
    (85) id -> . ID

    $end            reduce using rule 1 (program -> stmt_list .)
    error           shift and go to state 4
    OPENST          shift and go to state 6
    WHILE           shift and go to state 15
    IF              shift and go to state 17
    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    UINT            shift and go to state 26
    CUINT           shift and go to state 27
    BOOL            shift and go to state 28
    CBOOL           shift and go to state 29
    1DARRBOOL       shift and go to state 30
    1DARRINT        shift and go to state 32
    2DARRBOOL       shift and go to state 33
    2DARRINT        shift and go to state 34
    EXTEND1         shift and go to state 35
    EXTEND2         shift and go to state 36
    OPENIND         shift and go to state 31
    ID              shift and go to state 37

    statement                      shift and go to state 38
    expr                           shift and go to state 5
    create_id                      shift and go to state 7
    assign                         shift and go to state 8
    create_1darr                   shift and go to state 9
    create_2darr                   shift and go to state 10
    extend1                        shift and go to state 11
    extend2                        shift and go to state 12
    declaration                    shift and go to state 13
    call                           shift and go to state 14
    id                             shift and go to state 21

state 3

    (2) stmt_list -> statement .

    error           reduce using rule 2 (stmt_list -> statement .)
    OPENST          reduce using rule 2 (stmt_list -> statement .)
    WHILE           reduce using rule 2 (stmt_list -> statement .)
    IF              reduce using rule 2 (stmt_list -> statement .)
    MINUS           reduce using rule 2 (stmt_list -> statement .)
    NOT             reduce using rule 2 (stmt_list -> statement .)
    INC             reduce using rule 2 (stmt_list -> statement .)
    DEC             reduce using rule 2 (stmt_list -> statement .)
    OPENBR          reduce using rule 2 (stmt_list -> statement .)
    SZ1             reduce using rule 2 (stmt_list -> statement .)
    SZ2             reduce using rule 2 (stmt_list -> statement .)
    NUM             reduce using rule 2 (stmt_list -> statement .)
    UINT            reduce using rule 2 (stmt_list -> statement .)
    CUINT           reduce using rule 2 (stmt_list -> statement .)
    BOOL            reduce using rule 2 (stmt_list -> statement .)
    CBOOL           reduce using rule 2 (stmt_list -> statement .)
    1DARRBOOL       reduce using rule 2 (stmt_list -> statement .)
    1DARRINT        reduce using rule 2 (stmt_list -> statement .)
    2DARRBOOL       reduce using rule 2 (stmt_list -> statement .)
    2DARRINT        reduce using rule 2 (stmt_list -> statement .)
    EXTEND1         reduce using rule 2 (stmt_list -> statement .)
    EXTEND2         reduce using rule 2 (stmt_list -> statement .)
    OPENIND         reduce using rule 2 (stmt_list -> statement .)
    ID              reduce using rule 2 (stmt_list -> statement .)
    $end            reduce using rule 2 (stmt_list -> statement .)
    CLOSEST         reduce using rule 2 (stmt_list -> statement .)


state 4

    (4) statement -> error .

    error           reduce using rule 4 (statement -> error .)
    OPENST          reduce using rule 4 (statement -> error .)
    WHILE           reduce using rule 4 (statement -> error .)
    IF              reduce using rule 4 (statement -> error .)
    MINUS           reduce using rule 4 (statement -> error .)
    NOT             reduce using rule 4 (statement -> error .)
    INC             reduce using rule 4 (statement -> error .)
    DEC             reduce using rule 4 (statement -> error .)
    OPENBR          reduce using rule 4 (statement -> error .)
    SZ1             reduce using rule 4 (statement -> error .)
    SZ2             reduce using rule 4 (statement -> error .)
    NUM             reduce using rule 4 (statement -> error .)
    UINT            reduce using rule 4 (statement -> error .)
    CUINT           reduce using rule 4 (statement -> error .)
    BOOL            reduce using rule 4 (statement -> error .)
    CBOOL           reduce using rule 4 (statement -> error .)
    1DARRBOOL       reduce using rule 4 (statement -> error .)
    1DARRINT        reduce using rule 4 (statement -> error .)
    2DARRBOOL       reduce using rule 4 (statement -> error .)
    2DARRINT        reduce using rule 4 (statement -> error .)
    EXTEND1         reduce using rule 4 (statement -> error .)
    EXTEND2         reduce using rule 4 (statement -> error .)
    OPENIND         reduce using rule 4 (statement -> error .)
    ID              reduce using rule 4 (statement -> error .)
    $end            reduce using rule 4 (statement -> error .)
    CLOSEST         reduce using rule 4 (statement -> error .)
    ELSE            reduce using rule 4 (statement -> error .)


state 5

    (5) statement -> expr .
    (22) expr -> expr . PLUS expr
    (23) expr -> expr . MINUS expr
    (24) expr -> expr . MUL expr
    (25) expr -> expr . DIV expr
    (26) expr -> expr . OR expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . LT expr
    (29) expr -> expr . EQ expr

  ! shift/reduce conflict for MINUS resolved as shift
    error           reduce using rule 5 (statement -> expr .)
    OPENST          reduce using rule 5 (statement -> expr .)
    WHILE           reduce using rule 5 (statement -> expr .)
    IF              reduce using rule 5 (statement -> expr .)
    NOT             reduce using rule 5 (statement -> expr .)
    INC             reduce using rule 5 (statement -> expr .)
    DEC             reduce using rule 5 (statement -> expr .)
    OPENBR          reduce using rule 5 (statement -> expr .)
    SZ1             reduce using rule 5 (statement -> expr .)
    SZ2             reduce using rule 5 (statement -> expr .)
    NUM             reduce using rule 5 (statement -> expr .)
    UINT            reduce using rule 5 (statement -> expr .)
    CUINT           reduce using rule 5 (statement -> expr .)
    BOOL            reduce using rule 5 (statement -> expr .)
    CBOOL           reduce using rule 5 (statement -> expr .)
    1DARRBOOL       reduce using rule 5 (statement -> expr .)
    1DARRINT        reduce using rule 5 (statement -> expr .)
    2DARRBOOL       reduce using rule 5 (statement -> expr .)
    2DARRINT        reduce using rule 5 (statement -> expr .)
    EXTEND1         reduce using rule 5 (statement -> expr .)
    EXTEND2         reduce using rule 5 (statement -> expr .)
    OPENIND         reduce using rule 5 (statement -> expr .)
    ID              reduce using rule 5 (statement -> expr .)
    $end            reduce using rule 5 (statement -> expr .)
    CLOSEST         reduce using rule 5 (statement -> expr .)
    ELSE            reduce using rule 5 (statement -> expr .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    OR              shift and go to state 43
    GT              shift and go to state 44
    LT              shift and go to state 45
    EQ              shift and go to state 46

  ! MINUS           [ reduce using rule 5 (statement -> expr .) ]


state 6

    (6) statement -> OPENST . stmt_list CLOSEST
    (2) stmt_list -> . statement
    (3) stmt_list -> . stmt_list statement
    (4) statement -> . error
    (5) statement -> . expr
    (6) statement -> . OPENST stmt_list CLOSEST
    (7) statement -> . create_id
    (8) statement -> . assign
    (9) statement -> . create_1darr
    (10) statement -> . create_2darr
    (11) statement -> . extend1
    (12) statement -> . extend2
    (13) statement -> . declaration
    (14) statement -> . call
    (15) statement -> . WHILE OPENBR expr CLOSEBR DO statement
    (16) statement -> . IF OPENBR expr CLOSEBR statement
    (17) statement -> . IF OPENBR expr CLOSEBR statement ELSE statement
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (78) create_id -> . UINT id ASGN expr
    (79) create_id -> . CUINT id ASGN expr
    (80) create_id -> . BOOL id ASGN expr
    (81) create_id -> . CBOOL id ASGN expr
    (82) assign -> . id ASGN expr
    (83) assign -> . id OPENBR expr CLOSEBR ASGN expr
    (84) assign -> . id OPENBR expr COMMA expr CLOSEBR ASGN expr
    (37) create_1darr -> . 1DARRBOOL id ASGN OPENIND enum CLOSEIND
    (38) create_1darr -> . 1DARRINT id ASGN OPENIND enum CLOSEIND
    (41) create_2darr -> . 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND
    (42) create_2darr -> . 2DARRINT id ASGN OPENIND enum2 CLOSEIND
    (39) extend1 -> . EXTEND1 id expr
    (40) extend2 -> . EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (47) declaration -> . OPENIND enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST
    (58) call -> . OPENIND enum_id CLOSEIND ASGN id OPENBR enum_par CLOSEBR
    (85) id -> . ID

    error           shift and go to state 4
    OPENST          shift and go to state 6
    WHILE           shift and go to state 15
    IF              shift and go to state 17
    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    UINT            shift and go to state 26
    CUINT           shift and go to state 27
    BOOL            shift and go to state 28
    CBOOL           shift and go to state 29
    1DARRBOOL       shift and go to state 30
    1DARRINT        shift and go to state 32
    2DARRBOOL       shift and go to state 33
    2DARRINT        shift and go to state 34
    EXTEND1         shift and go to state 35
    EXTEND2         shift and go to state 36
    OPENIND         shift and go to state 31
    ID              shift and go to state 37

    stmt_list                      shift and go to state 47
    statement                      shift and go to state 3
    expr                           shift and go to state 5
    create_id                      shift and go to state 7
    assign                         shift and go to state 8
    create_1darr                   shift and go to state 9
    create_2darr                   shift and go to state 10
    extend1                        shift and go to state 11
    extend2                        shift and go to state 12
    declaration                    shift and go to state 13
    call                           shift and go to state 14
    id                             shift and go to state 21

state 7

    (7) statement -> create_id .

    error           reduce using rule 7 (statement -> create_id .)
    OPENST          reduce using rule 7 (statement -> create_id .)
    WHILE           reduce using rule 7 (statement -> create_id .)
    IF              reduce using rule 7 (statement -> create_id .)
    MINUS           reduce using rule 7 (statement -> create_id .)
    NOT             reduce using rule 7 (statement -> create_id .)
    INC             reduce using rule 7 (statement -> create_id .)
    DEC             reduce using rule 7 (statement -> create_id .)
    OPENBR          reduce using rule 7 (statement -> create_id .)
    SZ1             reduce using rule 7 (statement -> create_id .)
    SZ2             reduce using rule 7 (statement -> create_id .)
    NUM             reduce using rule 7 (statement -> create_id .)
    UINT            reduce using rule 7 (statement -> create_id .)
    CUINT           reduce using rule 7 (statement -> create_id .)
    BOOL            reduce using rule 7 (statement -> create_id .)
    CBOOL           reduce using rule 7 (statement -> create_id .)
    1DARRBOOL       reduce using rule 7 (statement -> create_id .)
    1DARRINT        reduce using rule 7 (statement -> create_id .)
    2DARRBOOL       reduce using rule 7 (statement -> create_id .)
    2DARRINT        reduce using rule 7 (statement -> create_id .)
    EXTEND1         reduce using rule 7 (statement -> create_id .)
    EXTEND2         reduce using rule 7 (statement -> create_id .)
    OPENIND         reduce using rule 7 (statement -> create_id .)
    ID              reduce using rule 7 (statement -> create_id .)
    $end            reduce using rule 7 (statement -> create_id .)
    CLOSEST         reduce using rule 7 (statement -> create_id .)
    ELSE            reduce using rule 7 (statement -> create_id .)


state 8

    (8) statement -> assign .

    error           reduce using rule 8 (statement -> assign .)
    OPENST          reduce using rule 8 (statement -> assign .)
    WHILE           reduce using rule 8 (statement -> assign .)
    IF              reduce using rule 8 (statement -> assign .)
    MINUS           reduce using rule 8 (statement -> assign .)
    NOT             reduce using rule 8 (statement -> assign .)
    INC             reduce using rule 8 (statement -> assign .)
    DEC             reduce using rule 8 (statement -> assign .)
    OPENBR          reduce using rule 8 (statement -> assign .)
    SZ1             reduce using rule 8 (statement -> assign .)
    SZ2             reduce using rule 8 (statement -> assign .)
    NUM             reduce using rule 8 (statement -> assign .)
    UINT            reduce using rule 8 (statement -> assign .)
    CUINT           reduce using rule 8 (statement -> assign .)
    BOOL            reduce using rule 8 (statement -> assign .)
    CBOOL           reduce using rule 8 (statement -> assign .)
    1DARRBOOL       reduce using rule 8 (statement -> assign .)
    1DARRINT        reduce using rule 8 (statement -> assign .)
    2DARRBOOL       reduce using rule 8 (statement -> assign .)
    2DARRINT        reduce using rule 8 (statement -> assign .)
    EXTEND1         reduce using rule 8 (statement -> assign .)
    EXTEND2         reduce using rule 8 (statement -> assign .)
    OPENIND         reduce using rule 8 (statement -> assign .)
    ID              reduce using rule 8 (statement -> assign .)
    $end            reduce using rule 8 (statement -> assign .)
    CLOSEST         reduce using rule 8 (statement -> assign .)
    ELSE            reduce using rule 8 (statement -> assign .)


state 9

    (9) statement -> create_1darr .

    error           reduce using rule 9 (statement -> create_1darr .)
    OPENST          reduce using rule 9 (statement -> create_1darr .)
    WHILE           reduce using rule 9 (statement -> create_1darr .)
    IF              reduce using rule 9 (statement -> create_1darr .)
    MINUS           reduce using rule 9 (statement -> create_1darr .)
    NOT             reduce using rule 9 (statement -> create_1darr .)
    INC             reduce using rule 9 (statement -> create_1darr .)
    DEC             reduce using rule 9 (statement -> create_1darr .)
    OPENBR          reduce using rule 9 (statement -> create_1darr .)
    SZ1             reduce using rule 9 (statement -> create_1darr .)
    SZ2             reduce using rule 9 (statement -> create_1darr .)
    NUM             reduce using rule 9 (statement -> create_1darr .)
    UINT            reduce using rule 9 (statement -> create_1darr .)
    CUINT           reduce using rule 9 (statement -> create_1darr .)
    BOOL            reduce using rule 9 (statement -> create_1darr .)
    CBOOL           reduce using rule 9 (statement -> create_1darr .)
    1DARRBOOL       reduce using rule 9 (statement -> create_1darr .)
    1DARRINT        reduce using rule 9 (statement -> create_1darr .)
    2DARRBOOL       reduce using rule 9 (statement -> create_1darr .)
    2DARRINT        reduce using rule 9 (statement -> create_1darr .)
    EXTEND1         reduce using rule 9 (statement -> create_1darr .)
    EXTEND2         reduce using rule 9 (statement -> create_1darr .)
    OPENIND         reduce using rule 9 (statement -> create_1darr .)
    ID              reduce using rule 9 (statement -> create_1darr .)
    $end            reduce using rule 9 (statement -> create_1darr .)
    CLOSEST         reduce using rule 9 (statement -> create_1darr .)
    ELSE            reduce using rule 9 (statement -> create_1darr .)


state 10

    (10) statement -> create_2darr .

    error           reduce using rule 10 (statement -> create_2darr .)
    OPENST          reduce using rule 10 (statement -> create_2darr .)
    WHILE           reduce using rule 10 (statement -> create_2darr .)
    IF              reduce using rule 10 (statement -> create_2darr .)
    MINUS           reduce using rule 10 (statement -> create_2darr .)
    NOT             reduce using rule 10 (statement -> create_2darr .)
    INC             reduce using rule 10 (statement -> create_2darr .)
    DEC             reduce using rule 10 (statement -> create_2darr .)
    OPENBR          reduce using rule 10 (statement -> create_2darr .)
    SZ1             reduce using rule 10 (statement -> create_2darr .)
    SZ2             reduce using rule 10 (statement -> create_2darr .)
    NUM             reduce using rule 10 (statement -> create_2darr .)
    UINT            reduce using rule 10 (statement -> create_2darr .)
    CUINT           reduce using rule 10 (statement -> create_2darr .)
    BOOL            reduce using rule 10 (statement -> create_2darr .)
    CBOOL           reduce using rule 10 (statement -> create_2darr .)
    1DARRBOOL       reduce using rule 10 (statement -> create_2darr .)
    1DARRINT        reduce using rule 10 (statement -> create_2darr .)
    2DARRBOOL       reduce using rule 10 (statement -> create_2darr .)
    2DARRINT        reduce using rule 10 (statement -> create_2darr .)
    EXTEND1         reduce using rule 10 (statement -> create_2darr .)
    EXTEND2         reduce using rule 10 (statement -> create_2darr .)
    OPENIND         reduce using rule 10 (statement -> create_2darr .)
    ID              reduce using rule 10 (statement -> create_2darr .)
    $end            reduce using rule 10 (statement -> create_2darr .)
    CLOSEST         reduce using rule 10 (statement -> create_2darr .)
    ELSE            reduce using rule 10 (statement -> create_2darr .)


state 11

    (11) statement -> extend1 .

    error           reduce using rule 11 (statement -> extend1 .)
    OPENST          reduce using rule 11 (statement -> extend1 .)
    WHILE           reduce using rule 11 (statement -> extend1 .)
    IF              reduce using rule 11 (statement -> extend1 .)
    MINUS           reduce using rule 11 (statement -> extend1 .)
    NOT             reduce using rule 11 (statement -> extend1 .)
    INC             reduce using rule 11 (statement -> extend1 .)
    DEC             reduce using rule 11 (statement -> extend1 .)
    OPENBR          reduce using rule 11 (statement -> extend1 .)
    SZ1             reduce using rule 11 (statement -> extend1 .)
    SZ2             reduce using rule 11 (statement -> extend1 .)
    NUM             reduce using rule 11 (statement -> extend1 .)
    UINT            reduce using rule 11 (statement -> extend1 .)
    CUINT           reduce using rule 11 (statement -> extend1 .)
    BOOL            reduce using rule 11 (statement -> extend1 .)
    CBOOL           reduce using rule 11 (statement -> extend1 .)
    1DARRBOOL       reduce using rule 11 (statement -> extend1 .)
    1DARRINT        reduce using rule 11 (statement -> extend1 .)
    2DARRBOOL       reduce using rule 11 (statement -> extend1 .)
    2DARRINT        reduce using rule 11 (statement -> extend1 .)
    EXTEND1         reduce using rule 11 (statement -> extend1 .)
    EXTEND2         reduce using rule 11 (statement -> extend1 .)
    OPENIND         reduce using rule 11 (statement -> extend1 .)
    ID              reduce using rule 11 (statement -> extend1 .)
    $end            reduce using rule 11 (statement -> extend1 .)
    CLOSEST         reduce using rule 11 (statement -> extend1 .)
    ELSE            reduce using rule 11 (statement -> extend1 .)


state 12

    (12) statement -> extend2 .

    error           reduce using rule 12 (statement -> extend2 .)
    OPENST          reduce using rule 12 (statement -> extend2 .)
    WHILE           reduce using rule 12 (statement -> extend2 .)
    IF              reduce using rule 12 (statement -> extend2 .)
    MINUS           reduce using rule 12 (statement -> extend2 .)
    NOT             reduce using rule 12 (statement -> extend2 .)
    INC             reduce using rule 12 (statement -> extend2 .)
    DEC             reduce using rule 12 (statement -> extend2 .)
    OPENBR          reduce using rule 12 (statement -> extend2 .)
    SZ1             reduce using rule 12 (statement -> extend2 .)
    SZ2             reduce using rule 12 (statement -> extend2 .)
    NUM             reduce using rule 12 (statement -> extend2 .)
    UINT            reduce using rule 12 (statement -> extend2 .)
    CUINT           reduce using rule 12 (statement -> extend2 .)
    BOOL            reduce using rule 12 (statement -> extend2 .)
    CBOOL           reduce using rule 12 (statement -> extend2 .)
    1DARRBOOL       reduce using rule 12 (statement -> extend2 .)
    1DARRINT        reduce using rule 12 (statement -> extend2 .)
    2DARRBOOL       reduce using rule 12 (statement -> extend2 .)
    2DARRINT        reduce using rule 12 (statement -> extend2 .)
    EXTEND1         reduce using rule 12 (statement -> extend2 .)
    EXTEND2         reduce using rule 12 (statement -> extend2 .)
    OPENIND         reduce using rule 12 (statement -> extend2 .)
    ID              reduce using rule 12 (statement -> extend2 .)
    $end            reduce using rule 12 (statement -> extend2 .)
    CLOSEST         reduce using rule 12 (statement -> extend2 .)
    ELSE            reduce using rule 12 (statement -> extend2 .)


state 13

    (13) statement -> declaration .

    error           reduce using rule 13 (statement -> declaration .)
    OPENST          reduce using rule 13 (statement -> declaration .)
    WHILE           reduce using rule 13 (statement -> declaration .)
    IF              reduce using rule 13 (statement -> declaration .)
    MINUS           reduce using rule 13 (statement -> declaration .)
    NOT             reduce using rule 13 (statement -> declaration .)
    INC             reduce using rule 13 (statement -> declaration .)
    DEC             reduce using rule 13 (statement -> declaration .)
    OPENBR          reduce using rule 13 (statement -> declaration .)
    SZ1             reduce using rule 13 (statement -> declaration .)
    SZ2             reduce using rule 13 (statement -> declaration .)
    NUM             reduce using rule 13 (statement -> declaration .)
    UINT            reduce using rule 13 (statement -> declaration .)
    CUINT           reduce using rule 13 (statement -> declaration .)
    BOOL            reduce using rule 13 (statement -> declaration .)
    CBOOL           reduce using rule 13 (statement -> declaration .)
    1DARRBOOL       reduce using rule 13 (statement -> declaration .)
    1DARRINT        reduce using rule 13 (statement -> declaration .)
    2DARRBOOL       reduce using rule 13 (statement -> declaration .)
    2DARRINT        reduce using rule 13 (statement -> declaration .)
    EXTEND1         reduce using rule 13 (statement -> declaration .)
    EXTEND2         reduce using rule 13 (statement -> declaration .)
    OPENIND         reduce using rule 13 (statement -> declaration .)
    ID              reduce using rule 13 (statement -> declaration .)
    $end            reduce using rule 13 (statement -> declaration .)
    CLOSEST         reduce using rule 13 (statement -> declaration .)
    ELSE            reduce using rule 13 (statement -> declaration .)


state 14

    (14) statement -> call .

    error           reduce using rule 14 (statement -> call .)
    OPENST          reduce using rule 14 (statement -> call .)
    WHILE           reduce using rule 14 (statement -> call .)
    IF              reduce using rule 14 (statement -> call .)
    MINUS           reduce using rule 14 (statement -> call .)
    NOT             reduce using rule 14 (statement -> call .)
    INC             reduce using rule 14 (statement -> call .)
    DEC             reduce using rule 14 (statement -> call .)
    OPENBR          reduce using rule 14 (statement -> call .)
    SZ1             reduce using rule 14 (statement -> call .)
    SZ2             reduce using rule 14 (statement -> call .)
    NUM             reduce using rule 14 (statement -> call .)
    UINT            reduce using rule 14 (statement -> call .)
    CUINT           reduce using rule 14 (statement -> call .)
    BOOL            reduce using rule 14 (statement -> call .)
    CBOOL           reduce using rule 14 (statement -> call .)
    1DARRBOOL       reduce using rule 14 (statement -> call .)
    1DARRINT        reduce using rule 14 (statement -> call .)
    2DARRBOOL       reduce using rule 14 (statement -> call .)
    2DARRINT        reduce using rule 14 (statement -> call .)
    EXTEND1         reduce using rule 14 (statement -> call .)
    EXTEND2         reduce using rule 14 (statement -> call .)
    OPENIND         reduce using rule 14 (statement -> call .)
    ID              reduce using rule 14 (statement -> call .)
    $end            reduce using rule 14 (statement -> call .)
    CLOSEST         reduce using rule 14 (statement -> call .)
    ELSE            reduce using rule 14 (statement -> call .)


state 15

    (15) statement -> WHILE . OPENBR expr CLOSEBR DO statement

    OPENBR          shift and go to state 48


state 16

    (30) expr -> OPENBR . expr CLOSEBR
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (85) id -> . ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    ID              shift and go to state 37

    expr                           shift and go to state 49
    id                             shift and go to state 50

state 17

    (16) statement -> IF . OPENBR expr CLOSEBR statement
    (17) statement -> IF . OPENBR expr CLOSEBR statement ELSE statement

    OPENBR          shift and go to state 51


state 18

    (18) expr -> MINUS . expr
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (85) id -> . ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    ID              shift and go to state 37

    expr                           shift and go to state 52
    id                             shift and go to state 50

state 19

    (19) expr -> NOT . expr
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (85) id -> . ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    ID              shift and go to state 37

    expr                           shift and go to state 53
    id                             shift and go to state 50

state 20

    (20) expr -> INC . id
    (85) id -> . ID

    ID              shift and go to state 37

    id                             shift and go to state 54

state 21

    (31) expr -> id . OPENBR expr CLOSEBR
    (32) expr -> id . OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (36) expr -> id .
    (82) assign -> id . ASGN expr
    (83) assign -> id . OPENBR expr CLOSEBR ASGN expr
    (84) assign -> id . OPENBR expr COMMA expr CLOSEBR ASGN expr

  ! shift/reduce conflict for OPENBR resolved as shift
    OPENBR          shift and go to state 55
    PLUS            reduce using rule 36 (expr -> id .)
    MINUS           reduce using rule 36 (expr -> id .)
    MUL             reduce using rule 36 (expr -> id .)
    DIV             reduce using rule 36 (expr -> id .)
    OR              reduce using rule 36 (expr -> id .)
    GT              reduce using rule 36 (expr -> id .)
    LT              reduce using rule 36 (expr -> id .)
    EQ              reduce using rule 36 (expr -> id .)
    error           reduce using rule 36 (expr -> id .)
    OPENST          reduce using rule 36 (expr -> id .)
    WHILE           reduce using rule 36 (expr -> id .)
    IF              reduce using rule 36 (expr -> id .)
    NOT             reduce using rule 36 (expr -> id .)
    INC             reduce using rule 36 (expr -> id .)
    DEC             reduce using rule 36 (expr -> id .)
    SZ1             reduce using rule 36 (expr -> id .)
    SZ2             reduce using rule 36 (expr -> id .)
    NUM             reduce using rule 36 (expr -> id .)
    UINT            reduce using rule 36 (expr -> id .)
    CUINT           reduce using rule 36 (expr -> id .)
    BOOL            reduce using rule 36 (expr -> id .)
    CBOOL           reduce using rule 36 (expr -> id .)
    1DARRBOOL       reduce using rule 36 (expr -> id .)
    1DARRINT        reduce using rule 36 (expr -> id .)
    2DARRBOOL       reduce using rule 36 (expr -> id .)
    2DARRINT        reduce using rule 36 (expr -> id .)
    EXTEND1         reduce using rule 36 (expr -> id .)
    EXTEND2         reduce using rule 36 (expr -> id .)
    OPENIND         reduce using rule 36 (expr -> id .)
    ID              reduce using rule 36 (expr -> id .)
    $end            reduce using rule 36 (expr -> id .)
    CLOSEST         reduce using rule 36 (expr -> id .)
    ELSE            reduce using rule 36 (expr -> id .)
    ASGN            shift and go to state 56

  ! OPENBR          [ reduce using rule 36 (expr -> id .) ]


state 22

    (21) expr -> DEC . id
    (85) id -> . ID

    ID              shift and go to state 37

    id                             shift and go to state 57

state 23

    (33) expr -> SZ1 . id
    (85) id -> . ID

    ID              shift and go to state 37

    id                             shift and go to state 58

state 24

    (34) expr -> SZ2 . id expr
    (85) id -> . ID

    ID              shift and go to state 37

    id                             shift and go to state 59

state 25

    (35) expr -> NUM .

    PLUS            reduce using rule 35 (expr -> NUM .)
    MINUS           reduce using rule 35 (expr -> NUM .)
    MUL             reduce using rule 35 (expr -> NUM .)
    DIV             reduce using rule 35 (expr -> NUM .)
    OR              reduce using rule 35 (expr -> NUM .)
    GT              reduce using rule 35 (expr -> NUM .)
    LT              reduce using rule 35 (expr -> NUM .)
    EQ              reduce using rule 35 (expr -> NUM .)
    error           reduce using rule 35 (expr -> NUM .)
    OPENST          reduce using rule 35 (expr -> NUM .)
    WHILE           reduce using rule 35 (expr -> NUM .)
    IF              reduce using rule 35 (expr -> NUM .)
    NOT             reduce using rule 35 (expr -> NUM .)
    INC             reduce using rule 35 (expr -> NUM .)
    DEC             reduce using rule 35 (expr -> NUM .)
    OPENBR          reduce using rule 35 (expr -> NUM .)
    SZ1             reduce using rule 35 (expr -> NUM .)
    SZ2             reduce using rule 35 (expr -> NUM .)
    NUM             reduce using rule 35 (expr -> NUM .)
    UINT            reduce using rule 35 (expr -> NUM .)
    CUINT           reduce using rule 35 (expr -> NUM .)
    BOOL            reduce using rule 35 (expr -> NUM .)
    CBOOL           reduce using rule 35 (expr -> NUM .)
    1DARRBOOL       reduce using rule 35 (expr -> NUM .)
    1DARRINT        reduce using rule 35 (expr -> NUM .)
    2DARRBOOL       reduce using rule 35 (expr -> NUM .)
    2DARRINT        reduce using rule 35 (expr -> NUM .)
    EXTEND1         reduce using rule 35 (expr -> NUM .)
    EXTEND2         reduce using rule 35 (expr -> NUM .)
    OPENIND         reduce using rule 35 (expr -> NUM .)
    ID              reduce using rule 35 (expr -> NUM .)
    $end            reduce using rule 35 (expr -> NUM .)
    CLOSEST         reduce using rule 35 (expr -> NUM .)
    CLOSEBR         reduce using rule 35 (expr -> NUM .)
    COMMA           reduce using rule 35 (expr -> NUM .)
    ELSE            reduce using rule 35 (expr -> NUM .)
    CLOSEIND        reduce using rule 35 (expr -> NUM .)
    DCOMMA          reduce using rule 35 (expr -> NUM .)


state 26

    (78) create_id -> UINT . id ASGN expr
    (85) id -> . ID

    ID              shift and go to state 37

    id                             shift and go to state 60

state 27

    (79) create_id -> CUINT . id ASGN expr
    (85) id -> . ID

    ID              shift and go to state 37

    id                             shift and go to state 61

state 28

    (80) create_id -> BOOL . id ASGN expr
    (85) id -> . ID

    ID              shift and go to state 37

    id                             shift and go to state 62

state 29

    (81) create_id -> CBOOL . id ASGN expr
    (85) id -> . ID

    ID              shift and go to state 37

    id                             shift and go to state 63

state 30

    (37) create_1darr -> 1DARRBOOL . id ASGN OPENIND enum CLOSEIND
    (85) id -> . ID

    ID              shift and go to state 37

    id                             shift and go to state 64

state 31

    (47) declaration -> OPENIND . enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST
    (58) call -> OPENIND . enum_id CLOSEIND ASGN id OPENBR enum_par CLOSEBR
    (56) enum_rets -> . create_id
    (57) enum_rets -> . create_id COMMA enum_ids
    (59) enum_id -> . id
    (60) enum_id -> . COMMA enum_id
    (61) enum_id -> . id COMMA enum_id_tail
    (62) enum_id -> . id OPENBR expr CLOSEBR
    (63) enum_id -> . id OPENBR expr CLOSEBR COMMA enum_id_tail
    (64) enum_id -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (65) enum_id -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR COMMA enum_id_tail
    (78) create_id -> . UINT id ASGN expr
    (79) create_id -> . CUINT id ASGN expr
    (80) create_id -> . BOOL id ASGN expr
    (81) create_id -> . CBOOL id ASGN expr
    (85) id -> . ID

    COMMA           shift and go to state 69
    UINT            shift and go to state 26
    CUINT           shift and go to state 27
    BOOL            shift and go to state 28
    CBOOL           shift and go to state 29
    ID              shift and go to state 37

    enum_rets                      shift and go to state 65
    id                             shift and go to state 66
    enum_id                        shift and go to state 67
    create_id                      shift and go to state 68

state 32

    (38) create_1darr -> 1DARRINT . id ASGN OPENIND enum CLOSEIND
    (85) id -> . ID

    ID              shift and go to state 37

    id                             shift and go to state 70

state 33

    (41) create_2darr -> 2DARRBOOL . id ASGN OPENIND enum2 CLOSEIND
    (85) id -> . ID

    ID              shift and go to state 37

    id                             shift and go to state 71

state 34

    (42) create_2darr -> 2DARRINT . id ASGN OPENIND enum2 CLOSEIND
    (85) id -> . ID

    ID              shift and go to state 37

    id                             shift and go to state 72

state 35

    (39) extend1 -> EXTEND1 . id expr
    (85) id -> . ID

    ID              shift and go to state 37

    id                             shift and go to state 73

state 36

    (40) extend2 -> EXTEND2 . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (85) id -> . ID

    ID              shift and go to state 37

    id                             shift and go to state 74

state 37

    (85) id -> ID .

    OPENBR          reduce using rule 85 (id -> ID .)
    ASGN            reduce using rule 85 (id -> ID .)
    PLUS            reduce using rule 85 (id -> ID .)
    MINUS           reduce using rule 85 (id -> ID .)
    MUL             reduce using rule 85 (id -> ID .)
    DIV             reduce using rule 85 (id -> ID .)
    OR              reduce using rule 85 (id -> ID .)
    GT              reduce using rule 85 (id -> ID .)
    LT              reduce using rule 85 (id -> ID .)
    EQ              reduce using rule 85 (id -> ID .)
    error           reduce using rule 85 (id -> ID .)
    OPENST          reduce using rule 85 (id -> ID .)
    WHILE           reduce using rule 85 (id -> ID .)
    IF              reduce using rule 85 (id -> ID .)
    NOT             reduce using rule 85 (id -> ID .)
    INC             reduce using rule 85 (id -> ID .)
    DEC             reduce using rule 85 (id -> ID .)
    SZ1             reduce using rule 85 (id -> ID .)
    SZ2             reduce using rule 85 (id -> ID .)
    NUM             reduce using rule 85 (id -> ID .)
    UINT            reduce using rule 85 (id -> ID .)
    CUINT           reduce using rule 85 (id -> ID .)
    BOOL            reduce using rule 85 (id -> ID .)
    CBOOL           reduce using rule 85 (id -> ID .)
    1DARRBOOL       reduce using rule 85 (id -> ID .)
    1DARRINT        reduce using rule 85 (id -> ID .)
    2DARRBOOL       reduce using rule 85 (id -> ID .)
    2DARRINT        reduce using rule 85 (id -> ID .)
    EXTEND1         reduce using rule 85 (id -> ID .)
    EXTEND2         reduce using rule 85 (id -> ID .)
    OPENIND         reduce using rule 85 (id -> ID .)
    ID              reduce using rule 85 (id -> ID .)
    $end            reduce using rule 85 (id -> ID .)
    CLOSEST         reduce using rule 85 (id -> ID .)
    CLOSEBR         reduce using rule 85 (id -> ID .)
    COMMA           reduce using rule 85 (id -> ID .)
    ELSE            reduce using rule 85 (id -> ID .)
    CLOSEIND        reduce using rule 85 (id -> ID .)
    DCOMMA          reduce using rule 85 (id -> ID .)


state 38

    (3) stmt_list -> stmt_list statement .

    error           reduce using rule 3 (stmt_list -> stmt_list statement .)
    OPENST          reduce using rule 3 (stmt_list -> stmt_list statement .)
    WHILE           reduce using rule 3 (stmt_list -> stmt_list statement .)
    IF              reduce using rule 3 (stmt_list -> stmt_list statement .)
    MINUS           reduce using rule 3 (stmt_list -> stmt_list statement .)
    NOT             reduce using rule 3 (stmt_list -> stmt_list statement .)
    INC             reduce using rule 3 (stmt_list -> stmt_list statement .)
    DEC             reduce using rule 3 (stmt_list -> stmt_list statement .)
    OPENBR          reduce using rule 3 (stmt_list -> stmt_list statement .)
    SZ1             reduce using rule 3 (stmt_list -> stmt_list statement .)
    SZ2             reduce using rule 3 (stmt_list -> stmt_list statement .)
    NUM             reduce using rule 3 (stmt_list -> stmt_list statement .)
    UINT            reduce using rule 3 (stmt_list -> stmt_list statement .)
    CUINT           reduce using rule 3 (stmt_list -> stmt_list statement .)
    BOOL            reduce using rule 3 (stmt_list -> stmt_list statement .)
    CBOOL           reduce using rule 3 (stmt_list -> stmt_list statement .)
    1DARRBOOL       reduce using rule 3 (stmt_list -> stmt_list statement .)
    1DARRINT        reduce using rule 3 (stmt_list -> stmt_list statement .)
    2DARRBOOL       reduce using rule 3 (stmt_list -> stmt_list statement .)
    2DARRINT        reduce using rule 3 (stmt_list -> stmt_list statement .)
    EXTEND1         reduce using rule 3 (stmt_list -> stmt_list statement .)
    EXTEND2         reduce using rule 3 (stmt_list -> stmt_list statement .)
    OPENIND         reduce using rule 3 (stmt_list -> stmt_list statement .)
    ID              reduce using rule 3 (stmt_list -> stmt_list statement .)
    $end            reduce using rule 3 (stmt_list -> stmt_list statement .)
    CLOSEST         reduce using rule 3 (stmt_list -> stmt_list statement .)


state 39

    (22) expr -> expr PLUS . expr
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (85) id -> . ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    ID              shift and go to state 37

    expr                           shift and go to state 75
    id                             shift and go to state 50

state 40

    (23) expr -> expr MINUS . expr
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (85) id -> . ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    ID              shift and go to state 37

    expr                           shift and go to state 76
    id                             shift and go to state 50

state 41

    (24) expr -> expr MUL . expr
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (85) id -> . ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    ID              shift and go to state 37

    expr                           shift and go to state 77
    id                             shift and go to state 50

state 42

    (25) expr -> expr DIV . expr
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (85) id -> . ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    ID              shift and go to state 37

    expr                           shift and go to state 78
    id                             shift and go to state 50

state 43

    (26) expr -> expr OR . expr
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (85) id -> . ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    ID              shift and go to state 37

    expr                           shift and go to state 79
    id                             shift and go to state 50

state 44

    (27) expr -> expr GT . expr
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (85) id -> . ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    ID              shift and go to state 37

    expr                           shift and go to state 80
    id                             shift and go to state 50

state 45

    (28) expr -> expr LT . expr
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (85) id -> . ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    ID              shift and go to state 37

    expr                           shift and go to state 81
    id                             shift and go to state 50

state 46

    (29) expr -> expr EQ . expr
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (85) id -> . ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    ID              shift and go to state 37

    expr                           shift and go to state 82
    id                             shift and go to state 50

state 47

    (6) statement -> OPENST stmt_list . CLOSEST
    (3) stmt_list -> stmt_list . statement
    (4) statement -> . error
    (5) statement -> . expr
    (6) statement -> . OPENST stmt_list CLOSEST
    (7) statement -> . create_id
    (8) statement -> . assign
    (9) statement -> . create_1darr
    (10) statement -> . create_2darr
    (11) statement -> . extend1
    (12) statement -> . extend2
    (13) statement -> . declaration
    (14) statement -> . call
    (15) statement -> . WHILE OPENBR expr CLOSEBR DO statement
    (16) statement -> . IF OPENBR expr CLOSEBR statement
    (17) statement -> . IF OPENBR expr CLOSEBR statement ELSE statement
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (78) create_id -> . UINT id ASGN expr
    (79) create_id -> . CUINT id ASGN expr
    (80) create_id -> . BOOL id ASGN expr
    (81) create_id -> . CBOOL id ASGN expr
    (82) assign -> . id ASGN expr
    (83) assign -> . id OPENBR expr CLOSEBR ASGN expr
    (84) assign -> . id OPENBR expr COMMA expr CLOSEBR ASGN expr
    (37) create_1darr -> . 1DARRBOOL id ASGN OPENIND enum CLOSEIND
    (38) create_1darr -> . 1DARRINT id ASGN OPENIND enum CLOSEIND
    (41) create_2darr -> . 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND
    (42) create_2darr -> . 2DARRINT id ASGN OPENIND enum2 CLOSEIND
    (39) extend1 -> . EXTEND1 id expr
    (40) extend2 -> . EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (47) declaration -> . OPENIND enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST
    (58) call -> . OPENIND enum_id CLOSEIND ASGN id OPENBR enum_par CLOSEBR
    (85) id -> . ID

    CLOSEST         shift and go to state 83
    error           shift and go to state 4
    OPENST          shift and go to state 6
    WHILE           shift and go to state 15
    IF              shift and go to state 17
    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    UINT            shift and go to state 26
    CUINT           shift and go to state 27
    BOOL            shift and go to state 28
    CBOOL           shift and go to state 29
    1DARRBOOL       shift and go to state 30
    1DARRINT        shift and go to state 32
    2DARRBOOL       shift and go to state 33
    2DARRINT        shift and go to state 34
    EXTEND1         shift and go to state 35
    EXTEND2         shift and go to state 36
    OPENIND         shift and go to state 31
    ID              shift and go to state 37

    statement                      shift and go to state 38
    expr                           shift and go to state 5
    create_id                      shift and go to state 7
    assign                         shift and go to state 8
    create_1darr                   shift and go to state 9
    create_2darr                   shift and go to state 10
    extend1                        shift and go to state 11
    extend2                        shift and go to state 12
    declaration                    shift and go to state 13
    call                           shift and go to state 14
    id                             shift and go to state 21

state 48

    (15) statement -> WHILE OPENBR . expr CLOSEBR DO statement
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (85) id -> . ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    ID              shift and go to state 37

    expr                           shift and go to state 84
    id                             shift and go to state 50

state 49

    (30) expr -> OPENBR expr . CLOSEBR
    (22) expr -> expr . PLUS expr
    (23) expr -> expr . MINUS expr
    (24) expr -> expr . MUL expr
    (25) expr -> expr . DIV expr
    (26) expr -> expr . OR expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . LT expr
    (29) expr -> expr . EQ expr

    CLOSEBR         shift and go to state 85
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    OR              shift and go to state 43
    GT              shift and go to state 44
    LT              shift and go to state 45
    EQ              shift and go to state 46


state 50

    (31) expr -> id . OPENBR expr CLOSEBR
    (32) expr -> id . OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (36) expr -> id .

  ! shift/reduce conflict for OPENBR resolved as shift
    OPENBR          shift and go to state 86
    CLOSEBR         reduce using rule 36 (expr -> id .)
    PLUS            reduce using rule 36 (expr -> id .)
    MINUS           reduce using rule 36 (expr -> id .)
    MUL             reduce using rule 36 (expr -> id .)
    DIV             reduce using rule 36 (expr -> id .)
    OR              reduce using rule 36 (expr -> id .)
    GT              reduce using rule 36 (expr -> id .)
    LT              reduce using rule 36 (expr -> id .)
    EQ              reduce using rule 36 (expr -> id .)
    error           reduce using rule 36 (expr -> id .)
    OPENST          reduce using rule 36 (expr -> id .)
    WHILE           reduce using rule 36 (expr -> id .)
    IF              reduce using rule 36 (expr -> id .)
    NOT             reduce using rule 36 (expr -> id .)
    INC             reduce using rule 36 (expr -> id .)
    DEC             reduce using rule 36 (expr -> id .)
    SZ1             reduce using rule 36 (expr -> id .)
    SZ2             reduce using rule 36 (expr -> id .)
    NUM             reduce using rule 36 (expr -> id .)
    UINT            reduce using rule 36 (expr -> id .)
    CUINT           reduce using rule 36 (expr -> id .)
    BOOL            reduce using rule 36 (expr -> id .)
    CBOOL           reduce using rule 36 (expr -> id .)
    1DARRBOOL       reduce using rule 36 (expr -> id .)
    1DARRINT        reduce using rule 36 (expr -> id .)
    2DARRBOOL       reduce using rule 36 (expr -> id .)
    2DARRINT        reduce using rule 36 (expr -> id .)
    EXTEND1         reduce using rule 36 (expr -> id .)
    EXTEND2         reduce using rule 36 (expr -> id .)
    OPENIND         reduce using rule 36 (expr -> id .)
    ID              reduce using rule 36 (expr -> id .)
    $end            reduce using rule 36 (expr -> id .)
    CLOSEST         reduce using rule 36 (expr -> id .)
    COMMA           reduce using rule 36 (expr -> id .)
    ELSE            reduce using rule 36 (expr -> id .)
    CLOSEIND        reduce using rule 36 (expr -> id .)
    DCOMMA          reduce using rule 36 (expr -> id .)

  ! OPENBR          [ reduce using rule 36 (expr -> id .) ]


state 51

    (16) statement -> IF OPENBR . expr CLOSEBR statement
    (17) statement -> IF OPENBR . expr CLOSEBR statement ELSE statement
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (85) id -> . ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    ID              shift and go to state 37

    expr                           shift and go to state 87
    id                             shift and go to state 50

state 52

    (18) expr -> MINUS expr .
    (22) expr -> expr . PLUS expr
    (23) expr -> expr . MINUS expr
    (24) expr -> expr . MUL expr
    (25) expr -> expr . DIV expr
    (26) expr -> expr . OR expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . LT expr
    (29) expr -> expr . EQ expr

    PLUS            reduce using rule 18 (expr -> MINUS expr .)
    MINUS           reduce using rule 18 (expr -> MINUS expr .)
    MUL             reduce using rule 18 (expr -> MINUS expr .)
    DIV             reduce using rule 18 (expr -> MINUS expr .)
    OR              reduce using rule 18 (expr -> MINUS expr .)
    GT              reduce using rule 18 (expr -> MINUS expr .)
    LT              reduce using rule 18 (expr -> MINUS expr .)
    EQ              reduce using rule 18 (expr -> MINUS expr .)
    error           reduce using rule 18 (expr -> MINUS expr .)
    OPENST          reduce using rule 18 (expr -> MINUS expr .)
    WHILE           reduce using rule 18 (expr -> MINUS expr .)
    IF              reduce using rule 18 (expr -> MINUS expr .)
    NOT             reduce using rule 18 (expr -> MINUS expr .)
    INC             reduce using rule 18 (expr -> MINUS expr .)
    DEC             reduce using rule 18 (expr -> MINUS expr .)
    OPENBR          reduce using rule 18 (expr -> MINUS expr .)
    SZ1             reduce using rule 18 (expr -> MINUS expr .)
    SZ2             reduce using rule 18 (expr -> MINUS expr .)
    NUM             reduce using rule 18 (expr -> MINUS expr .)
    UINT            reduce using rule 18 (expr -> MINUS expr .)
    CUINT           reduce using rule 18 (expr -> MINUS expr .)
    BOOL            reduce using rule 18 (expr -> MINUS expr .)
    CBOOL           reduce using rule 18 (expr -> MINUS expr .)
    1DARRBOOL       reduce using rule 18 (expr -> MINUS expr .)
    1DARRINT        reduce using rule 18 (expr -> MINUS expr .)
    2DARRBOOL       reduce using rule 18 (expr -> MINUS expr .)
    2DARRINT        reduce using rule 18 (expr -> MINUS expr .)
    EXTEND1         reduce using rule 18 (expr -> MINUS expr .)
    EXTEND2         reduce using rule 18 (expr -> MINUS expr .)
    OPENIND         reduce using rule 18 (expr -> MINUS expr .)
    ID              reduce using rule 18 (expr -> MINUS expr .)
    $end            reduce using rule 18 (expr -> MINUS expr .)
    CLOSEST         reduce using rule 18 (expr -> MINUS expr .)
    CLOSEBR         reduce using rule 18 (expr -> MINUS expr .)
    COMMA           reduce using rule 18 (expr -> MINUS expr .)
    ELSE            reduce using rule 18 (expr -> MINUS expr .)
    CLOSEIND        reduce using rule 18 (expr -> MINUS expr .)
    DCOMMA          reduce using rule 18 (expr -> MINUS expr .)

  ! PLUS            [ shift and go to state 39 ]
  ! MINUS           [ shift and go to state 40 ]
  ! MUL             [ shift and go to state 41 ]
  ! DIV             [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]
  ! GT              [ shift and go to state 44 ]
  ! LT              [ shift and go to state 45 ]
  ! EQ              [ shift and go to state 46 ]


state 53

    (19) expr -> NOT expr .
    (22) expr -> expr . PLUS expr
    (23) expr -> expr . MINUS expr
    (24) expr -> expr . MUL expr
    (25) expr -> expr . DIV expr
    (26) expr -> expr . OR expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . LT expr
    (29) expr -> expr . EQ expr

    PLUS            reduce using rule 19 (expr -> NOT expr .)
    MINUS           reduce using rule 19 (expr -> NOT expr .)
    MUL             reduce using rule 19 (expr -> NOT expr .)
    DIV             reduce using rule 19 (expr -> NOT expr .)
    OR              reduce using rule 19 (expr -> NOT expr .)
    GT              reduce using rule 19 (expr -> NOT expr .)
    LT              reduce using rule 19 (expr -> NOT expr .)
    EQ              reduce using rule 19 (expr -> NOT expr .)
    error           reduce using rule 19 (expr -> NOT expr .)
    OPENST          reduce using rule 19 (expr -> NOT expr .)
    WHILE           reduce using rule 19 (expr -> NOT expr .)
    IF              reduce using rule 19 (expr -> NOT expr .)
    NOT             reduce using rule 19 (expr -> NOT expr .)
    INC             reduce using rule 19 (expr -> NOT expr .)
    DEC             reduce using rule 19 (expr -> NOT expr .)
    OPENBR          reduce using rule 19 (expr -> NOT expr .)
    SZ1             reduce using rule 19 (expr -> NOT expr .)
    SZ2             reduce using rule 19 (expr -> NOT expr .)
    NUM             reduce using rule 19 (expr -> NOT expr .)
    UINT            reduce using rule 19 (expr -> NOT expr .)
    CUINT           reduce using rule 19 (expr -> NOT expr .)
    BOOL            reduce using rule 19 (expr -> NOT expr .)
    CBOOL           reduce using rule 19 (expr -> NOT expr .)
    1DARRBOOL       reduce using rule 19 (expr -> NOT expr .)
    1DARRINT        reduce using rule 19 (expr -> NOT expr .)
    2DARRBOOL       reduce using rule 19 (expr -> NOT expr .)
    2DARRINT        reduce using rule 19 (expr -> NOT expr .)
    EXTEND1         reduce using rule 19 (expr -> NOT expr .)
    EXTEND2         reduce using rule 19 (expr -> NOT expr .)
    OPENIND         reduce using rule 19 (expr -> NOT expr .)
    ID              reduce using rule 19 (expr -> NOT expr .)
    $end            reduce using rule 19 (expr -> NOT expr .)
    CLOSEST         reduce using rule 19 (expr -> NOT expr .)
    CLOSEBR         reduce using rule 19 (expr -> NOT expr .)
    COMMA           reduce using rule 19 (expr -> NOT expr .)
    ELSE            reduce using rule 19 (expr -> NOT expr .)
    CLOSEIND        reduce using rule 19 (expr -> NOT expr .)
    DCOMMA          reduce using rule 19 (expr -> NOT expr .)

  ! PLUS            [ shift and go to state 39 ]
  ! MINUS           [ shift and go to state 40 ]
  ! MUL             [ shift and go to state 41 ]
  ! DIV             [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]
  ! GT              [ shift and go to state 44 ]
  ! LT              [ shift and go to state 45 ]
  ! EQ              [ shift and go to state 46 ]


state 54

    (20) expr -> INC id .

    PLUS            reduce using rule 20 (expr -> INC id .)
    MINUS           reduce using rule 20 (expr -> INC id .)
    MUL             reduce using rule 20 (expr -> INC id .)
    DIV             reduce using rule 20 (expr -> INC id .)
    OR              reduce using rule 20 (expr -> INC id .)
    GT              reduce using rule 20 (expr -> INC id .)
    LT              reduce using rule 20 (expr -> INC id .)
    EQ              reduce using rule 20 (expr -> INC id .)
    error           reduce using rule 20 (expr -> INC id .)
    OPENST          reduce using rule 20 (expr -> INC id .)
    WHILE           reduce using rule 20 (expr -> INC id .)
    IF              reduce using rule 20 (expr -> INC id .)
    NOT             reduce using rule 20 (expr -> INC id .)
    INC             reduce using rule 20 (expr -> INC id .)
    DEC             reduce using rule 20 (expr -> INC id .)
    OPENBR          reduce using rule 20 (expr -> INC id .)
    SZ1             reduce using rule 20 (expr -> INC id .)
    SZ2             reduce using rule 20 (expr -> INC id .)
    NUM             reduce using rule 20 (expr -> INC id .)
    UINT            reduce using rule 20 (expr -> INC id .)
    CUINT           reduce using rule 20 (expr -> INC id .)
    BOOL            reduce using rule 20 (expr -> INC id .)
    CBOOL           reduce using rule 20 (expr -> INC id .)
    1DARRBOOL       reduce using rule 20 (expr -> INC id .)
    1DARRINT        reduce using rule 20 (expr -> INC id .)
    2DARRBOOL       reduce using rule 20 (expr -> INC id .)
    2DARRINT        reduce using rule 20 (expr -> INC id .)
    EXTEND1         reduce using rule 20 (expr -> INC id .)
    EXTEND2         reduce using rule 20 (expr -> INC id .)
    OPENIND         reduce using rule 20 (expr -> INC id .)
    ID              reduce using rule 20 (expr -> INC id .)
    $end            reduce using rule 20 (expr -> INC id .)
    CLOSEST         reduce using rule 20 (expr -> INC id .)
    CLOSEBR         reduce using rule 20 (expr -> INC id .)
    COMMA           reduce using rule 20 (expr -> INC id .)
    ELSE            reduce using rule 20 (expr -> INC id .)
    CLOSEIND        reduce using rule 20 (expr -> INC id .)
    DCOMMA          reduce using rule 20 (expr -> INC id .)


state 55

    (31) expr -> id OPENBR . expr CLOSEBR
    (32) expr -> id OPENBR . expr CLOSEBR OPENBR expr CLOSEBR
    (83) assign -> id OPENBR . expr CLOSEBR ASGN expr
    (84) assign -> id OPENBR . expr COMMA expr CLOSEBR ASGN expr
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (85) id -> . ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    ID              shift and go to state 37

    id                             shift and go to state 50
    expr                           shift and go to state 88

state 56

    (82) assign -> id ASGN . expr
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (85) id -> . ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    ID              shift and go to state 37

    id                             shift and go to state 50
    expr                           shift and go to state 89

state 57

    (21) expr -> DEC id .

    PLUS            reduce using rule 21 (expr -> DEC id .)
    MINUS           reduce using rule 21 (expr -> DEC id .)
    MUL             reduce using rule 21 (expr -> DEC id .)
    DIV             reduce using rule 21 (expr -> DEC id .)
    OR              reduce using rule 21 (expr -> DEC id .)
    GT              reduce using rule 21 (expr -> DEC id .)
    LT              reduce using rule 21 (expr -> DEC id .)
    EQ              reduce using rule 21 (expr -> DEC id .)
    error           reduce using rule 21 (expr -> DEC id .)
    OPENST          reduce using rule 21 (expr -> DEC id .)
    WHILE           reduce using rule 21 (expr -> DEC id .)
    IF              reduce using rule 21 (expr -> DEC id .)
    NOT             reduce using rule 21 (expr -> DEC id .)
    INC             reduce using rule 21 (expr -> DEC id .)
    DEC             reduce using rule 21 (expr -> DEC id .)
    OPENBR          reduce using rule 21 (expr -> DEC id .)
    SZ1             reduce using rule 21 (expr -> DEC id .)
    SZ2             reduce using rule 21 (expr -> DEC id .)
    NUM             reduce using rule 21 (expr -> DEC id .)
    UINT            reduce using rule 21 (expr -> DEC id .)
    CUINT           reduce using rule 21 (expr -> DEC id .)
    BOOL            reduce using rule 21 (expr -> DEC id .)
    CBOOL           reduce using rule 21 (expr -> DEC id .)
    1DARRBOOL       reduce using rule 21 (expr -> DEC id .)
    1DARRINT        reduce using rule 21 (expr -> DEC id .)
    2DARRBOOL       reduce using rule 21 (expr -> DEC id .)
    2DARRINT        reduce using rule 21 (expr -> DEC id .)
    EXTEND1         reduce using rule 21 (expr -> DEC id .)
    EXTEND2         reduce using rule 21 (expr -> DEC id .)
    OPENIND         reduce using rule 21 (expr -> DEC id .)
    ID              reduce using rule 21 (expr -> DEC id .)
    $end            reduce using rule 21 (expr -> DEC id .)
    CLOSEST         reduce using rule 21 (expr -> DEC id .)
    CLOSEBR         reduce using rule 21 (expr -> DEC id .)
    COMMA           reduce using rule 21 (expr -> DEC id .)
    ELSE            reduce using rule 21 (expr -> DEC id .)
    CLOSEIND        reduce using rule 21 (expr -> DEC id .)
    DCOMMA          reduce using rule 21 (expr -> DEC id .)


state 58

    (33) expr -> SZ1 id .

    PLUS            reduce using rule 33 (expr -> SZ1 id .)
    MINUS           reduce using rule 33 (expr -> SZ1 id .)
    MUL             reduce using rule 33 (expr -> SZ1 id .)
    DIV             reduce using rule 33 (expr -> SZ1 id .)
    OR              reduce using rule 33 (expr -> SZ1 id .)
    GT              reduce using rule 33 (expr -> SZ1 id .)
    LT              reduce using rule 33 (expr -> SZ1 id .)
    EQ              reduce using rule 33 (expr -> SZ1 id .)
    error           reduce using rule 33 (expr -> SZ1 id .)
    OPENST          reduce using rule 33 (expr -> SZ1 id .)
    WHILE           reduce using rule 33 (expr -> SZ1 id .)
    IF              reduce using rule 33 (expr -> SZ1 id .)
    NOT             reduce using rule 33 (expr -> SZ1 id .)
    INC             reduce using rule 33 (expr -> SZ1 id .)
    DEC             reduce using rule 33 (expr -> SZ1 id .)
    OPENBR          reduce using rule 33 (expr -> SZ1 id .)
    SZ1             reduce using rule 33 (expr -> SZ1 id .)
    SZ2             reduce using rule 33 (expr -> SZ1 id .)
    NUM             reduce using rule 33 (expr -> SZ1 id .)
    UINT            reduce using rule 33 (expr -> SZ1 id .)
    CUINT           reduce using rule 33 (expr -> SZ1 id .)
    BOOL            reduce using rule 33 (expr -> SZ1 id .)
    CBOOL           reduce using rule 33 (expr -> SZ1 id .)
    1DARRBOOL       reduce using rule 33 (expr -> SZ1 id .)
    1DARRINT        reduce using rule 33 (expr -> SZ1 id .)
    2DARRBOOL       reduce using rule 33 (expr -> SZ1 id .)
    2DARRINT        reduce using rule 33 (expr -> SZ1 id .)
    EXTEND1         reduce using rule 33 (expr -> SZ1 id .)
    EXTEND2         reduce using rule 33 (expr -> SZ1 id .)
    OPENIND         reduce using rule 33 (expr -> SZ1 id .)
    ID              reduce using rule 33 (expr -> SZ1 id .)
    $end            reduce using rule 33 (expr -> SZ1 id .)
    CLOSEST         reduce using rule 33 (expr -> SZ1 id .)
    CLOSEBR         reduce using rule 33 (expr -> SZ1 id .)
    COMMA           reduce using rule 33 (expr -> SZ1 id .)
    ELSE            reduce using rule 33 (expr -> SZ1 id .)
    CLOSEIND        reduce using rule 33 (expr -> SZ1 id .)
    DCOMMA          reduce using rule 33 (expr -> SZ1 id .)


state 59

    (34) expr -> SZ2 id . expr
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (85) id -> . ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    ID              shift and go to state 37

    id                             shift and go to state 50
    expr                           shift and go to state 90

state 60

    (78) create_id -> UINT id . ASGN expr

    ASGN            shift and go to state 91


state 61

    (79) create_id -> CUINT id . ASGN expr

    ASGN            shift and go to state 92


state 62

    (80) create_id -> BOOL id . ASGN expr

    ASGN            shift and go to state 93


state 63

    (81) create_id -> CBOOL id . ASGN expr

    ASGN            shift and go to state 94


state 64

    (37) create_1darr -> 1DARRBOOL id . ASGN OPENIND enum CLOSEIND

    ASGN            shift and go to state 95


state 65

    (47) declaration -> OPENIND enum_rets . CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST

    CLOSEIND        shift and go to state 96


state 66

    (59) enum_id -> id .
    (61) enum_id -> id . COMMA enum_id_tail
    (62) enum_id -> id . OPENBR expr CLOSEBR
    (63) enum_id -> id . OPENBR expr CLOSEBR COMMA enum_id_tail
    (64) enum_id -> id . OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (65) enum_id -> id . OPENBR expr CLOSEBR OPENBR expr CLOSEBR COMMA enum_id_tail

    CLOSEIND        reduce using rule 59 (enum_id -> id .)
    COMMA           shift and go to state 97
    OPENBR          shift and go to state 98


state 67

    (58) call -> OPENIND enum_id . CLOSEIND ASGN id OPENBR enum_par CLOSEBR

    CLOSEIND        shift and go to state 99


state 68

    (56) enum_rets -> create_id .
    (57) enum_rets -> create_id . COMMA enum_ids

    CLOSEIND        reduce using rule 56 (enum_rets -> create_id .)
    COMMA           shift and go to state 100


state 69

    (60) enum_id -> COMMA . enum_id
    (59) enum_id -> . id
    (60) enum_id -> . COMMA enum_id
    (61) enum_id -> . id COMMA enum_id_tail
    (62) enum_id -> . id OPENBR expr CLOSEBR
    (63) enum_id -> . id OPENBR expr CLOSEBR COMMA enum_id_tail
    (64) enum_id -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (65) enum_id -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR COMMA enum_id_tail
    (85) id -> . ID

    COMMA           shift and go to state 69
    ID              shift and go to state 37

    enum_id                        shift and go to state 101
    id                             shift and go to state 66

state 70

    (38) create_1darr -> 1DARRINT id . ASGN OPENIND enum CLOSEIND

    ASGN            shift and go to state 102


state 71

    (41) create_2darr -> 2DARRBOOL id . ASGN OPENIND enum2 CLOSEIND

    ASGN            shift and go to state 103


state 72

    (42) create_2darr -> 2DARRINT id . ASGN OPENIND enum2 CLOSEIND

    ASGN            shift and go to state 104


state 73

    (39) extend1 -> EXTEND1 id . expr
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (85) id -> . ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    ID              shift and go to state 37

    id                             shift and go to state 50
    expr                           shift and go to state 105

state 74

    (40) extend2 -> EXTEND2 id . OPENBR expr CLOSEBR OPENBR expr CLOSEBR

    OPENBR          shift and go to state 106


state 75

    (22) expr -> expr PLUS expr .
    (22) expr -> expr . PLUS expr
    (23) expr -> expr . MINUS expr
    (24) expr -> expr . MUL expr
    (25) expr -> expr . DIV expr
    (26) expr -> expr . OR expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . LT expr
    (29) expr -> expr . EQ expr

    PLUS            reduce using rule 22 (expr -> expr PLUS expr .)
    MINUS           reduce using rule 22 (expr -> expr PLUS expr .)
    OR              reduce using rule 22 (expr -> expr PLUS expr .)
    GT              reduce using rule 22 (expr -> expr PLUS expr .)
    LT              reduce using rule 22 (expr -> expr PLUS expr .)
    EQ              reduce using rule 22 (expr -> expr PLUS expr .)
    error           reduce using rule 22 (expr -> expr PLUS expr .)
    OPENST          reduce using rule 22 (expr -> expr PLUS expr .)
    WHILE           reduce using rule 22 (expr -> expr PLUS expr .)
    IF              reduce using rule 22 (expr -> expr PLUS expr .)
    NOT             reduce using rule 22 (expr -> expr PLUS expr .)
    INC             reduce using rule 22 (expr -> expr PLUS expr .)
    DEC             reduce using rule 22 (expr -> expr PLUS expr .)
    OPENBR          reduce using rule 22 (expr -> expr PLUS expr .)
    SZ1             reduce using rule 22 (expr -> expr PLUS expr .)
    SZ2             reduce using rule 22 (expr -> expr PLUS expr .)
    NUM             reduce using rule 22 (expr -> expr PLUS expr .)
    UINT            reduce using rule 22 (expr -> expr PLUS expr .)
    CUINT           reduce using rule 22 (expr -> expr PLUS expr .)
    BOOL            reduce using rule 22 (expr -> expr PLUS expr .)
    CBOOL           reduce using rule 22 (expr -> expr PLUS expr .)
    1DARRBOOL       reduce using rule 22 (expr -> expr PLUS expr .)
    1DARRINT        reduce using rule 22 (expr -> expr PLUS expr .)
    2DARRBOOL       reduce using rule 22 (expr -> expr PLUS expr .)
    2DARRINT        reduce using rule 22 (expr -> expr PLUS expr .)
    EXTEND1         reduce using rule 22 (expr -> expr PLUS expr .)
    EXTEND2         reduce using rule 22 (expr -> expr PLUS expr .)
    OPENIND         reduce using rule 22 (expr -> expr PLUS expr .)
    ID              reduce using rule 22 (expr -> expr PLUS expr .)
    $end            reduce using rule 22 (expr -> expr PLUS expr .)
    CLOSEST         reduce using rule 22 (expr -> expr PLUS expr .)
    CLOSEBR         reduce using rule 22 (expr -> expr PLUS expr .)
    COMMA           reduce using rule 22 (expr -> expr PLUS expr .)
    ELSE            reduce using rule 22 (expr -> expr PLUS expr .)
    CLOSEIND        reduce using rule 22 (expr -> expr PLUS expr .)
    DCOMMA          reduce using rule 22 (expr -> expr PLUS expr .)
    MUL             shift and go to state 41
    DIV             shift and go to state 42

  ! MUL             [ reduce using rule 22 (expr -> expr PLUS expr .) ]
  ! DIV             [ reduce using rule 22 (expr -> expr PLUS expr .) ]
  ! PLUS            [ shift and go to state 39 ]
  ! MINUS           [ shift and go to state 40 ]
  ! OR              [ shift and go to state 43 ]
  ! GT              [ shift and go to state 44 ]
  ! LT              [ shift and go to state 45 ]
  ! EQ              [ shift and go to state 46 ]


state 76

    (23) expr -> expr MINUS expr .
    (22) expr -> expr . PLUS expr
    (23) expr -> expr . MINUS expr
    (24) expr -> expr . MUL expr
    (25) expr -> expr . DIV expr
    (26) expr -> expr . OR expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . LT expr
    (29) expr -> expr . EQ expr

    PLUS            reduce using rule 23 (expr -> expr MINUS expr .)
    MINUS           reduce using rule 23 (expr -> expr MINUS expr .)
    OR              reduce using rule 23 (expr -> expr MINUS expr .)
    GT              reduce using rule 23 (expr -> expr MINUS expr .)
    LT              reduce using rule 23 (expr -> expr MINUS expr .)
    EQ              reduce using rule 23 (expr -> expr MINUS expr .)
    error           reduce using rule 23 (expr -> expr MINUS expr .)
    OPENST          reduce using rule 23 (expr -> expr MINUS expr .)
    WHILE           reduce using rule 23 (expr -> expr MINUS expr .)
    IF              reduce using rule 23 (expr -> expr MINUS expr .)
    NOT             reduce using rule 23 (expr -> expr MINUS expr .)
    INC             reduce using rule 23 (expr -> expr MINUS expr .)
    DEC             reduce using rule 23 (expr -> expr MINUS expr .)
    OPENBR          reduce using rule 23 (expr -> expr MINUS expr .)
    SZ1             reduce using rule 23 (expr -> expr MINUS expr .)
    SZ2             reduce using rule 23 (expr -> expr MINUS expr .)
    NUM             reduce using rule 23 (expr -> expr MINUS expr .)
    UINT            reduce using rule 23 (expr -> expr MINUS expr .)
    CUINT           reduce using rule 23 (expr -> expr MINUS expr .)
    BOOL            reduce using rule 23 (expr -> expr MINUS expr .)
    CBOOL           reduce using rule 23 (expr -> expr MINUS expr .)
    1DARRBOOL       reduce using rule 23 (expr -> expr MINUS expr .)
    1DARRINT        reduce using rule 23 (expr -> expr MINUS expr .)
    2DARRBOOL       reduce using rule 23 (expr -> expr MINUS expr .)
    2DARRINT        reduce using rule 23 (expr -> expr MINUS expr .)
    EXTEND1         reduce using rule 23 (expr -> expr MINUS expr .)
    EXTEND2         reduce using rule 23 (expr -> expr MINUS expr .)
    OPENIND         reduce using rule 23 (expr -> expr MINUS expr .)
    ID              reduce using rule 23 (expr -> expr MINUS expr .)
    $end            reduce using rule 23 (expr -> expr MINUS expr .)
    CLOSEST         reduce using rule 23 (expr -> expr MINUS expr .)
    CLOSEBR         reduce using rule 23 (expr -> expr MINUS expr .)
    COMMA           reduce using rule 23 (expr -> expr MINUS expr .)
    ELSE            reduce using rule 23 (expr -> expr MINUS expr .)
    CLOSEIND        reduce using rule 23 (expr -> expr MINUS expr .)
    DCOMMA          reduce using rule 23 (expr -> expr MINUS expr .)
    MUL             shift and go to state 41
    DIV             shift and go to state 42

  ! MUL             [ reduce using rule 23 (expr -> expr MINUS expr .) ]
  ! DIV             [ reduce using rule 23 (expr -> expr MINUS expr .) ]
  ! PLUS            [ shift and go to state 39 ]
  ! MINUS           [ shift and go to state 40 ]
  ! OR              [ shift and go to state 43 ]
  ! GT              [ shift and go to state 44 ]
  ! LT              [ shift and go to state 45 ]
  ! EQ              [ shift and go to state 46 ]


state 77

    (24) expr -> expr MUL expr .
    (22) expr -> expr . PLUS expr
    (23) expr -> expr . MINUS expr
    (24) expr -> expr . MUL expr
    (25) expr -> expr . DIV expr
    (26) expr -> expr . OR expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . LT expr
    (29) expr -> expr . EQ expr

    PLUS            reduce using rule 24 (expr -> expr MUL expr .)
    MINUS           reduce using rule 24 (expr -> expr MUL expr .)
    MUL             reduce using rule 24 (expr -> expr MUL expr .)
    DIV             reduce using rule 24 (expr -> expr MUL expr .)
    OR              reduce using rule 24 (expr -> expr MUL expr .)
    GT              reduce using rule 24 (expr -> expr MUL expr .)
    LT              reduce using rule 24 (expr -> expr MUL expr .)
    EQ              reduce using rule 24 (expr -> expr MUL expr .)
    error           reduce using rule 24 (expr -> expr MUL expr .)
    OPENST          reduce using rule 24 (expr -> expr MUL expr .)
    WHILE           reduce using rule 24 (expr -> expr MUL expr .)
    IF              reduce using rule 24 (expr -> expr MUL expr .)
    NOT             reduce using rule 24 (expr -> expr MUL expr .)
    INC             reduce using rule 24 (expr -> expr MUL expr .)
    DEC             reduce using rule 24 (expr -> expr MUL expr .)
    OPENBR          reduce using rule 24 (expr -> expr MUL expr .)
    SZ1             reduce using rule 24 (expr -> expr MUL expr .)
    SZ2             reduce using rule 24 (expr -> expr MUL expr .)
    NUM             reduce using rule 24 (expr -> expr MUL expr .)
    UINT            reduce using rule 24 (expr -> expr MUL expr .)
    CUINT           reduce using rule 24 (expr -> expr MUL expr .)
    BOOL            reduce using rule 24 (expr -> expr MUL expr .)
    CBOOL           reduce using rule 24 (expr -> expr MUL expr .)
    1DARRBOOL       reduce using rule 24 (expr -> expr MUL expr .)
    1DARRINT        reduce using rule 24 (expr -> expr MUL expr .)
    2DARRBOOL       reduce using rule 24 (expr -> expr MUL expr .)
    2DARRINT        reduce using rule 24 (expr -> expr MUL expr .)
    EXTEND1         reduce using rule 24 (expr -> expr MUL expr .)
    EXTEND2         reduce using rule 24 (expr -> expr MUL expr .)
    OPENIND         reduce using rule 24 (expr -> expr MUL expr .)
    ID              reduce using rule 24 (expr -> expr MUL expr .)
    $end            reduce using rule 24 (expr -> expr MUL expr .)
    CLOSEST         reduce using rule 24 (expr -> expr MUL expr .)
    CLOSEBR         reduce using rule 24 (expr -> expr MUL expr .)
    COMMA           reduce using rule 24 (expr -> expr MUL expr .)
    ELSE            reduce using rule 24 (expr -> expr MUL expr .)
    CLOSEIND        reduce using rule 24 (expr -> expr MUL expr .)
    DCOMMA          reduce using rule 24 (expr -> expr MUL expr .)

  ! PLUS            [ shift and go to state 39 ]
  ! MINUS           [ shift and go to state 40 ]
  ! MUL             [ shift and go to state 41 ]
  ! DIV             [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]
  ! GT              [ shift and go to state 44 ]
  ! LT              [ shift and go to state 45 ]
  ! EQ              [ shift and go to state 46 ]


state 78

    (25) expr -> expr DIV expr .
    (22) expr -> expr . PLUS expr
    (23) expr -> expr . MINUS expr
    (24) expr -> expr . MUL expr
    (25) expr -> expr . DIV expr
    (26) expr -> expr . OR expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . LT expr
    (29) expr -> expr . EQ expr

    PLUS            reduce using rule 25 (expr -> expr DIV expr .)
    MINUS           reduce using rule 25 (expr -> expr DIV expr .)
    MUL             reduce using rule 25 (expr -> expr DIV expr .)
    DIV             reduce using rule 25 (expr -> expr DIV expr .)
    OR              reduce using rule 25 (expr -> expr DIV expr .)
    GT              reduce using rule 25 (expr -> expr DIV expr .)
    LT              reduce using rule 25 (expr -> expr DIV expr .)
    EQ              reduce using rule 25 (expr -> expr DIV expr .)
    error           reduce using rule 25 (expr -> expr DIV expr .)
    OPENST          reduce using rule 25 (expr -> expr DIV expr .)
    WHILE           reduce using rule 25 (expr -> expr DIV expr .)
    IF              reduce using rule 25 (expr -> expr DIV expr .)
    NOT             reduce using rule 25 (expr -> expr DIV expr .)
    INC             reduce using rule 25 (expr -> expr DIV expr .)
    DEC             reduce using rule 25 (expr -> expr DIV expr .)
    OPENBR          reduce using rule 25 (expr -> expr DIV expr .)
    SZ1             reduce using rule 25 (expr -> expr DIV expr .)
    SZ2             reduce using rule 25 (expr -> expr DIV expr .)
    NUM             reduce using rule 25 (expr -> expr DIV expr .)
    UINT            reduce using rule 25 (expr -> expr DIV expr .)
    CUINT           reduce using rule 25 (expr -> expr DIV expr .)
    BOOL            reduce using rule 25 (expr -> expr DIV expr .)
    CBOOL           reduce using rule 25 (expr -> expr DIV expr .)
    1DARRBOOL       reduce using rule 25 (expr -> expr DIV expr .)
    1DARRINT        reduce using rule 25 (expr -> expr DIV expr .)
    2DARRBOOL       reduce using rule 25 (expr -> expr DIV expr .)
    2DARRINT        reduce using rule 25 (expr -> expr DIV expr .)
    EXTEND1         reduce using rule 25 (expr -> expr DIV expr .)
    EXTEND2         reduce using rule 25 (expr -> expr DIV expr .)
    OPENIND         reduce using rule 25 (expr -> expr DIV expr .)
    ID              reduce using rule 25 (expr -> expr DIV expr .)
    $end            reduce using rule 25 (expr -> expr DIV expr .)
    CLOSEST         reduce using rule 25 (expr -> expr DIV expr .)
    CLOSEBR         reduce using rule 25 (expr -> expr DIV expr .)
    COMMA           reduce using rule 25 (expr -> expr DIV expr .)
    ELSE            reduce using rule 25 (expr -> expr DIV expr .)
    CLOSEIND        reduce using rule 25 (expr -> expr DIV expr .)
    DCOMMA          reduce using rule 25 (expr -> expr DIV expr .)

  ! PLUS            [ shift and go to state 39 ]
  ! MINUS           [ shift and go to state 40 ]
  ! MUL             [ shift and go to state 41 ]
  ! DIV             [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]
  ! GT              [ shift and go to state 44 ]
  ! LT              [ shift and go to state 45 ]
  ! EQ              [ shift and go to state 46 ]


state 79

    (26) expr -> expr OR expr .
    (22) expr -> expr . PLUS expr
    (23) expr -> expr . MINUS expr
    (24) expr -> expr . MUL expr
    (25) expr -> expr . DIV expr
    (26) expr -> expr . OR expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . LT expr
    (29) expr -> expr . EQ expr

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
    error           reduce using rule 26 (expr -> expr OR expr .)
    OPENST          reduce using rule 26 (expr -> expr OR expr .)
    WHILE           reduce using rule 26 (expr -> expr OR expr .)
    IF              reduce using rule 26 (expr -> expr OR expr .)
    NOT             reduce using rule 26 (expr -> expr OR expr .)
    INC             reduce using rule 26 (expr -> expr OR expr .)
    DEC             reduce using rule 26 (expr -> expr OR expr .)
    OPENBR          reduce using rule 26 (expr -> expr OR expr .)
    SZ1             reduce using rule 26 (expr -> expr OR expr .)
    SZ2             reduce using rule 26 (expr -> expr OR expr .)
    NUM             reduce using rule 26 (expr -> expr OR expr .)
    UINT            reduce using rule 26 (expr -> expr OR expr .)
    CUINT           reduce using rule 26 (expr -> expr OR expr .)
    BOOL            reduce using rule 26 (expr -> expr OR expr .)
    CBOOL           reduce using rule 26 (expr -> expr OR expr .)
    1DARRBOOL       reduce using rule 26 (expr -> expr OR expr .)
    1DARRINT        reduce using rule 26 (expr -> expr OR expr .)
    2DARRBOOL       reduce using rule 26 (expr -> expr OR expr .)
    2DARRINT        reduce using rule 26 (expr -> expr OR expr .)
    EXTEND1         reduce using rule 26 (expr -> expr OR expr .)
    EXTEND2         reduce using rule 26 (expr -> expr OR expr .)
    OPENIND         reduce using rule 26 (expr -> expr OR expr .)
    ID              reduce using rule 26 (expr -> expr OR expr .)
    $end            reduce using rule 26 (expr -> expr OR expr .)
    CLOSEST         reduce using rule 26 (expr -> expr OR expr .)
    CLOSEBR         reduce using rule 26 (expr -> expr OR expr .)
    COMMA           reduce using rule 26 (expr -> expr OR expr .)
    ELSE            reduce using rule 26 (expr -> expr OR expr .)
    CLOSEIND        reduce using rule 26 (expr -> expr OR expr .)
    DCOMMA          reduce using rule 26 (expr -> expr OR expr .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    OR              shift and go to state 43
    GT              shift and go to state 44
    LT              shift and go to state 45
    EQ              shift and go to state 46

  ! PLUS            [ reduce using rule 26 (expr -> expr OR expr .) ]
  ! MINUS           [ reduce using rule 26 (expr -> expr OR expr .) ]
  ! MUL             [ reduce using rule 26 (expr -> expr OR expr .) ]
  ! DIV             [ reduce using rule 26 (expr -> expr OR expr .) ]
  ! OR              [ reduce using rule 26 (expr -> expr OR expr .) ]
  ! GT              [ reduce using rule 26 (expr -> expr OR expr .) ]
  ! LT              [ reduce using rule 26 (expr -> expr OR expr .) ]
  ! EQ              [ reduce using rule 26 (expr -> expr OR expr .) ]


state 80

    (27) expr -> expr GT expr .
    (22) expr -> expr . PLUS expr
    (23) expr -> expr . MINUS expr
    (24) expr -> expr . MUL expr
    (25) expr -> expr . DIV expr
    (26) expr -> expr . OR expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . LT expr
    (29) expr -> expr . EQ expr

    OR              reduce using rule 27 (expr -> expr GT expr .)
    GT              reduce using rule 27 (expr -> expr GT expr .)
    LT              reduce using rule 27 (expr -> expr GT expr .)
    EQ              reduce using rule 27 (expr -> expr GT expr .)
    error           reduce using rule 27 (expr -> expr GT expr .)
    OPENST          reduce using rule 27 (expr -> expr GT expr .)
    WHILE           reduce using rule 27 (expr -> expr GT expr .)
    IF              reduce using rule 27 (expr -> expr GT expr .)
    NOT             reduce using rule 27 (expr -> expr GT expr .)
    INC             reduce using rule 27 (expr -> expr GT expr .)
    DEC             reduce using rule 27 (expr -> expr GT expr .)
    OPENBR          reduce using rule 27 (expr -> expr GT expr .)
    SZ1             reduce using rule 27 (expr -> expr GT expr .)
    SZ2             reduce using rule 27 (expr -> expr GT expr .)
    NUM             reduce using rule 27 (expr -> expr GT expr .)
    UINT            reduce using rule 27 (expr -> expr GT expr .)
    CUINT           reduce using rule 27 (expr -> expr GT expr .)
    BOOL            reduce using rule 27 (expr -> expr GT expr .)
    CBOOL           reduce using rule 27 (expr -> expr GT expr .)
    1DARRBOOL       reduce using rule 27 (expr -> expr GT expr .)
    1DARRINT        reduce using rule 27 (expr -> expr GT expr .)
    2DARRBOOL       reduce using rule 27 (expr -> expr GT expr .)
    2DARRINT        reduce using rule 27 (expr -> expr GT expr .)
    EXTEND1         reduce using rule 27 (expr -> expr GT expr .)
    EXTEND2         reduce using rule 27 (expr -> expr GT expr .)
    OPENIND         reduce using rule 27 (expr -> expr GT expr .)
    ID              reduce using rule 27 (expr -> expr GT expr .)
    $end            reduce using rule 27 (expr -> expr GT expr .)
    CLOSEST         reduce using rule 27 (expr -> expr GT expr .)
    CLOSEBR         reduce using rule 27 (expr -> expr GT expr .)
    COMMA           reduce using rule 27 (expr -> expr GT expr .)
    ELSE            reduce using rule 27 (expr -> expr GT expr .)
    CLOSEIND        reduce using rule 27 (expr -> expr GT expr .)
    DCOMMA          reduce using rule 27 (expr -> expr GT expr .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42

  ! PLUS            [ reduce using rule 27 (expr -> expr GT expr .) ]
  ! MINUS           [ reduce using rule 27 (expr -> expr GT expr .) ]
  ! MUL             [ reduce using rule 27 (expr -> expr GT expr .) ]
  ! DIV             [ reduce using rule 27 (expr -> expr GT expr .) ]
  ! OR              [ shift and go to state 43 ]
  ! GT              [ shift and go to state 44 ]
  ! LT              [ shift and go to state 45 ]
  ! EQ              [ shift and go to state 46 ]


state 81

    (28) expr -> expr LT expr .
    (22) expr -> expr . PLUS expr
    (23) expr -> expr . MINUS expr
    (24) expr -> expr . MUL expr
    (25) expr -> expr . DIV expr
    (26) expr -> expr . OR expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . LT expr
    (29) expr -> expr . EQ expr

    OR              reduce using rule 28 (expr -> expr LT expr .)
    GT              reduce using rule 28 (expr -> expr LT expr .)
    LT              reduce using rule 28 (expr -> expr LT expr .)
    EQ              reduce using rule 28 (expr -> expr LT expr .)
    error           reduce using rule 28 (expr -> expr LT expr .)
    OPENST          reduce using rule 28 (expr -> expr LT expr .)
    WHILE           reduce using rule 28 (expr -> expr LT expr .)
    IF              reduce using rule 28 (expr -> expr LT expr .)
    NOT             reduce using rule 28 (expr -> expr LT expr .)
    INC             reduce using rule 28 (expr -> expr LT expr .)
    DEC             reduce using rule 28 (expr -> expr LT expr .)
    OPENBR          reduce using rule 28 (expr -> expr LT expr .)
    SZ1             reduce using rule 28 (expr -> expr LT expr .)
    SZ2             reduce using rule 28 (expr -> expr LT expr .)
    NUM             reduce using rule 28 (expr -> expr LT expr .)
    UINT            reduce using rule 28 (expr -> expr LT expr .)
    CUINT           reduce using rule 28 (expr -> expr LT expr .)
    BOOL            reduce using rule 28 (expr -> expr LT expr .)
    CBOOL           reduce using rule 28 (expr -> expr LT expr .)
    1DARRBOOL       reduce using rule 28 (expr -> expr LT expr .)
    1DARRINT        reduce using rule 28 (expr -> expr LT expr .)
    2DARRBOOL       reduce using rule 28 (expr -> expr LT expr .)
    2DARRINT        reduce using rule 28 (expr -> expr LT expr .)
    EXTEND1         reduce using rule 28 (expr -> expr LT expr .)
    EXTEND2         reduce using rule 28 (expr -> expr LT expr .)
    OPENIND         reduce using rule 28 (expr -> expr LT expr .)
    ID              reduce using rule 28 (expr -> expr LT expr .)
    $end            reduce using rule 28 (expr -> expr LT expr .)
    CLOSEST         reduce using rule 28 (expr -> expr LT expr .)
    CLOSEBR         reduce using rule 28 (expr -> expr LT expr .)
    COMMA           reduce using rule 28 (expr -> expr LT expr .)
    ELSE            reduce using rule 28 (expr -> expr LT expr .)
    CLOSEIND        reduce using rule 28 (expr -> expr LT expr .)
    DCOMMA          reduce using rule 28 (expr -> expr LT expr .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42

  ! PLUS            [ reduce using rule 28 (expr -> expr LT expr .) ]
  ! MINUS           [ reduce using rule 28 (expr -> expr LT expr .) ]
  ! MUL             [ reduce using rule 28 (expr -> expr LT expr .) ]
  ! DIV             [ reduce using rule 28 (expr -> expr LT expr .) ]
  ! OR              [ shift and go to state 43 ]
  ! GT              [ shift and go to state 44 ]
  ! LT              [ shift and go to state 45 ]
  ! EQ              [ shift and go to state 46 ]


state 82

    (29) expr -> expr EQ expr .
    (22) expr -> expr . PLUS expr
    (23) expr -> expr . MINUS expr
    (24) expr -> expr . MUL expr
    (25) expr -> expr . DIV expr
    (26) expr -> expr . OR expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . LT expr
    (29) expr -> expr . EQ expr

    OR              reduce using rule 29 (expr -> expr EQ expr .)
    GT              reduce using rule 29 (expr -> expr EQ expr .)
    LT              reduce using rule 29 (expr -> expr EQ expr .)
    EQ              reduce using rule 29 (expr -> expr EQ expr .)
    error           reduce using rule 29 (expr -> expr EQ expr .)
    OPENST          reduce using rule 29 (expr -> expr EQ expr .)
    WHILE           reduce using rule 29 (expr -> expr EQ expr .)
    IF              reduce using rule 29 (expr -> expr EQ expr .)
    NOT             reduce using rule 29 (expr -> expr EQ expr .)
    INC             reduce using rule 29 (expr -> expr EQ expr .)
    DEC             reduce using rule 29 (expr -> expr EQ expr .)
    OPENBR          reduce using rule 29 (expr -> expr EQ expr .)
    SZ1             reduce using rule 29 (expr -> expr EQ expr .)
    SZ2             reduce using rule 29 (expr -> expr EQ expr .)
    NUM             reduce using rule 29 (expr -> expr EQ expr .)
    UINT            reduce using rule 29 (expr -> expr EQ expr .)
    CUINT           reduce using rule 29 (expr -> expr EQ expr .)
    BOOL            reduce using rule 29 (expr -> expr EQ expr .)
    CBOOL           reduce using rule 29 (expr -> expr EQ expr .)
    1DARRBOOL       reduce using rule 29 (expr -> expr EQ expr .)
    1DARRINT        reduce using rule 29 (expr -> expr EQ expr .)
    2DARRBOOL       reduce using rule 29 (expr -> expr EQ expr .)
    2DARRINT        reduce using rule 29 (expr -> expr EQ expr .)
    EXTEND1         reduce using rule 29 (expr -> expr EQ expr .)
    EXTEND2         reduce using rule 29 (expr -> expr EQ expr .)
    OPENIND         reduce using rule 29 (expr -> expr EQ expr .)
    ID              reduce using rule 29 (expr -> expr EQ expr .)
    $end            reduce using rule 29 (expr -> expr EQ expr .)
    CLOSEST         reduce using rule 29 (expr -> expr EQ expr .)
    CLOSEBR         reduce using rule 29 (expr -> expr EQ expr .)
    COMMA           reduce using rule 29 (expr -> expr EQ expr .)
    ELSE            reduce using rule 29 (expr -> expr EQ expr .)
    CLOSEIND        reduce using rule 29 (expr -> expr EQ expr .)
    DCOMMA          reduce using rule 29 (expr -> expr EQ expr .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42

  ! PLUS            [ reduce using rule 29 (expr -> expr EQ expr .) ]
  ! MINUS           [ reduce using rule 29 (expr -> expr EQ expr .) ]
  ! MUL             [ reduce using rule 29 (expr -> expr EQ expr .) ]
  ! DIV             [ reduce using rule 29 (expr -> expr EQ expr .) ]
  ! OR              [ shift and go to state 43 ]
  ! GT              [ shift and go to state 44 ]
  ! LT              [ shift and go to state 45 ]
  ! EQ              [ shift and go to state 46 ]


state 83

    (6) statement -> OPENST stmt_list CLOSEST .

    error           reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    OPENST          reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    WHILE           reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    IF              reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    MINUS           reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    NOT             reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    INC             reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    DEC             reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    OPENBR          reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    SZ1             reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    SZ2             reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    NUM             reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    UINT            reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    CUINT           reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    BOOL            reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    CBOOL           reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    1DARRBOOL       reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    1DARRINT        reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    2DARRBOOL       reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    2DARRINT        reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    EXTEND1         reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    EXTEND2         reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    OPENIND         reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    ID              reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    $end            reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    CLOSEST         reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    ELSE            reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)


state 84

    (15) statement -> WHILE OPENBR expr . CLOSEBR DO statement
    (22) expr -> expr . PLUS expr
    (23) expr -> expr . MINUS expr
    (24) expr -> expr . MUL expr
    (25) expr -> expr . DIV expr
    (26) expr -> expr . OR expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . LT expr
    (29) expr -> expr . EQ expr

    CLOSEBR         shift and go to state 107
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    OR              shift and go to state 43
    GT              shift and go to state 44
    LT              shift and go to state 45
    EQ              shift and go to state 46


state 85

    (30) expr -> OPENBR expr CLOSEBR .

    PLUS            reduce using rule 30 (expr -> OPENBR expr CLOSEBR .)
    MINUS           reduce using rule 30 (expr -> OPENBR expr CLOSEBR .)
    MUL             reduce using rule 30 (expr -> OPENBR expr CLOSEBR .)
    DIV             reduce using rule 30 (expr -> OPENBR expr CLOSEBR .)
    OR              reduce using rule 30 (expr -> OPENBR expr CLOSEBR .)
    GT              reduce using rule 30 (expr -> OPENBR expr CLOSEBR .)
    LT              reduce using rule 30 (expr -> OPENBR expr CLOSEBR .)
    EQ              reduce using rule 30 (expr -> OPENBR expr CLOSEBR .)
    error           reduce using rule 30 (expr -> OPENBR expr CLOSEBR .)
    OPENST          reduce using rule 30 (expr -> OPENBR expr CLOSEBR .)
    WHILE           reduce using rule 30 (expr -> OPENBR expr CLOSEBR .)
    IF              reduce using rule 30 (expr -> OPENBR expr CLOSEBR .)
    NOT             reduce using rule 30 (expr -> OPENBR expr CLOSEBR .)
    INC             reduce using rule 30 (expr -> OPENBR expr CLOSEBR .)
    DEC             reduce using rule 30 (expr -> OPENBR expr CLOSEBR .)
    OPENBR          reduce using rule 30 (expr -> OPENBR expr CLOSEBR .)
    SZ1             reduce using rule 30 (expr -> OPENBR expr CLOSEBR .)
    SZ2             reduce using rule 30 (expr -> OPENBR expr CLOSEBR .)
    NUM             reduce using rule 30 (expr -> OPENBR expr CLOSEBR .)
    UINT            reduce using rule 30 (expr -> OPENBR expr CLOSEBR .)
    CUINT           reduce using rule 30 (expr -> OPENBR expr CLOSEBR .)
    BOOL            reduce using rule 30 (expr -> OPENBR expr CLOSEBR .)
    CBOOL           reduce using rule 30 (expr -> OPENBR expr CLOSEBR .)
    1DARRBOOL       reduce using rule 30 (expr -> OPENBR expr CLOSEBR .)
    1DARRINT        reduce using rule 30 (expr -> OPENBR expr CLOSEBR .)
    2DARRBOOL       reduce using rule 30 (expr -> OPENBR expr CLOSEBR .)
    2DARRINT        reduce using rule 30 (expr -> OPENBR expr CLOSEBR .)
    EXTEND1         reduce using rule 30 (expr -> OPENBR expr CLOSEBR .)
    EXTEND2         reduce using rule 30 (expr -> OPENBR expr CLOSEBR .)
    OPENIND         reduce using rule 30 (expr -> OPENBR expr CLOSEBR .)
    ID              reduce using rule 30 (expr -> OPENBR expr CLOSEBR .)
    $end            reduce using rule 30 (expr -> OPENBR expr CLOSEBR .)
    CLOSEST         reduce using rule 30 (expr -> OPENBR expr CLOSEBR .)
    CLOSEBR         reduce using rule 30 (expr -> OPENBR expr CLOSEBR .)
    COMMA           reduce using rule 30 (expr -> OPENBR expr CLOSEBR .)
    ELSE            reduce using rule 30 (expr -> OPENBR expr CLOSEBR .)
    CLOSEIND        reduce using rule 30 (expr -> OPENBR expr CLOSEBR .)
    DCOMMA          reduce using rule 30 (expr -> OPENBR expr CLOSEBR .)


state 86

    (31) expr -> id OPENBR . expr CLOSEBR
    (32) expr -> id OPENBR . expr CLOSEBR OPENBR expr CLOSEBR
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (85) id -> . ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    ID              shift and go to state 37

    id                             shift and go to state 50
    expr                           shift and go to state 108

state 87

    (16) statement -> IF OPENBR expr . CLOSEBR statement
    (17) statement -> IF OPENBR expr . CLOSEBR statement ELSE statement
    (22) expr -> expr . PLUS expr
    (23) expr -> expr . MINUS expr
    (24) expr -> expr . MUL expr
    (25) expr -> expr . DIV expr
    (26) expr -> expr . OR expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . LT expr
    (29) expr -> expr . EQ expr

    CLOSEBR         shift and go to state 109
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    OR              shift and go to state 43
    GT              shift and go to state 44
    LT              shift and go to state 45
    EQ              shift and go to state 46


state 88

    (31) expr -> id OPENBR expr . CLOSEBR
    (32) expr -> id OPENBR expr . CLOSEBR OPENBR expr CLOSEBR
    (83) assign -> id OPENBR expr . CLOSEBR ASGN expr
    (84) assign -> id OPENBR expr . COMMA expr CLOSEBR ASGN expr
    (22) expr -> expr . PLUS expr
    (23) expr -> expr . MINUS expr
    (24) expr -> expr . MUL expr
    (25) expr -> expr . DIV expr
    (26) expr -> expr . OR expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . LT expr
    (29) expr -> expr . EQ expr

    CLOSEBR         shift and go to state 110
    COMMA           shift and go to state 111
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    OR              shift and go to state 43
    GT              shift and go to state 44
    LT              shift and go to state 45
    EQ              shift and go to state 46


state 89

    (82) assign -> id ASGN expr .
    (22) expr -> expr . PLUS expr
    (23) expr -> expr . MINUS expr
    (24) expr -> expr . MUL expr
    (25) expr -> expr . DIV expr
    (26) expr -> expr . OR expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . LT expr
    (29) expr -> expr . EQ expr

    error           reduce using rule 82 (assign -> id ASGN expr .)
    OPENST          reduce using rule 82 (assign -> id ASGN expr .)
    WHILE           reduce using rule 82 (assign -> id ASGN expr .)
    IF              reduce using rule 82 (assign -> id ASGN expr .)
    NOT             reduce using rule 82 (assign -> id ASGN expr .)
    INC             reduce using rule 82 (assign -> id ASGN expr .)
    DEC             reduce using rule 82 (assign -> id ASGN expr .)
    OPENBR          reduce using rule 82 (assign -> id ASGN expr .)
    SZ1             reduce using rule 82 (assign -> id ASGN expr .)
    SZ2             reduce using rule 82 (assign -> id ASGN expr .)
    NUM             reduce using rule 82 (assign -> id ASGN expr .)
    UINT            reduce using rule 82 (assign -> id ASGN expr .)
    CUINT           reduce using rule 82 (assign -> id ASGN expr .)
    BOOL            reduce using rule 82 (assign -> id ASGN expr .)
    CBOOL           reduce using rule 82 (assign -> id ASGN expr .)
    1DARRBOOL       reduce using rule 82 (assign -> id ASGN expr .)
    1DARRINT        reduce using rule 82 (assign -> id ASGN expr .)
    2DARRBOOL       reduce using rule 82 (assign -> id ASGN expr .)
    2DARRINT        reduce using rule 82 (assign -> id ASGN expr .)
    EXTEND1         reduce using rule 82 (assign -> id ASGN expr .)
    EXTEND2         reduce using rule 82 (assign -> id ASGN expr .)
    OPENIND         reduce using rule 82 (assign -> id ASGN expr .)
    ID              reduce using rule 82 (assign -> id ASGN expr .)
    $end            reduce using rule 82 (assign -> id ASGN expr .)
    CLOSEST         reduce using rule 82 (assign -> id ASGN expr .)
    ELSE            reduce using rule 82 (assign -> id ASGN expr .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    OR              shift and go to state 43
    GT              shift and go to state 44
    LT              shift and go to state 45
    EQ              shift and go to state 46

  ! MINUS           [ reduce using rule 82 (assign -> id ASGN expr .) ]


state 90

    (34) expr -> SZ2 id expr .
    (22) expr -> expr . PLUS expr
    (23) expr -> expr . MINUS expr
    (24) expr -> expr . MUL expr
    (25) expr -> expr . DIV expr
    (26) expr -> expr . OR expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . LT expr
    (29) expr -> expr . EQ expr

    PLUS            reduce using rule 34 (expr -> SZ2 id expr .)
    MINUS           reduce using rule 34 (expr -> SZ2 id expr .)
    MUL             reduce using rule 34 (expr -> SZ2 id expr .)
    DIV             reduce using rule 34 (expr -> SZ2 id expr .)
    OR              reduce using rule 34 (expr -> SZ2 id expr .)
    GT              reduce using rule 34 (expr -> SZ2 id expr .)
    LT              reduce using rule 34 (expr -> SZ2 id expr .)
    EQ              reduce using rule 34 (expr -> SZ2 id expr .)
    error           reduce using rule 34 (expr -> SZ2 id expr .)
    OPENST          reduce using rule 34 (expr -> SZ2 id expr .)
    WHILE           reduce using rule 34 (expr -> SZ2 id expr .)
    IF              reduce using rule 34 (expr -> SZ2 id expr .)
    NOT             reduce using rule 34 (expr -> SZ2 id expr .)
    INC             reduce using rule 34 (expr -> SZ2 id expr .)
    DEC             reduce using rule 34 (expr -> SZ2 id expr .)
    OPENBR          reduce using rule 34 (expr -> SZ2 id expr .)
    SZ1             reduce using rule 34 (expr -> SZ2 id expr .)
    SZ2             reduce using rule 34 (expr -> SZ2 id expr .)
    NUM             reduce using rule 34 (expr -> SZ2 id expr .)
    UINT            reduce using rule 34 (expr -> SZ2 id expr .)
    CUINT           reduce using rule 34 (expr -> SZ2 id expr .)
    BOOL            reduce using rule 34 (expr -> SZ2 id expr .)
    CBOOL           reduce using rule 34 (expr -> SZ2 id expr .)
    1DARRBOOL       reduce using rule 34 (expr -> SZ2 id expr .)
    1DARRINT        reduce using rule 34 (expr -> SZ2 id expr .)
    2DARRBOOL       reduce using rule 34 (expr -> SZ2 id expr .)
    2DARRINT        reduce using rule 34 (expr -> SZ2 id expr .)
    EXTEND1         reduce using rule 34 (expr -> SZ2 id expr .)
    EXTEND2         reduce using rule 34 (expr -> SZ2 id expr .)
    OPENIND         reduce using rule 34 (expr -> SZ2 id expr .)
    ID              reduce using rule 34 (expr -> SZ2 id expr .)
    $end            reduce using rule 34 (expr -> SZ2 id expr .)
    CLOSEST         reduce using rule 34 (expr -> SZ2 id expr .)
    CLOSEBR         reduce using rule 34 (expr -> SZ2 id expr .)
    COMMA           reduce using rule 34 (expr -> SZ2 id expr .)
    ELSE            reduce using rule 34 (expr -> SZ2 id expr .)
    CLOSEIND        reduce using rule 34 (expr -> SZ2 id expr .)
    DCOMMA          reduce using rule 34 (expr -> SZ2 id expr .)

  ! PLUS            [ shift and go to state 39 ]
  ! MINUS           [ shift and go to state 40 ]
  ! MUL             [ shift and go to state 41 ]
  ! DIV             [ shift and go to state 42 ]
  ! OR              [ shift and go to state 43 ]
  ! GT              [ shift and go to state 44 ]
  ! LT              [ shift and go to state 45 ]
  ! EQ              [ shift and go to state 46 ]


state 91

    (78) create_id -> UINT id ASGN . expr
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (85) id -> . ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    ID              shift and go to state 37

    id                             shift and go to state 50
    expr                           shift and go to state 112

state 92

    (79) create_id -> CUINT id ASGN . expr
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (85) id -> . ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    ID              shift and go to state 37

    id                             shift and go to state 50
    expr                           shift and go to state 113

state 93

    (80) create_id -> BOOL id ASGN . expr
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (85) id -> . ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    ID              shift and go to state 37

    id                             shift and go to state 50
    expr                           shift and go to state 114

state 94

    (81) create_id -> CBOOL id ASGN . expr
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (85) id -> . ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    ID              shift and go to state 37

    id                             shift and go to state 50
    expr                           shift and go to state 115

state 95

    (37) create_1darr -> 1DARRBOOL id ASGN . OPENIND enum CLOSEIND

    OPENIND         shift and go to state 116


state 96

    (47) declaration -> OPENIND enum_rets CLOSEIND . FUNC id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST

    FUNC            shift and go to state 117


state 97

    (61) enum_id -> id COMMA . enum_id_tail
    (66) enum_id_tail -> .
    (67) enum_id_tail -> . id
    (68) enum_id_tail -> . COMMA enum_id_tail
    (69) enum_id_tail -> . id COMMA enum_id_tail
    (70) enum_id_tail -> . id OPENBR expr CLOSEBR
    (71) enum_id_tail -> . id OPENBR expr CLOSEBR COMMA enum_id_tail
    (72) enum_id_tail -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (73) enum_id_tail -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR COMMA enum_id_tail
    (85) id -> . ID

    CLOSEIND        reduce using rule 66 (enum_id_tail -> .)
    COMMA           shift and go to state 119
    ID              shift and go to state 37

    id                             shift and go to state 118
    enum_id_tail                   shift and go to state 120

state 98

    (62) enum_id -> id OPENBR . expr CLOSEBR
    (63) enum_id -> id OPENBR . expr CLOSEBR COMMA enum_id_tail
    (64) enum_id -> id OPENBR . expr CLOSEBR OPENBR expr CLOSEBR
    (65) enum_id -> id OPENBR . expr CLOSEBR OPENBR expr CLOSEBR COMMA enum_id_tail
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (85) id -> . ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    ID              shift and go to state 37

    id                             shift and go to state 50
    expr                           shift and go to state 121

state 99

    (58) call -> OPENIND enum_id CLOSEIND . ASGN id OPENBR enum_par CLOSEBR

    ASGN            shift and go to state 122


state 100

    (57) enum_rets -> create_id COMMA . enum_ids
    (48) enum_ids -> . create_id
    (49) enum_ids -> . create_1darr
    (50) enum_ids -> . create_2darr
    (51) enum_ids -> . create_id COMMA enum_ids
    (52) enum_ids -> . create_1darr COMMA enum_ids
    (53) enum_ids -> . create_2darr COMMA enum_ids
    (78) create_id -> . UINT id ASGN expr
    (79) create_id -> . CUINT id ASGN expr
    (80) create_id -> . BOOL id ASGN expr
    (81) create_id -> . CBOOL id ASGN expr
    (37) create_1darr -> . 1DARRBOOL id ASGN OPENIND enum CLOSEIND
    (38) create_1darr -> . 1DARRINT id ASGN OPENIND enum CLOSEIND
    (41) create_2darr -> . 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND
    (42) create_2darr -> . 2DARRINT id ASGN OPENIND enum2 CLOSEIND

    UINT            shift and go to state 26
    CUINT           shift and go to state 27
    BOOL            shift and go to state 28
    CBOOL           shift and go to state 29
    1DARRBOOL       shift and go to state 30
    1DARRINT        shift and go to state 32
    2DARRBOOL       shift and go to state 33
    2DARRINT        shift and go to state 34

    create_id                      shift and go to state 123
    enum_ids                       shift and go to state 124
    create_1darr                   shift and go to state 125
    create_2darr                   shift and go to state 126

state 101

    (60) enum_id -> COMMA enum_id .

    CLOSEIND        reduce using rule 60 (enum_id -> COMMA enum_id .)


state 102

    (38) create_1darr -> 1DARRINT id ASGN . OPENIND enum CLOSEIND

    OPENIND         shift and go to state 127


state 103

    (41) create_2darr -> 2DARRBOOL id ASGN . OPENIND enum2 CLOSEIND

    OPENIND         shift and go to state 128


state 104

    (42) create_2darr -> 2DARRINT id ASGN . OPENIND enum2 CLOSEIND

    OPENIND         shift and go to state 129


state 105

    (39) extend1 -> EXTEND1 id expr .
    (22) expr -> expr . PLUS expr
    (23) expr -> expr . MINUS expr
    (24) expr -> expr . MUL expr
    (25) expr -> expr . DIV expr
    (26) expr -> expr . OR expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . LT expr
    (29) expr -> expr . EQ expr

    error           reduce using rule 39 (extend1 -> EXTEND1 id expr .)
    OPENST          reduce using rule 39 (extend1 -> EXTEND1 id expr .)
    WHILE           reduce using rule 39 (extend1 -> EXTEND1 id expr .)
    IF              reduce using rule 39 (extend1 -> EXTEND1 id expr .)
    MINUS           reduce using rule 39 (extend1 -> EXTEND1 id expr .)
    NOT             reduce using rule 39 (extend1 -> EXTEND1 id expr .)
    INC             reduce using rule 39 (extend1 -> EXTEND1 id expr .)
    DEC             reduce using rule 39 (extend1 -> EXTEND1 id expr .)
    OPENBR          reduce using rule 39 (extend1 -> EXTEND1 id expr .)
    SZ1             reduce using rule 39 (extend1 -> EXTEND1 id expr .)
    SZ2             reduce using rule 39 (extend1 -> EXTEND1 id expr .)
    NUM             reduce using rule 39 (extend1 -> EXTEND1 id expr .)
    UINT            reduce using rule 39 (extend1 -> EXTEND1 id expr .)
    CUINT           reduce using rule 39 (extend1 -> EXTEND1 id expr .)
    BOOL            reduce using rule 39 (extend1 -> EXTEND1 id expr .)
    CBOOL           reduce using rule 39 (extend1 -> EXTEND1 id expr .)
    1DARRBOOL       reduce using rule 39 (extend1 -> EXTEND1 id expr .)
    1DARRINT        reduce using rule 39 (extend1 -> EXTEND1 id expr .)
    2DARRBOOL       reduce using rule 39 (extend1 -> EXTEND1 id expr .)
    2DARRINT        reduce using rule 39 (extend1 -> EXTEND1 id expr .)
    EXTEND1         reduce using rule 39 (extend1 -> EXTEND1 id expr .)
    EXTEND2         reduce using rule 39 (extend1 -> EXTEND1 id expr .)
    OPENIND         reduce using rule 39 (extend1 -> EXTEND1 id expr .)
    ID              reduce using rule 39 (extend1 -> EXTEND1 id expr .)
    $end            reduce using rule 39 (extend1 -> EXTEND1 id expr .)
    CLOSEST         reduce using rule 39 (extend1 -> EXTEND1 id expr .)
    ELSE            reduce using rule 39 (extend1 -> EXTEND1 id expr .)
    PLUS            shift and go to state 39
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    OR              shift and go to state 43
    GT              shift and go to state 44
    LT              shift and go to state 45
    EQ              shift and go to state 46

  ! MINUS           [ shift and go to state 40 ]


state 106

    (40) extend2 -> EXTEND2 id OPENBR . expr CLOSEBR OPENBR expr CLOSEBR
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (85) id -> . ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    ID              shift and go to state 37

    id                             shift and go to state 50
    expr                           shift and go to state 130

state 107

    (15) statement -> WHILE OPENBR expr CLOSEBR . DO statement

    DO              shift and go to state 131


state 108

    (31) expr -> id OPENBR expr . CLOSEBR
    (32) expr -> id OPENBR expr . CLOSEBR OPENBR expr CLOSEBR
    (22) expr -> expr . PLUS expr
    (23) expr -> expr . MINUS expr
    (24) expr -> expr . MUL expr
    (25) expr -> expr . DIV expr
    (26) expr -> expr . OR expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . LT expr
    (29) expr -> expr . EQ expr

    CLOSEBR         shift and go to state 132
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    OR              shift and go to state 43
    GT              shift and go to state 44
    LT              shift and go to state 45
    EQ              shift and go to state 46


state 109

    (16) statement -> IF OPENBR expr CLOSEBR . statement
    (17) statement -> IF OPENBR expr CLOSEBR . statement ELSE statement
    (4) statement -> . error
    (5) statement -> . expr
    (6) statement -> . OPENST stmt_list CLOSEST
    (7) statement -> . create_id
    (8) statement -> . assign
    (9) statement -> . create_1darr
    (10) statement -> . create_2darr
    (11) statement -> . extend1
    (12) statement -> . extend2
    (13) statement -> . declaration
    (14) statement -> . call
    (15) statement -> . WHILE OPENBR expr CLOSEBR DO statement
    (16) statement -> . IF OPENBR expr CLOSEBR statement
    (17) statement -> . IF OPENBR expr CLOSEBR statement ELSE statement
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (78) create_id -> . UINT id ASGN expr
    (79) create_id -> . CUINT id ASGN expr
    (80) create_id -> . BOOL id ASGN expr
    (81) create_id -> . CBOOL id ASGN expr
    (82) assign -> . id ASGN expr
    (83) assign -> . id OPENBR expr CLOSEBR ASGN expr
    (84) assign -> . id OPENBR expr COMMA expr CLOSEBR ASGN expr
    (37) create_1darr -> . 1DARRBOOL id ASGN OPENIND enum CLOSEIND
    (38) create_1darr -> . 1DARRINT id ASGN OPENIND enum CLOSEIND
    (41) create_2darr -> . 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND
    (42) create_2darr -> . 2DARRINT id ASGN OPENIND enum2 CLOSEIND
    (39) extend1 -> . EXTEND1 id expr
    (40) extend2 -> . EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (47) declaration -> . OPENIND enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST
    (58) call -> . OPENIND enum_id CLOSEIND ASGN id OPENBR enum_par CLOSEBR
    (85) id -> . ID

    error           shift and go to state 4
    OPENST          shift and go to state 6
    WHILE           shift and go to state 15
    IF              shift and go to state 17
    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    UINT            shift and go to state 26
    CUINT           shift and go to state 27
    BOOL            shift and go to state 28
    CBOOL           shift and go to state 29
    1DARRBOOL       shift and go to state 30
    1DARRINT        shift and go to state 32
    2DARRBOOL       shift and go to state 33
    2DARRINT        shift and go to state 34
    EXTEND1         shift and go to state 35
    EXTEND2         shift and go to state 36
    OPENIND         shift and go to state 31
    ID              shift and go to state 37

    expr                           shift and go to state 5
    statement                      shift and go to state 133
    create_id                      shift and go to state 7
    assign                         shift and go to state 8
    create_1darr                   shift and go to state 9
    create_2darr                   shift and go to state 10
    extend1                        shift and go to state 11
    extend2                        shift and go to state 12
    declaration                    shift and go to state 13
    call                           shift and go to state 14
    id                             shift and go to state 21

state 110

    (31) expr -> id OPENBR expr CLOSEBR .
    (32) expr -> id OPENBR expr CLOSEBR . OPENBR expr CLOSEBR
    (83) assign -> id OPENBR expr CLOSEBR . ASGN expr

  ! shift/reduce conflict for OPENBR resolved as shift
    PLUS            reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    MINUS           reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    MUL             reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    DIV             reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    OR              reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    GT              reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    LT              reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    EQ              reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    error           reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    OPENST          reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    WHILE           reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    IF              reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    NOT             reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    INC             reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    DEC             reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    SZ1             reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    SZ2             reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    NUM             reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    UINT            reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    CUINT           reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    BOOL            reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    CBOOL           reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    1DARRBOOL       reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    1DARRINT        reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    2DARRBOOL       reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    2DARRINT        reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    EXTEND1         reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    EXTEND2         reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    OPENIND         reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    ID              reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    $end            reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    CLOSEST         reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    ELSE            reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    OPENBR          shift and go to state 134
    ASGN            shift and go to state 135

  ! OPENBR          [ reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .) ]


state 111

    (84) assign -> id OPENBR expr COMMA . expr CLOSEBR ASGN expr
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (85) id -> . ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    ID              shift and go to state 37

    id                             shift and go to state 50
    expr                           shift and go to state 136

state 112

    (78) create_id -> UINT id ASGN expr .
    (22) expr -> expr . PLUS expr
    (23) expr -> expr . MINUS expr
    (24) expr -> expr . MUL expr
    (25) expr -> expr . DIV expr
    (26) expr -> expr . OR expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . LT expr
    (29) expr -> expr . EQ expr

    error           reduce using rule 78 (create_id -> UINT id ASGN expr .)
    OPENST          reduce using rule 78 (create_id -> UINT id ASGN expr .)
    WHILE           reduce using rule 78 (create_id -> UINT id ASGN expr .)
    IF              reduce using rule 78 (create_id -> UINT id ASGN expr .)
    NOT             reduce using rule 78 (create_id -> UINT id ASGN expr .)
    INC             reduce using rule 78 (create_id -> UINT id ASGN expr .)
    DEC             reduce using rule 78 (create_id -> UINT id ASGN expr .)
    OPENBR          reduce using rule 78 (create_id -> UINT id ASGN expr .)
    SZ1             reduce using rule 78 (create_id -> UINT id ASGN expr .)
    SZ2             reduce using rule 78 (create_id -> UINT id ASGN expr .)
    NUM             reduce using rule 78 (create_id -> UINT id ASGN expr .)
    UINT            reduce using rule 78 (create_id -> UINT id ASGN expr .)
    CUINT           reduce using rule 78 (create_id -> UINT id ASGN expr .)
    BOOL            reduce using rule 78 (create_id -> UINT id ASGN expr .)
    CBOOL           reduce using rule 78 (create_id -> UINT id ASGN expr .)
    1DARRBOOL       reduce using rule 78 (create_id -> UINT id ASGN expr .)
    1DARRINT        reduce using rule 78 (create_id -> UINT id ASGN expr .)
    2DARRBOOL       reduce using rule 78 (create_id -> UINT id ASGN expr .)
    2DARRINT        reduce using rule 78 (create_id -> UINT id ASGN expr .)
    EXTEND1         reduce using rule 78 (create_id -> UINT id ASGN expr .)
    EXTEND2         reduce using rule 78 (create_id -> UINT id ASGN expr .)
    OPENIND         reduce using rule 78 (create_id -> UINT id ASGN expr .)
    ID              reduce using rule 78 (create_id -> UINT id ASGN expr .)
    $end            reduce using rule 78 (create_id -> UINT id ASGN expr .)
    CLOSEST         reduce using rule 78 (create_id -> UINT id ASGN expr .)
    COMMA           reduce using rule 78 (create_id -> UINT id ASGN expr .)
    CLOSEIND        reduce using rule 78 (create_id -> UINT id ASGN expr .)
    ELSE            reduce using rule 78 (create_id -> UINT id ASGN expr .)
    CLOSEBR         reduce using rule 78 (create_id -> UINT id ASGN expr .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    OR              shift and go to state 43
    GT              shift and go to state 44
    LT              shift and go to state 45
    EQ              shift and go to state 46

  ! MINUS           [ reduce using rule 78 (create_id -> UINT id ASGN expr .) ]


state 113

    (79) create_id -> CUINT id ASGN expr .
    (22) expr -> expr . PLUS expr
    (23) expr -> expr . MINUS expr
    (24) expr -> expr . MUL expr
    (25) expr -> expr . DIV expr
    (26) expr -> expr . OR expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . LT expr
    (29) expr -> expr . EQ expr

    error           reduce using rule 79 (create_id -> CUINT id ASGN expr .)
    OPENST          reduce using rule 79 (create_id -> CUINT id ASGN expr .)
    WHILE           reduce using rule 79 (create_id -> CUINT id ASGN expr .)
    IF              reduce using rule 79 (create_id -> CUINT id ASGN expr .)
    NOT             reduce using rule 79 (create_id -> CUINT id ASGN expr .)
    INC             reduce using rule 79 (create_id -> CUINT id ASGN expr .)
    DEC             reduce using rule 79 (create_id -> CUINT id ASGN expr .)
    OPENBR          reduce using rule 79 (create_id -> CUINT id ASGN expr .)
    SZ1             reduce using rule 79 (create_id -> CUINT id ASGN expr .)
    SZ2             reduce using rule 79 (create_id -> CUINT id ASGN expr .)
    NUM             reduce using rule 79 (create_id -> CUINT id ASGN expr .)
    UINT            reduce using rule 79 (create_id -> CUINT id ASGN expr .)
    CUINT           reduce using rule 79 (create_id -> CUINT id ASGN expr .)
    BOOL            reduce using rule 79 (create_id -> CUINT id ASGN expr .)
    CBOOL           reduce using rule 79 (create_id -> CUINT id ASGN expr .)
    1DARRBOOL       reduce using rule 79 (create_id -> CUINT id ASGN expr .)
    1DARRINT        reduce using rule 79 (create_id -> CUINT id ASGN expr .)
    2DARRBOOL       reduce using rule 79 (create_id -> CUINT id ASGN expr .)
    2DARRINT        reduce using rule 79 (create_id -> CUINT id ASGN expr .)
    EXTEND1         reduce using rule 79 (create_id -> CUINT id ASGN expr .)
    EXTEND2         reduce using rule 79 (create_id -> CUINT id ASGN expr .)
    OPENIND         reduce using rule 79 (create_id -> CUINT id ASGN expr .)
    ID              reduce using rule 79 (create_id -> CUINT id ASGN expr .)
    $end            reduce using rule 79 (create_id -> CUINT id ASGN expr .)
    CLOSEST         reduce using rule 79 (create_id -> CUINT id ASGN expr .)
    COMMA           reduce using rule 79 (create_id -> CUINT id ASGN expr .)
    CLOSEIND        reduce using rule 79 (create_id -> CUINT id ASGN expr .)
    ELSE            reduce using rule 79 (create_id -> CUINT id ASGN expr .)
    CLOSEBR         reduce using rule 79 (create_id -> CUINT id ASGN expr .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    OR              shift and go to state 43
    GT              shift and go to state 44
    LT              shift and go to state 45
    EQ              shift and go to state 46

  ! MINUS           [ reduce using rule 79 (create_id -> CUINT id ASGN expr .) ]


state 114

    (80) create_id -> BOOL id ASGN expr .
    (22) expr -> expr . PLUS expr
    (23) expr -> expr . MINUS expr
    (24) expr -> expr . MUL expr
    (25) expr -> expr . DIV expr
    (26) expr -> expr . OR expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . LT expr
    (29) expr -> expr . EQ expr

    error           reduce using rule 80 (create_id -> BOOL id ASGN expr .)
    OPENST          reduce using rule 80 (create_id -> BOOL id ASGN expr .)
    WHILE           reduce using rule 80 (create_id -> BOOL id ASGN expr .)
    IF              reduce using rule 80 (create_id -> BOOL id ASGN expr .)
    NOT             reduce using rule 80 (create_id -> BOOL id ASGN expr .)
    INC             reduce using rule 80 (create_id -> BOOL id ASGN expr .)
    DEC             reduce using rule 80 (create_id -> BOOL id ASGN expr .)
    OPENBR          reduce using rule 80 (create_id -> BOOL id ASGN expr .)
    SZ1             reduce using rule 80 (create_id -> BOOL id ASGN expr .)
    SZ2             reduce using rule 80 (create_id -> BOOL id ASGN expr .)
    NUM             reduce using rule 80 (create_id -> BOOL id ASGN expr .)
    UINT            reduce using rule 80 (create_id -> BOOL id ASGN expr .)
    CUINT           reduce using rule 80 (create_id -> BOOL id ASGN expr .)
    BOOL            reduce using rule 80 (create_id -> BOOL id ASGN expr .)
    CBOOL           reduce using rule 80 (create_id -> BOOL id ASGN expr .)
    1DARRBOOL       reduce using rule 80 (create_id -> BOOL id ASGN expr .)
    1DARRINT        reduce using rule 80 (create_id -> BOOL id ASGN expr .)
    2DARRBOOL       reduce using rule 80 (create_id -> BOOL id ASGN expr .)
    2DARRINT        reduce using rule 80 (create_id -> BOOL id ASGN expr .)
    EXTEND1         reduce using rule 80 (create_id -> BOOL id ASGN expr .)
    EXTEND2         reduce using rule 80 (create_id -> BOOL id ASGN expr .)
    OPENIND         reduce using rule 80 (create_id -> BOOL id ASGN expr .)
    ID              reduce using rule 80 (create_id -> BOOL id ASGN expr .)
    $end            reduce using rule 80 (create_id -> BOOL id ASGN expr .)
    CLOSEST         reduce using rule 80 (create_id -> BOOL id ASGN expr .)
    COMMA           reduce using rule 80 (create_id -> BOOL id ASGN expr .)
    CLOSEIND        reduce using rule 80 (create_id -> BOOL id ASGN expr .)
    ELSE            reduce using rule 80 (create_id -> BOOL id ASGN expr .)
    CLOSEBR         reduce using rule 80 (create_id -> BOOL id ASGN expr .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    OR              shift and go to state 43
    GT              shift and go to state 44
    LT              shift and go to state 45
    EQ              shift and go to state 46

  ! MINUS           [ reduce using rule 80 (create_id -> BOOL id ASGN expr .) ]


state 115

    (81) create_id -> CBOOL id ASGN expr .
    (22) expr -> expr . PLUS expr
    (23) expr -> expr . MINUS expr
    (24) expr -> expr . MUL expr
    (25) expr -> expr . DIV expr
    (26) expr -> expr . OR expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . LT expr
    (29) expr -> expr . EQ expr

    error           reduce using rule 81 (create_id -> CBOOL id ASGN expr .)
    OPENST          reduce using rule 81 (create_id -> CBOOL id ASGN expr .)
    WHILE           reduce using rule 81 (create_id -> CBOOL id ASGN expr .)
    IF              reduce using rule 81 (create_id -> CBOOL id ASGN expr .)
    NOT             reduce using rule 81 (create_id -> CBOOL id ASGN expr .)
    INC             reduce using rule 81 (create_id -> CBOOL id ASGN expr .)
    DEC             reduce using rule 81 (create_id -> CBOOL id ASGN expr .)
    OPENBR          reduce using rule 81 (create_id -> CBOOL id ASGN expr .)
    SZ1             reduce using rule 81 (create_id -> CBOOL id ASGN expr .)
    SZ2             reduce using rule 81 (create_id -> CBOOL id ASGN expr .)
    NUM             reduce using rule 81 (create_id -> CBOOL id ASGN expr .)
    UINT            reduce using rule 81 (create_id -> CBOOL id ASGN expr .)
    CUINT           reduce using rule 81 (create_id -> CBOOL id ASGN expr .)
    BOOL            reduce using rule 81 (create_id -> CBOOL id ASGN expr .)
    CBOOL           reduce using rule 81 (create_id -> CBOOL id ASGN expr .)
    1DARRBOOL       reduce using rule 81 (create_id -> CBOOL id ASGN expr .)
    1DARRINT        reduce using rule 81 (create_id -> CBOOL id ASGN expr .)
    2DARRBOOL       reduce using rule 81 (create_id -> CBOOL id ASGN expr .)
    2DARRINT        reduce using rule 81 (create_id -> CBOOL id ASGN expr .)
    EXTEND1         reduce using rule 81 (create_id -> CBOOL id ASGN expr .)
    EXTEND2         reduce using rule 81 (create_id -> CBOOL id ASGN expr .)
    OPENIND         reduce using rule 81 (create_id -> CBOOL id ASGN expr .)
    ID              reduce using rule 81 (create_id -> CBOOL id ASGN expr .)
    $end            reduce using rule 81 (create_id -> CBOOL id ASGN expr .)
    CLOSEST         reduce using rule 81 (create_id -> CBOOL id ASGN expr .)
    COMMA           reduce using rule 81 (create_id -> CBOOL id ASGN expr .)
    CLOSEIND        reduce using rule 81 (create_id -> CBOOL id ASGN expr .)
    ELSE            reduce using rule 81 (create_id -> CBOOL id ASGN expr .)
    CLOSEBR         reduce using rule 81 (create_id -> CBOOL id ASGN expr .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    OR              shift and go to state 43
    GT              shift and go to state 44
    LT              shift and go to state 45
    EQ              shift and go to state 46

  ! MINUS           [ reduce using rule 81 (create_id -> CBOOL id ASGN expr .) ]


state 116

    (37) create_1darr -> 1DARRBOOL id ASGN OPENIND . enum CLOSEIND
    (43) enum -> . expr
    (44) enum -> . expr COMMA enum
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (85) id -> . ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    ID              shift and go to state 37

    id                             shift and go to state 50
    enum                           shift and go to state 137
    expr                           shift and go to state 138

state 117

    (47) declaration -> OPENIND enum_rets CLOSEIND FUNC . id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST
    (85) id -> . ID

    ID              shift and go to state 37

    id                             shift and go to state 139

state 118

    (67) enum_id_tail -> id .
    (69) enum_id_tail -> id . COMMA enum_id_tail
    (70) enum_id_tail -> id . OPENBR expr CLOSEBR
    (71) enum_id_tail -> id . OPENBR expr CLOSEBR COMMA enum_id_tail
    (72) enum_id_tail -> id . OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (73) enum_id_tail -> id . OPENBR expr CLOSEBR OPENBR expr CLOSEBR COMMA enum_id_tail

    CLOSEIND        reduce using rule 67 (enum_id_tail -> id .)
    COMMA           shift and go to state 140
    OPENBR          shift and go to state 141


state 119

    (68) enum_id_tail -> COMMA . enum_id_tail
    (66) enum_id_tail -> .
    (67) enum_id_tail -> . id
    (68) enum_id_tail -> . COMMA enum_id_tail
    (69) enum_id_tail -> . id COMMA enum_id_tail
    (70) enum_id_tail -> . id OPENBR expr CLOSEBR
    (71) enum_id_tail -> . id OPENBR expr CLOSEBR COMMA enum_id_tail
    (72) enum_id_tail -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (73) enum_id_tail -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR COMMA enum_id_tail
    (85) id -> . ID

    CLOSEIND        reduce using rule 66 (enum_id_tail -> .)
    COMMA           shift and go to state 119
    ID              shift and go to state 37

    enum_id_tail                   shift and go to state 142
    id                             shift and go to state 118

state 120

    (61) enum_id -> id COMMA enum_id_tail .

    CLOSEIND        reduce using rule 61 (enum_id -> id COMMA enum_id_tail .)


state 121

    (62) enum_id -> id OPENBR expr . CLOSEBR
    (63) enum_id -> id OPENBR expr . CLOSEBR COMMA enum_id_tail
    (64) enum_id -> id OPENBR expr . CLOSEBR OPENBR expr CLOSEBR
    (65) enum_id -> id OPENBR expr . CLOSEBR OPENBR expr CLOSEBR COMMA enum_id_tail
    (22) expr -> expr . PLUS expr
    (23) expr -> expr . MINUS expr
    (24) expr -> expr . MUL expr
    (25) expr -> expr . DIV expr
    (26) expr -> expr . OR expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . LT expr
    (29) expr -> expr . EQ expr

    CLOSEBR         shift and go to state 143
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    OR              shift and go to state 43
    GT              shift and go to state 44
    LT              shift and go to state 45
    EQ              shift and go to state 46


state 122

    (58) call -> OPENIND enum_id CLOSEIND ASGN . id OPENBR enum_par CLOSEBR
    (85) id -> . ID

    ID              shift and go to state 37

    id                             shift and go to state 144

state 123

    (48) enum_ids -> create_id .
    (51) enum_ids -> create_id . COMMA enum_ids

    CLOSEIND        reduce using rule 48 (enum_ids -> create_id .)
    CLOSEBR         reduce using rule 48 (enum_ids -> create_id .)
    COMMA           shift and go to state 145


state 124

    (57) enum_rets -> create_id COMMA enum_ids .

    CLOSEIND        reduce using rule 57 (enum_rets -> create_id COMMA enum_ids .)


state 125

    (49) enum_ids -> create_1darr .
    (52) enum_ids -> create_1darr . COMMA enum_ids

    CLOSEIND        reduce using rule 49 (enum_ids -> create_1darr .)
    CLOSEBR         reduce using rule 49 (enum_ids -> create_1darr .)
    COMMA           shift and go to state 146


state 126

    (50) enum_ids -> create_2darr .
    (53) enum_ids -> create_2darr . COMMA enum_ids

    CLOSEIND        reduce using rule 50 (enum_ids -> create_2darr .)
    CLOSEBR         reduce using rule 50 (enum_ids -> create_2darr .)
    COMMA           shift and go to state 147


state 127

    (38) create_1darr -> 1DARRINT id ASGN OPENIND . enum CLOSEIND
    (43) enum -> . expr
    (44) enum -> . expr COMMA enum
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (85) id -> . ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    ID              shift and go to state 37

    id                             shift and go to state 50
    enum                           shift and go to state 148
    expr                           shift and go to state 138

state 128

    (41) create_2darr -> 2DARRBOOL id ASGN OPENIND . enum2 CLOSEIND
    (45) enum2 -> . enum
    (46) enum2 -> . enum DCOMMA enum2
    (43) enum -> . expr
    (44) enum -> . expr COMMA enum
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (85) id -> . ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    ID              shift and go to state 37

    id                             shift and go to state 50
    enum2                          shift and go to state 149
    enum                           shift and go to state 150
    expr                           shift and go to state 138

state 129

    (42) create_2darr -> 2DARRINT id ASGN OPENIND . enum2 CLOSEIND
    (45) enum2 -> . enum
    (46) enum2 -> . enum DCOMMA enum2
    (43) enum -> . expr
    (44) enum -> . expr COMMA enum
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (85) id -> . ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    ID              shift and go to state 37

    id                             shift and go to state 50
    enum2                          shift and go to state 151
    enum                           shift and go to state 150
    expr                           shift and go to state 138

state 130

    (40) extend2 -> EXTEND2 id OPENBR expr . CLOSEBR OPENBR expr CLOSEBR
    (22) expr -> expr . PLUS expr
    (23) expr -> expr . MINUS expr
    (24) expr -> expr . MUL expr
    (25) expr -> expr . DIV expr
    (26) expr -> expr . OR expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . LT expr
    (29) expr -> expr . EQ expr

    CLOSEBR         shift and go to state 152
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    OR              shift and go to state 43
    GT              shift and go to state 44
    LT              shift and go to state 45
    EQ              shift and go to state 46


state 131

    (15) statement -> WHILE OPENBR expr CLOSEBR DO . statement
    (4) statement -> . error
    (5) statement -> . expr
    (6) statement -> . OPENST stmt_list CLOSEST
    (7) statement -> . create_id
    (8) statement -> . assign
    (9) statement -> . create_1darr
    (10) statement -> . create_2darr
    (11) statement -> . extend1
    (12) statement -> . extend2
    (13) statement -> . declaration
    (14) statement -> . call
    (15) statement -> . WHILE OPENBR expr CLOSEBR DO statement
    (16) statement -> . IF OPENBR expr CLOSEBR statement
    (17) statement -> . IF OPENBR expr CLOSEBR statement ELSE statement
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (78) create_id -> . UINT id ASGN expr
    (79) create_id -> . CUINT id ASGN expr
    (80) create_id -> . BOOL id ASGN expr
    (81) create_id -> . CBOOL id ASGN expr
    (82) assign -> . id ASGN expr
    (83) assign -> . id OPENBR expr CLOSEBR ASGN expr
    (84) assign -> . id OPENBR expr COMMA expr CLOSEBR ASGN expr
    (37) create_1darr -> . 1DARRBOOL id ASGN OPENIND enum CLOSEIND
    (38) create_1darr -> . 1DARRINT id ASGN OPENIND enum CLOSEIND
    (41) create_2darr -> . 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND
    (42) create_2darr -> . 2DARRINT id ASGN OPENIND enum2 CLOSEIND
    (39) extend1 -> . EXTEND1 id expr
    (40) extend2 -> . EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (47) declaration -> . OPENIND enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST
    (58) call -> . OPENIND enum_id CLOSEIND ASGN id OPENBR enum_par CLOSEBR
    (85) id -> . ID

    error           shift and go to state 4
    OPENST          shift and go to state 6
    WHILE           shift and go to state 15
    IF              shift and go to state 17
    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    UINT            shift and go to state 26
    CUINT           shift and go to state 27
    BOOL            shift and go to state 28
    CBOOL           shift and go to state 29
    1DARRBOOL       shift and go to state 30
    1DARRINT        shift and go to state 32
    2DARRBOOL       shift and go to state 33
    2DARRINT        shift and go to state 34
    EXTEND1         shift and go to state 35
    EXTEND2         shift and go to state 36
    OPENIND         shift and go to state 31
    ID              shift and go to state 37

    expr                           shift and go to state 5
    statement                      shift and go to state 153
    create_id                      shift and go to state 7
    assign                         shift and go to state 8
    create_1darr                   shift and go to state 9
    create_2darr                   shift and go to state 10
    extend1                        shift and go to state 11
    extend2                        shift and go to state 12
    declaration                    shift and go to state 13
    call                           shift and go to state 14
    id                             shift and go to state 21

state 132

    (31) expr -> id OPENBR expr CLOSEBR .
    (32) expr -> id OPENBR expr CLOSEBR . OPENBR expr CLOSEBR

  ! shift/reduce conflict for OPENBR resolved as shift
    CLOSEBR         reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    PLUS            reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    MINUS           reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    MUL             reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    DIV             reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    OR              reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    GT              reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    LT              reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    EQ              reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    error           reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    OPENST          reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    WHILE           reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    IF              reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    NOT             reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    INC             reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    DEC             reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    SZ1             reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    SZ2             reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    NUM             reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    UINT            reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    CUINT           reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    BOOL            reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    CBOOL           reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    1DARRBOOL       reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    1DARRINT        reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    2DARRBOOL       reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    2DARRINT        reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    EXTEND1         reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    EXTEND2         reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    OPENIND         reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    ID              reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    $end            reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    CLOSEST         reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    COMMA           reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    ELSE            reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    CLOSEIND        reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    DCOMMA          reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .)
    OPENBR          shift and go to state 134

  ! OPENBR          [ reduce using rule 31 (expr -> id OPENBR expr CLOSEBR .) ]


state 133

    (16) statement -> IF OPENBR expr CLOSEBR statement .
    (17) statement -> IF OPENBR expr CLOSEBR statement . ELSE statement

    error           reduce using rule 16 (statement -> IF OPENBR expr CLOSEBR statement .)
    OPENST          reduce using rule 16 (statement -> IF OPENBR expr CLOSEBR statement .)
    WHILE           reduce using rule 16 (statement -> IF OPENBR expr CLOSEBR statement .)
    IF              reduce using rule 16 (statement -> IF OPENBR expr CLOSEBR statement .)
    MINUS           reduce using rule 16 (statement -> IF OPENBR expr CLOSEBR statement .)
    NOT             reduce using rule 16 (statement -> IF OPENBR expr CLOSEBR statement .)
    INC             reduce using rule 16 (statement -> IF OPENBR expr CLOSEBR statement .)
    DEC             reduce using rule 16 (statement -> IF OPENBR expr CLOSEBR statement .)
    OPENBR          reduce using rule 16 (statement -> IF OPENBR expr CLOSEBR statement .)
    SZ1             reduce using rule 16 (statement -> IF OPENBR expr CLOSEBR statement .)
    SZ2             reduce using rule 16 (statement -> IF OPENBR expr CLOSEBR statement .)
    NUM             reduce using rule 16 (statement -> IF OPENBR expr CLOSEBR statement .)
    UINT            reduce using rule 16 (statement -> IF OPENBR expr CLOSEBR statement .)
    CUINT           reduce using rule 16 (statement -> IF OPENBR expr CLOSEBR statement .)
    BOOL            reduce using rule 16 (statement -> IF OPENBR expr CLOSEBR statement .)
    CBOOL           reduce using rule 16 (statement -> IF OPENBR expr CLOSEBR statement .)
    1DARRBOOL       reduce using rule 16 (statement -> IF OPENBR expr CLOSEBR statement .)
    1DARRINT        reduce using rule 16 (statement -> IF OPENBR expr CLOSEBR statement .)
    2DARRBOOL       reduce using rule 16 (statement -> IF OPENBR expr CLOSEBR statement .)
    2DARRINT        reduce using rule 16 (statement -> IF OPENBR expr CLOSEBR statement .)
    EXTEND1         reduce using rule 16 (statement -> IF OPENBR expr CLOSEBR statement .)
    EXTEND2         reduce using rule 16 (statement -> IF OPENBR expr CLOSEBR statement .)
    OPENIND         reduce using rule 16 (statement -> IF OPENBR expr CLOSEBR statement .)
    ID              reduce using rule 16 (statement -> IF OPENBR expr CLOSEBR statement .)
    $end            reduce using rule 16 (statement -> IF OPENBR expr CLOSEBR statement .)
    CLOSEST         reduce using rule 16 (statement -> IF OPENBR expr CLOSEBR statement .)
    ELSE            shift and go to state 154

  ! ELSE            [ reduce using rule 16 (statement -> IF OPENBR expr CLOSEBR statement .) ]


state 134

    (32) expr -> id OPENBR expr CLOSEBR OPENBR . expr CLOSEBR
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (85) id -> . ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    ID              shift and go to state 37

    id                             shift and go to state 50
    expr                           shift and go to state 155

state 135

    (83) assign -> id OPENBR expr CLOSEBR ASGN . expr
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (85) id -> . ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    ID              shift and go to state 37

    id                             shift and go to state 50
    expr                           shift and go to state 156

state 136

    (84) assign -> id OPENBR expr COMMA expr . CLOSEBR ASGN expr
    (22) expr -> expr . PLUS expr
    (23) expr -> expr . MINUS expr
    (24) expr -> expr . MUL expr
    (25) expr -> expr . DIV expr
    (26) expr -> expr . OR expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . LT expr
    (29) expr -> expr . EQ expr

    CLOSEBR         shift and go to state 157
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    OR              shift and go to state 43
    GT              shift and go to state 44
    LT              shift and go to state 45
    EQ              shift and go to state 46


state 137

    (37) create_1darr -> 1DARRBOOL id ASGN OPENIND enum . CLOSEIND

    CLOSEIND        shift and go to state 158


state 138

    (43) enum -> expr .
    (44) enum -> expr . COMMA enum
    (22) expr -> expr . PLUS expr
    (23) expr -> expr . MINUS expr
    (24) expr -> expr . MUL expr
    (25) expr -> expr . DIV expr
    (26) expr -> expr . OR expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . LT expr
    (29) expr -> expr . EQ expr

    CLOSEIND        reduce using rule 43 (enum -> expr .)
    DCOMMA          reduce using rule 43 (enum -> expr .)
    COMMA           shift and go to state 159
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    OR              shift and go to state 43
    GT              shift and go to state 44
    LT              shift and go to state 45
    EQ              shift and go to state 46


state 139

    (47) declaration -> OPENIND enum_rets CLOSEIND FUNC id . OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST

    OPENBR          shift and go to state 160


state 140

    (69) enum_id_tail -> id COMMA . enum_id_tail
    (66) enum_id_tail -> .
    (67) enum_id_tail -> . id
    (68) enum_id_tail -> . COMMA enum_id_tail
    (69) enum_id_tail -> . id COMMA enum_id_tail
    (70) enum_id_tail -> . id OPENBR expr CLOSEBR
    (71) enum_id_tail -> . id OPENBR expr CLOSEBR COMMA enum_id_tail
    (72) enum_id_tail -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (73) enum_id_tail -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR COMMA enum_id_tail
    (85) id -> . ID

    CLOSEIND        reduce using rule 66 (enum_id_tail -> .)
    COMMA           shift and go to state 119
    ID              shift and go to state 37

    id                             shift and go to state 118
    enum_id_tail                   shift and go to state 161

state 141

    (70) enum_id_tail -> id OPENBR . expr CLOSEBR
    (71) enum_id_tail -> id OPENBR . expr CLOSEBR COMMA enum_id_tail
    (72) enum_id_tail -> id OPENBR . expr CLOSEBR OPENBR expr CLOSEBR
    (73) enum_id_tail -> id OPENBR . expr CLOSEBR OPENBR expr CLOSEBR COMMA enum_id_tail
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (85) id -> . ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    ID              shift and go to state 37

    id                             shift and go to state 50
    expr                           shift and go to state 162

state 142

    (68) enum_id_tail -> COMMA enum_id_tail .

    CLOSEIND        reduce using rule 68 (enum_id_tail -> COMMA enum_id_tail .)


state 143

    (62) enum_id -> id OPENBR expr CLOSEBR .
    (63) enum_id -> id OPENBR expr CLOSEBR . COMMA enum_id_tail
    (64) enum_id -> id OPENBR expr CLOSEBR . OPENBR expr CLOSEBR
    (65) enum_id -> id OPENBR expr CLOSEBR . OPENBR expr CLOSEBR COMMA enum_id_tail

    CLOSEIND        reduce using rule 62 (enum_id -> id OPENBR expr CLOSEBR .)
    COMMA           shift and go to state 164
    OPENBR          shift and go to state 163


state 144

    (58) call -> OPENIND enum_id CLOSEIND ASGN id . OPENBR enum_par CLOSEBR

    OPENBR          shift and go to state 165


state 145

    (51) enum_ids -> create_id COMMA . enum_ids
    (48) enum_ids -> . create_id
    (49) enum_ids -> . create_1darr
    (50) enum_ids -> . create_2darr
    (51) enum_ids -> . create_id COMMA enum_ids
    (52) enum_ids -> . create_1darr COMMA enum_ids
    (53) enum_ids -> . create_2darr COMMA enum_ids
    (78) create_id -> . UINT id ASGN expr
    (79) create_id -> . CUINT id ASGN expr
    (80) create_id -> . BOOL id ASGN expr
    (81) create_id -> . CBOOL id ASGN expr
    (37) create_1darr -> . 1DARRBOOL id ASGN OPENIND enum CLOSEIND
    (38) create_1darr -> . 1DARRINT id ASGN OPENIND enum CLOSEIND
    (41) create_2darr -> . 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND
    (42) create_2darr -> . 2DARRINT id ASGN OPENIND enum2 CLOSEIND

    UINT            shift and go to state 26
    CUINT           shift and go to state 27
    BOOL            shift and go to state 28
    CBOOL           shift and go to state 29
    1DARRBOOL       shift and go to state 30
    1DARRINT        shift and go to state 32
    2DARRBOOL       shift and go to state 33
    2DARRINT        shift and go to state 34

    create_id                      shift and go to state 123
    enum_ids                       shift and go to state 166
    create_1darr                   shift and go to state 125
    create_2darr                   shift and go to state 126

state 146

    (52) enum_ids -> create_1darr COMMA . enum_ids
    (48) enum_ids -> . create_id
    (49) enum_ids -> . create_1darr
    (50) enum_ids -> . create_2darr
    (51) enum_ids -> . create_id COMMA enum_ids
    (52) enum_ids -> . create_1darr COMMA enum_ids
    (53) enum_ids -> . create_2darr COMMA enum_ids
    (78) create_id -> . UINT id ASGN expr
    (79) create_id -> . CUINT id ASGN expr
    (80) create_id -> . BOOL id ASGN expr
    (81) create_id -> . CBOOL id ASGN expr
    (37) create_1darr -> . 1DARRBOOL id ASGN OPENIND enum CLOSEIND
    (38) create_1darr -> . 1DARRINT id ASGN OPENIND enum CLOSEIND
    (41) create_2darr -> . 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND
    (42) create_2darr -> . 2DARRINT id ASGN OPENIND enum2 CLOSEIND

    UINT            shift and go to state 26
    CUINT           shift and go to state 27
    BOOL            shift and go to state 28
    CBOOL           shift and go to state 29
    1DARRBOOL       shift and go to state 30
    1DARRINT        shift and go to state 32
    2DARRBOOL       shift and go to state 33
    2DARRINT        shift and go to state 34

    create_1darr                   shift and go to state 125
    enum_ids                       shift and go to state 167
    create_id                      shift and go to state 123
    create_2darr                   shift and go to state 126

state 147

    (53) enum_ids -> create_2darr COMMA . enum_ids
    (48) enum_ids -> . create_id
    (49) enum_ids -> . create_1darr
    (50) enum_ids -> . create_2darr
    (51) enum_ids -> . create_id COMMA enum_ids
    (52) enum_ids -> . create_1darr COMMA enum_ids
    (53) enum_ids -> . create_2darr COMMA enum_ids
    (78) create_id -> . UINT id ASGN expr
    (79) create_id -> . CUINT id ASGN expr
    (80) create_id -> . BOOL id ASGN expr
    (81) create_id -> . CBOOL id ASGN expr
    (37) create_1darr -> . 1DARRBOOL id ASGN OPENIND enum CLOSEIND
    (38) create_1darr -> . 1DARRINT id ASGN OPENIND enum CLOSEIND
    (41) create_2darr -> . 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND
    (42) create_2darr -> . 2DARRINT id ASGN OPENIND enum2 CLOSEIND

    UINT            shift and go to state 26
    CUINT           shift and go to state 27
    BOOL            shift and go to state 28
    CBOOL           shift and go to state 29
    1DARRBOOL       shift and go to state 30
    1DARRINT        shift and go to state 32
    2DARRBOOL       shift and go to state 33
    2DARRINT        shift and go to state 34

    create_2darr                   shift and go to state 126
    enum_ids                       shift and go to state 168
    create_id                      shift and go to state 123
    create_1darr                   shift and go to state 125

state 148

    (38) create_1darr -> 1DARRINT id ASGN OPENIND enum . CLOSEIND

    CLOSEIND        shift and go to state 169


state 149

    (41) create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 . CLOSEIND

    CLOSEIND        shift and go to state 170


state 150

    (45) enum2 -> enum .
    (46) enum2 -> enum . DCOMMA enum2

    CLOSEIND        reduce using rule 45 (enum2 -> enum .)
    DCOMMA          shift and go to state 171


state 151

    (42) create_2darr -> 2DARRINT id ASGN OPENIND enum2 . CLOSEIND

    CLOSEIND        shift and go to state 172


state 152

    (40) extend2 -> EXTEND2 id OPENBR expr CLOSEBR . OPENBR expr CLOSEBR

    OPENBR          shift and go to state 173


state 153

    (15) statement -> WHILE OPENBR expr CLOSEBR DO statement .

    error           reduce using rule 15 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    OPENST          reduce using rule 15 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    WHILE           reduce using rule 15 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    IF              reduce using rule 15 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    MINUS           reduce using rule 15 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    NOT             reduce using rule 15 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    INC             reduce using rule 15 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    DEC             reduce using rule 15 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    OPENBR          reduce using rule 15 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    SZ1             reduce using rule 15 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    SZ2             reduce using rule 15 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    NUM             reduce using rule 15 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    UINT            reduce using rule 15 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    CUINT           reduce using rule 15 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    BOOL            reduce using rule 15 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    CBOOL           reduce using rule 15 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    1DARRBOOL       reduce using rule 15 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    1DARRINT        reduce using rule 15 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    2DARRBOOL       reduce using rule 15 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    2DARRINT        reduce using rule 15 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    EXTEND1         reduce using rule 15 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    EXTEND2         reduce using rule 15 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    OPENIND         reduce using rule 15 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    ID              reduce using rule 15 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    $end            reduce using rule 15 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    CLOSEST         reduce using rule 15 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    ELSE            reduce using rule 15 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)


state 154

    (17) statement -> IF OPENBR expr CLOSEBR statement ELSE . statement
    (4) statement -> . error
    (5) statement -> . expr
    (6) statement -> . OPENST stmt_list CLOSEST
    (7) statement -> . create_id
    (8) statement -> . assign
    (9) statement -> . create_1darr
    (10) statement -> . create_2darr
    (11) statement -> . extend1
    (12) statement -> . extend2
    (13) statement -> . declaration
    (14) statement -> . call
    (15) statement -> . WHILE OPENBR expr CLOSEBR DO statement
    (16) statement -> . IF OPENBR expr CLOSEBR statement
    (17) statement -> . IF OPENBR expr CLOSEBR statement ELSE statement
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (78) create_id -> . UINT id ASGN expr
    (79) create_id -> . CUINT id ASGN expr
    (80) create_id -> . BOOL id ASGN expr
    (81) create_id -> . CBOOL id ASGN expr
    (82) assign -> . id ASGN expr
    (83) assign -> . id OPENBR expr CLOSEBR ASGN expr
    (84) assign -> . id OPENBR expr COMMA expr CLOSEBR ASGN expr
    (37) create_1darr -> . 1DARRBOOL id ASGN OPENIND enum CLOSEIND
    (38) create_1darr -> . 1DARRINT id ASGN OPENIND enum CLOSEIND
    (41) create_2darr -> . 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND
    (42) create_2darr -> . 2DARRINT id ASGN OPENIND enum2 CLOSEIND
    (39) extend1 -> . EXTEND1 id expr
    (40) extend2 -> . EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (47) declaration -> . OPENIND enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST
    (58) call -> . OPENIND enum_id CLOSEIND ASGN id OPENBR enum_par CLOSEBR
    (85) id -> . ID

    error           shift and go to state 4
    OPENST          shift and go to state 6
    WHILE           shift and go to state 15
    IF              shift and go to state 17
    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    UINT            shift and go to state 26
    CUINT           shift and go to state 27
    BOOL            shift and go to state 28
    CBOOL           shift and go to state 29
    1DARRBOOL       shift and go to state 30
    1DARRINT        shift and go to state 32
    2DARRBOOL       shift and go to state 33
    2DARRINT        shift and go to state 34
    EXTEND1         shift and go to state 35
    EXTEND2         shift and go to state 36
    OPENIND         shift and go to state 31
    ID              shift and go to state 37

    expr                           shift and go to state 5
    statement                      shift and go to state 174
    create_id                      shift and go to state 7
    assign                         shift and go to state 8
    create_1darr                   shift and go to state 9
    create_2darr                   shift and go to state 10
    extend1                        shift and go to state 11
    extend2                        shift and go to state 12
    declaration                    shift and go to state 13
    call                           shift and go to state 14
    id                             shift and go to state 21

state 155

    (32) expr -> id OPENBR expr CLOSEBR OPENBR expr . CLOSEBR
    (22) expr -> expr . PLUS expr
    (23) expr -> expr . MINUS expr
    (24) expr -> expr . MUL expr
    (25) expr -> expr . DIV expr
    (26) expr -> expr . OR expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . LT expr
    (29) expr -> expr . EQ expr

    CLOSEBR         shift and go to state 175
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    OR              shift and go to state 43
    GT              shift and go to state 44
    LT              shift and go to state 45
    EQ              shift and go to state 46


state 156

    (83) assign -> id OPENBR expr CLOSEBR ASGN expr .
    (22) expr -> expr . PLUS expr
    (23) expr -> expr . MINUS expr
    (24) expr -> expr . MUL expr
    (25) expr -> expr . DIV expr
    (26) expr -> expr . OR expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . LT expr
    (29) expr -> expr . EQ expr

    error           reduce using rule 83 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    OPENST          reduce using rule 83 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    WHILE           reduce using rule 83 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    IF              reduce using rule 83 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    NOT             reduce using rule 83 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    INC             reduce using rule 83 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    DEC             reduce using rule 83 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    OPENBR          reduce using rule 83 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    SZ1             reduce using rule 83 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    SZ2             reduce using rule 83 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    NUM             reduce using rule 83 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    UINT            reduce using rule 83 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    CUINT           reduce using rule 83 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    BOOL            reduce using rule 83 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    CBOOL           reduce using rule 83 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    1DARRBOOL       reduce using rule 83 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    1DARRINT        reduce using rule 83 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    2DARRBOOL       reduce using rule 83 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    2DARRINT        reduce using rule 83 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    EXTEND1         reduce using rule 83 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    EXTEND2         reduce using rule 83 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    OPENIND         reduce using rule 83 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    ID              reduce using rule 83 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    $end            reduce using rule 83 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    CLOSEST         reduce using rule 83 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    ELSE            reduce using rule 83 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    OR              shift and go to state 43
    GT              shift and go to state 44
    LT              shift and go to state 45
    EQ              shift and go to state 46

  ! MINUS           [ reduce using rule 83 (assign -> id OPENBR expr CLOSEBR ASGN expr .) ]


state 157

    (84) assign -> id OPENBR expr COMMA expr CLOSEBR . ASGN expr

    ASGN            shift and go to state 176


state 158

    (37) create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .

    error           reduce using rule 37 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    OPENST          reduce using rule 37 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    WHILE           reduce using rule 37 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    IF              reduce using rule 37 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    MINUS           reduce using rule 37 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    NOT             reduce using rule 37 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    INC             reduce using rule 37 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    DEC             reduce using rule 37 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    OPENBR          reduce using rule 37 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    SZ1             reduce using rule 37 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    SZ2             reduce using rule 37 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    NUM             reduce using rule 37 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    UINT            reduce using rule 37 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    CUINT           reduce using rule 37 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    BOOL            reduce using rule 37 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    CBOOL           reduce using rule 37 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    1DARRBOOL       reduce using rule 37 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    1DARRINT        reduce using rule 37 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    2DARRBOOL       reduce using rule 37 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    2DARRINT        reduce using rule 37 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    EXTEND1         reduce using rule 37 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    EXTEND2         reduce using rule 37 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    OPENIND         reduce using rule 37 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    ID              reduce using rule 37 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    $end            reduce using rule 37 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    CLOSEST         reduce using rule 37 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    COMMA           reduce using rule 37 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    CLOSEIND        reduce using rule 37 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    ELSE            reduce using rule 37 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    CLOSEBR         reduce using rule 37 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)


state 159

    (44) enum -> expr COMMA . enum
    (43) enum -> . expr
    (44) enum -> . expr COMMA enum
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (85) id -> . ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    ID              shift and go to state 37

    expr                           shift and go to state 138
    enum                           shift and go to state 177
    id                             shift and go to state 50

state 160

    (47) declaration -> OPENIND enum_rets CLOSEIND FUNC id OPENBR . opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST
    (54) opt_enum_ids -> .
    (55) opt_enum_ids -> . enum_ids
    (48) enum_ids -> . create_id
    (49) enum_ids -> . create_1darr
    (50) enum_ids -> . create_2darr
    (51) enum_ids -> . create_id COMMA enum_ids
    (52) enum_ids -> . create_1darr COMMA enum_ids
    (53) enum_ids -> . create_2darr COMMA enum_ids
    (78) create_id -> . UINT id ASGN expr
    (79) create_id -> . CUINT id ASGN expr
    (80) create_id -> . BOOL id ASGN expr
    (81) create_id -> . CBOOL id ASGN expr
    (37) create_1darr -> . 1DARRBOOL id ASGN OPENIND enum CLOSEIND
    (38) create_1darr -> . 1DARRINT id ASGN OPENIND enum CLOSEIND
    (41) create_2darr -> . 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND
    (42) create_2darr -> . 2DARRINT id ASGN OPENIND enum2 CLOSEIND

    CLOSEBR         reduce using rule 54 (opt_enum_ids -> .)
    UINT            shift and go to state 26
    CUINT           shift and go to state 27
    BOOL            shift and go to state 28
    CBOOL           shift and go to state 29
    1DARRBOOL       shift and go to state 30
    1DARRINT        shift and go to state 32
    2DARRBOOL       shift and go to state 33
    2DARRINT        shift and go to state 34

    opt_enum_ids                   shift and go to state 178
    enum_ids                       shift and go to state 179
    create_id                      shift and go to state 123
    create_1darr                   shift and go to state 125
    create_2darr                   shift and go to state 126

state 161

    (69) enum_id_tail -> id COMMA enum_id_tail .

    CLOSEIND        reduce using rule 69 (enum_id_tail -> id COMMA enum_id_tail .)


state 162

    (70) enum_id_tail -> id OPENBR expr . CLOSEBR
    (71) enum_id_tail -> id OPENBR expr . CLOSEBR COMMA enum_id_tail
    (72) enum_id_tail -> id OPENBR expr . CLOSEBR OPENBR expr CLOSEBR
    (73) enum_id_tail -> id OPENBR expr . CLOSEBR OPENBR expr CLOSEBR COMMA enum_id_tail
    (22) expr -> expr . PLUS expr
    (23) expr -> expr . MINUS expr
    (24) expr -> expr . MUL expr
    (25) expr -> expr . DIV expr
    (26) expr -> expr . OR expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . LT expr
    (29) expr -> expr . EQ expr

    CLOSEBR         shift and go to state 180
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    OR              shift and go to state 43
    GT              shift and go to state 44
    LT              shift and go to state 45
    EQ              shift and go to state 46


state 163

    (64) enum_id -> id OPENBR expr CLOSEBR OPENBR . expr CLOSEBR
    (65) enum_id -> id OPENBR expr CLOSEBR OPENBR . expr CLOSEBR COMMA enum_id_tail
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (85) id -> . ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    ID              shift and go to state 37

    id                             shift and go to state 50
    expr                           shift and go to state 181

state 164

    (63) enum_id -> id OPENBR expr CLOSEBR COMMA . enum_id_tail
    (66) enum_id_tail -> .
    (67) enum_id_tail -> . id
    (68) enum_id_tail -> . COMMA enum_id_tail
    (69) enum_id_tail -> . id COMMA enum_id_tail
    (70) enum_id_tail -> . id OPENBR expr CLOSEBR
    (71) enum_id_tail -> . id OPENBR expr CLOSEBR COMMA enum_id_tail
    (72) enum_id_tail -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (73) enum_id_tail -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR COMMA enum_id_tail
    (85) id -> . ID

    CLOSEIND        reduce using rule 66 (enum_id_tail -> .)
    COMMA           shift and go to state 119
    ID              shift and go to state 37

    id                             shift and go to state 118
    enum_id_tail                   shift and go to state 182

state 165

    (58) call -> OPENIND enum_id CLOSEIND ASGN id OPENBR . enum_par CLOSEBR
    (74) enum_par -> .
    (75) enum_par -> . expr
    (76) enum_par -> . COMMA enum_par
    (77) enum_par -> . expr COMMA enum_par
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (85) id -> . ID

    CLOSEBR         reduce using rule 74 (enum_par -> .)
    COMMA           shift and go to state 185
    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    ID              shift and go to state 37

    id                             shift and go to state 50
    enum_par                       shift and go to state 183
    expr                           shift and go to state 184

state 166

    (51) enum_ids -> create_id COMMA enum_ids .

    CLOSEIND        reduce using rule 51 (enum_ids -> create_id COMMA enum_ids .)
    CLOSEBR         reduce using rule 51 (enum_ids -> create_id COMMA enum_ids .)


state 167

    (52) enum_ids -> create_1darr COMMA enum_ids .

    CLOSEIND        reduce using rule 52 (enum_ids -> create_1darr COMMA enum_ids .)
    CLOSEBR         reduce using rule 52 (enum_ids -> create_1darr COMMA enum_ids .)


state 168

    (53) enum_ids -> create_2darr COMMA enum_ids .

    CLOSEIND        reduce using rule 53 (enum_ids -> create_2darr COMMA enum_ids .)
    CLOSEBR         reduce using rule 53 (enum_ids -> create_2darr COMMA enum_ids .)


state 169

    (38) create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .

    error           reduce using rule 38 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    OPENST          reduce using rule 38 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    WHILE           reduce using rule 38 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    IF              reduce using rule 38 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    MINUS           reduce using rule 38 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    NOT             reduce using rule 38 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    INC             reduce using rule 38 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    DEC             reduce using rule 38 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    OPENBR          reduce using rule 38 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    SZ1             reduce using rule 38 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    SZ2             reduce using rule 38 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    NUM             reduce using rule 38 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    UINT            reduce using rule 38 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    CUINT           reduce using rule 38 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    BOOL            reduce using rule 38 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    CBOOL           reduce using rule 38 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    1DARRBOOL       reduce using rule 38 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    1DARRINT        reduce using rule 38 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    2DARRBOOL       reduce using rule 38 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    2DARRINT        reduce using rule 38 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    EXTEND1         reduce using rule 38 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    EXTEND2         reduce using rule 38 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    OPENIND         reduce using rule 38 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    ID              reduce using rule 38 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    $end            reduce using rule 38 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    CLOSEST         reduce using rule 38 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    COMMA           reduce using rule 38 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    CLOSEIND        reduce using rule 38 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    ELSE            reduce using rule 38 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    CLOSEBR         reduce using rule 38 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)


state 170

    (41) create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .

    error           reduce using rule 41 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    OPENST          reduce using rule 41 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    WHILE           reduce using rule 41 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    IF              reduce using rule 41 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    MINUS           reduce using rule 41 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    NOT             reduce using rule 41 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    INC             reduce using rule 41 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    DEC             reduce using rule 41 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    OPENBR          reduce using rule 41 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    SZ1             reduce using rule 41 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    SZ2             reduce using rule 41 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    NUM             reduce using rule 41 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    UINT            reduce using rule 41 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    CUINT           reduce using rule 41 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    BOOL            reduce using rule 41 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    CBOOL           reduce using rule 41 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    1DARRBOOL       reduce using rule 41 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    1DARRINT        reduce using rule 41 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    2DARRBOOL       reduce using rule 41 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    2DARRINT        reduce using rule 41 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    EXTEND1         reduce using rule 41 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    EXTEND2         reduce using rule 41 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    OPENIND         reduce using rule 41 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    ID              reduce using rule 41 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    $end            reduce using rule 41 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    CLOSEST         reduce using rule 41 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    COMMA           reduce using rule 41 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    CLOSEIND        reduce using rule 41 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    ELSE            reduce using rule 41 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    CLOSEBR         reduce using rule 41 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)


state 171

    (46) enum2 -> enum DCOMMA . enum2
    (45) enum2 -> . enum
    (46) enum2 -> . enum DCOMMA enum2
    (43) enum -> . expr
    (44) enum -> . expr COMMA enum
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (85) id -> . ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    ID              shift and go to state 37

    enum                           shift and go to state 150
    enum2                          shift and go to state 186
    expr                           shift and go to state 138
    id                             shift and go to state 50

state 172

    (42) create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .

    error           reduce using rule 42 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    OPENST          reduce using rule 42 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    WHILE           reduce using rule 42 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    IF              reduce using rule 42 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    MINUS           reduce using rule 42 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    NOT             reduce using rule 42 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    INC             reduce using rule 42 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    DEC             reduce using rule 42 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    OPENBR          reduce using rule 42 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    SZ1             reduce using rule 42 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    SZ2             reduce using rule 42 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    NUM             reduce using rule 42 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    UINT            reduce using rule 42 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    CUINT           reduce using rule 42 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    BOOL            reduce using rule 42 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    CBOOL           reduce using rule 42 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    1DARRBOOL       reduce using rule 42 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    1DARRINT        reduce using rule 42 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    2DARRBOOL       reduce using rule 42 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    2DARRINT        reduce using rule 42 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    EXTEND1         reduce using rule 42 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    EXTEND2         reduce using rule 42 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    OPENIND         reduce using rule 42 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    ID              reduce using rule 42 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    $end            reduce using rule 42 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    CLOSEST         reduce using rule 42 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    COMMA           reduce using rule 42 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    CLOSEIND        reduce using rule 42 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    ELSE            reduce using rule 42 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    CLOSEBR         reduce using rule 42 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)


state 173

    (40) extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR . expr CLOSEBR
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (85) id -> . ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    ID              shift and go to state 37

    id                             shift and go to state 50
    expr                           shift and go to state 187

state 174

    (17) statement -> IF OPENBR expr CLOSEBR statement ELSE statement .

    error           reduce using rule 17 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    OPENST          reduce using rule 17 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    WHILE           reduce using rule 17 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    IF              reduce using rule 17 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    MINUS           reduce using rule 17 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    NOT             reduce using rule 17 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    INC             reduce using rule 17 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    DEC             reduce using rule 17 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    OPENBR          reduce using rule 17 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    SZ1             reduce using rule 17 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    SZ2             reduce using rule 17 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    NUM             reduce using rule 17 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    UINT            reduce using rule 17 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    CUINT           reduce using rule 17 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    BOOL            reduce using rule 17 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    CBOOL           reduce using rule 17 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    1DARRBOOL       reduce using rule 17 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    1DARRINT        reduce using rule 17 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    2DARRBOOL       reduce using rule 17 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    2DARRINT        reduce using rule 17 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    EXTEND1         reduce using rule 17 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    EXTEND2         reduce using rule 17 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    OPENIND         reduce using rule 17 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    ID              reduce using rule 17 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    $end            reduce using rule 17 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    CLOSEST         reduce using rule 17 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    ELSE            reduce using rule 17 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)


state 175

    (32) expr -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .

    PLUS            reduce using rule 32 (expr -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    MINUS           reduce using rule 32 (expr -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    MUL             reduce using rule 32 (expr -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    DIV             reduce using rule 32 (expr -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    OR              reduce using rule 32 (expr -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    GT              reduce using rule 32 (expr -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    LT              reduce using rule 32 (expr -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    EQ              reduce using rule 32 (expr -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    error           reduce using rule 32 (expr -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    OPENST          reduce using rule 32 (expr -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    WHILE           reduce using rule 32 (expr -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    IF              reduce using rule 32 (expr -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    NOT             reduce using rule 32 (expr -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    INC             reduce using rule 32 (expr -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    DEC             reduce using rule 32 (expr -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    OPENBR          reduce using rule 32 (expr -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    SZ1             reduce using rule 32 (expr -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    SZ2             reduce using rule 32 (expr -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    NUM             reduce using rule 32 (expr -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    UINT            reduce using rule 32 (expr -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    CUINT           reduce using rule 32 (expr -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    BOOL            reduce using rule 32 (expr -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    CBOOL           reduce using rule 32 (expr -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    1DARRBOOL       reduce using rule 32 (expr -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    1DARRINT        reduce using rule 32 (expr -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    2DARRBOOL       reduce using rule 32 (expr -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    2DARRINT        reduce using rule 32 (expr -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    EXTEND1         reduce using rule 32 (expr -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    EXTEND2         reduce using rule 32 (expr -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    OPENIND         reduce using rule 32 (expr -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    ID              reduce using rule 32 (expr -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    $end            reduce using rule 32 (expr -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    CLOSEST         reduce using rule 32 (expr -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    CLOSEBR         reduce using rule 32 (expr -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    COMMA           reduce using rule 32 (expr -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    ELSE            reduce using rule 32 (expr -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    CLOSEIND        reduce using rule 32 (expr -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    DCOMMA          reduce using rule 32 (expr -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)


state 176

    (84) assign -> id OPENBR expr COMMA expr CLOSEBR ASGN . expr
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (85) id -> . ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    ID              shift and go to state 37

    id                             shift and go to state 50
    expr                           shift and go to state 188

state 177

    (44) enum -> expr COMMA enum .

    CLOSEIND        reduce using rule 44 (enum -> expr COMMA enum .)
    DCOMMA          reduce using rule 44 (enum -> expr COMMA enum .)


state 178

    (47) declaration -> OPENIND enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids . CLOSEBR OPENST stmt_list CLOSEST

    CLOSEBR         shift and go to state 189


state 179

    (55) opt_enum_ids -> enum_ids .

    CLOSEBR         reduce using rule 55 (opt_enum_ids -> enum_ids .)


state 180

    (70) enum_id_tail -> id OPENBR expr CLOSEBR .
    (71) enum_id_tail -> id OPENBR expr CLOSEBR . COMMA enum_id_tail
    (72) enum_id_tail -> id OPENBR expr CLOSEBR . OPENBR expr CLOSEBR
    (73) enum_id_tail -> id OPENBR expr CLOSEBR . OPENBR expr CLOSEBR COMMA enum_id_tail

    CLOSEIND        reduce using rule 70 (enum_id_tail -> id OPENBR expr CLOSEBR .)
    COMMA           shift and go to state 191
    OPENBR          shift and go to state 190


state 181

    (64) enum_id -> id OPENBR expr CLOSEBR OPENBR expr . CLOSEBR
    (65) enum_id -> id OPENBR expr CLOSEBR OPENBR expr . CLOSEBR COMMA enum_id_tail
    (22) expr -> expr . PLUS expr
    (23) expr -> expr . MINUS expr
    (24) expr -> expr . MUL expr
    (25) expr -> expr . DIV expr
    (26) expr -> expr . OR expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . LT expr
    (29) expr -> expr . EQ expr

    CLOSEBR         shift and go to state 192
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    OR              shift and go to state 43
    GT              shift and go to state 44
    LT              shift and go to state 45
    EQ              shift and go to state 46


state 182

    (63) enum_id -> id OPENBR expr CLOSEBR COMMA enum_id_tail .

    CLOSEIND        reduce using rule 63 (enum_id -> id OPENBR expr CLOSEBR COMMA enum_id_tail .)


state 183

    (58) call -> OPENIND enum_id CLOSEIND ASGN id OPENBR enum_par . CLOSEBR

    CLOSEBR         shift and go to state 193


state 184

    (75) enum_par -> expr .
    (77) enum_par -> expr . COMMA enum_par
    (22) expr -> expr . PLUS expr
    (23) expr -> expr . MINUS expr
    (24) expr -> expr . MUL expr
    (25) expr -> expr . DIV expr
    (26) expr -> expr . OR expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . LT expr
    (29) expr -> expr . EQ expr

    CLOSEBR         reduce using rule 75 (enum_par -> expr .)
    COMMA           shift and go to state 194
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    OR              shift and go to state 43
    GT              shift and go to state 44
    LT              shift and go to state 45
    EQ              shift and go to state 46


state 185

    (76) enum_par -> COMMA . enum_par
    (74) enum_par -> .
    (75) enum_par -> . expr
    (76) enum_par -> . COMMA enum_par
    (77) enum_par -> . expr COMMA enum_par
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (85) id -> . ID

    CLOSEBR         reduce using rule 74 (enum_par -> .)
    COMMA           shift and go to state 185
    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    ID              shift and go to state 37

    enum_par                       shift and go to state 195
    expr                           shift and go to state 184
    id                             shift and go to state 50

state 186

    (46) enum2 -> enum DCOMMA enum2 .

    CLOSEIND        reduce using rule 46 (enum2 -> enum DCOMMA enum2 .)


state 187

    (40) extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr . CLOSEBR
    (22) expr -> expr . PLUS expr
    (23) expr -> expr . MINUS expr
    (24) expr -> expr . MUL expr
    (25) expr -> expr . DIV expr
    (26) expr -> expr . OR expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . LT expr
    (29) expr -> expr . EQ expr

    CLOSEBR         shift and go to state 196
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    OR              shift and go to state 43
    GT              shift and go to state 44
    LT              shift and go to state 45
    EQ              shift and go to state 46


state 188

    (84) assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .
    (22) expr -> expr . PLUS expr
    (23) expr -> expr . MINUS expr
    (24) expr -> expr . MUL expr
    (25) expr -> expr . DIV expr
    (26) expr -> expr . OR expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . LT expr
    (29) expr -> expr . EQ expr

    error           reduce using rule 84 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    OPENST          reduce using rule 84 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    WHILE           reduce using rule 84 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    IF              reduce using rule 84 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    NOT             reduce using rule 84 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    INC             reduce using rule 84 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    DEC             reduce using rule 84 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    OPENBR          reduce using rule 84 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    SZ1             reduce using rule 84 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    SZ2             reduce using rule 84 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    NUM             reduce using rule 84 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    UINT            reduce using rule 84 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    CUINT           reduce using rule 84 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    BOOL            reduce using rule 84 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    CBOOL           reduce using rule 84 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    1DARRBOOL       reduce using rule 84 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    1DARRINT        reduce using rule 84 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    2DARRBOOL       reduce using rule 84 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    2DARRINT        reduce using rule 84 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    EXTEND1         reduce using rule 84 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    EXTEND2         reduce using rule 84 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    OPENIND         reduce using rule 84 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    ID              reduce using rule 84 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    $end            reduce using rule 84 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    CLOSEST         reduce using rule 84 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    ELSE            reduce using rule 84 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    OR              shift and go to state 43
    GT              shift and go to state 44
    LT              shift and go to state 45
    EQ              shift and go to state 46

  ! MINUS           [ reduce using rule 84 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .) ]


state 189

    (47) declaration -> OPENIND enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR . OPENST stmt_list CLOSEST

    OPENST          shift and go to state 197


state 190

    (72) enum_id_tail -> id OPENBR expr CLOSEBR OPENBR . expr CLOSEBR
    (73) enum_id_tail -> id OPENBR expr CLOSEBR OPENBR . expr CLOSEBR COMMA enum_id_tail
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (85) id -> . ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    ID              shift and go to state 37

    id                             shift and go to state 50
    expr                           shift and go to state 198

state 191

    (71) enum_id_tail -> id OPENBR expr CLOSEBR COMMA . enum_id_tail
    (66) enum_id_tail -> .
    (67) enum_id_tail -> . id
    (68) enum_id_tail -> . COMMA enum_id_tail
    (69) enum_id_tail -> . id COMMA enum_id_tail
    (70) enum_id_tail -> . id OPENBR expr CLOSEBR
    (71) enum_id_tail -> . id OPENBR expr CLOSEBR COMMA enum_id_tail
    (72) enum_id_tail -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (73) enum_id_tail -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR COMMA enum_id_tail
    (85) id -> . ID

    CLOSEIND        reduce using rule 66 (enum_id_tail -> .)
    COMMA           shift and go to state 119
    ID              shift and go to state 37

    id                             shift and go to state 118
    enum_id_tail                   shift and go to state 199

state 192

    (64) enum_id -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .
    (65) enum_id -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR . COMMA enum_id_tail

    CLOSEIND        reduce using rule 64 (enum_id -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    COMMA           shift and go to state 200


state 193

    (58) call -> OPENIND enum_id CLOSEIND ASGN id OPENBR enum_par CLOSEBR .

    error           reduce using rule 58 (call -> OPENIND enum_id CLOSEIND ASGN id OPENBR enum_par CLOSEBR .)
    OPENST          reduce using rule 58 (call -> OPENIND enum_id CLOSEIND ASGN id OPENBR enum_par CLOSEBR .)
    WHILE           reduce using rule 58 (call -> OPENIND enum_id CLOSEIND ASGN id OPENBR enum_par CLOSEBR .)
    IF              reduce using rule 58 (call -> OPENIND enum_id CLOSEIND ASGN id OPENBR enum_par CLOSEBR .)
    MINUS           reduce using rule 58 (call -> OPENIND enum_id CLOSEIND ASGN id OPENBR enum_par CLOSEBR .)
    NOT             reduce using rule 58 (call -> OPENIND enum_id CLOSEIND ASGN id OPENBR enum_par CLOSEBR .)
    INC             reduce using rule 58 (call -> OPENIND enum_id CLOSEIND ASGN id OPENBR enum_par CLOSEBR .)
    DEC             reduce using rule 58 (call -> OPENIND enum_id CLOSEIND ASGN id OPENBR enum_par CLOSEBR .)
    OPENBR          reduce using rule 58 (call -> OPENIND enum_id CLOSEIND ASGN id OPENBR enum_par CLOSEBR .)
    SZ1             reduce using rule 58 (call -> OPENIND enum_id CLOSEIND ASGN id OPENBR enum_par CLOSEBR .)
    SZ2             reduce using rule 58 (call -> OPENIND enum_id CLOSEIND ASGN id OPENBR enum_par CLOSEBR .)
    NUM             reduce using rule 58 (call -> OPENIND enum_id CLOSEIND ASGN id OPENBR enum_par CLOSEBR .)
    UINT            reduce using rule 58 (call -> OPENIND enum_id CLOSEIND ASGN id OPENBR enum_par CLOSEBR .)
    CUINT           reduce using rule 58 (call -> OPENIND enum_id CLOSEIND ASGN id OPENBR enum_par CLOSEBR .)
    BOOL            reduce using rule 58 (call -> OPENIND enum_id CLOSEIND ASGN id OPENBR enum_par CLOSEBR .)
    CBOOL           reduce using rule 58 (call -> OPENIND enum_id CLOSEIND ASGN id OPENBR enum_par CLOSEBR .)
    1DARRBOOL       reduce using rule 58 (call -> OPENIND enum_id CLOSEIND ASGN id OPENBR enum_par CLOSEBR .)
    1DARRINT        reduce using rule 58 (call -> OPENIND enum_id CLOSEIND ASGN id OPENBR enum_par CLOSEBR .)
    2DARRBOOL       reduce using rule 58 (call -> OPENIND enum_id CLOSEIND ASGN id OPENBR enum_par CLOSEBR .)
    2DARRINT        reduce using rule 58 (call -> OPENIND enum_id CLOSEIND ASGN id OPENBR enum_par CLOSEBR .)
    EXTEND1         reduce using rule 58 (call -> OPENIND enum_id CLOSEIND ASGN id OPENBR enum_par CLOSEBR .)
    EXTEND2         reduce using rule 58 (call -> OPENIND enum_id CLOSEIND ASGN id OPENBR enum_par CLOSEBR .)
    OPENIND         reduce using rule 58 (call -> OPENIND enum_id CLOSEIND ASGN id OPENBR enum_par CLOSEBR .)
    ID              reduce using rule 58 (call -> OPENIND enum_id CLOSEIND ASGN id OPENBR enum_par CLOSEBR .)
    $end            reduce using rule 58 (call -> OPENIND enum_id CLOSEIND ASGN id OPENBR enum_par CLOSEBR .)
    CLOSEST         reduce using rule 58 (call -> OPENIND enum_id CLOSEIND ASGN id OPENBR enum_par CLOSEBR .)
    ELSE            reduce using rule 58 (call -> OPENIND enum_id CLOSEIND ASGN id OPENBR enum_par CLOSEBR .)


state 194

    (77) enum_par -> expr COMMA . enum_par
    (74) enum_par -> .
    (75) enum_par -> . expr
    (76) enum_par -> . COMMA enum_par
    (77) enum_par -> . expr COMMA enum_par
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (85) id -> . ID

    CLOSEBR         reduce using rule 74 (enum_par -> .)
    COMMA           shift and go to state 185
    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    ID              shift and go to state 37

    expr                           shift and go to state 184
    enum_par                       shift and go to state 201
    id                             shift and go to state 50

state 195

    (76) enum_par -> COMMA enum_par .

    CLOSEBR         reduce using rule 76 (enum_par -> COMMA enum_par .)


state 196

    (40) extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .

    error           reduce using rule 40 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    OPENST          reduce using rule 40 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    WHILE           reduce using rule 40 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    IF              reduce using rule 40 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    MINUS           reduce using rule 40 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    NOT             reduce using rule 40 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    INC             reduce using rule 40 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    DEC             reduce using rule 40 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    OPENBR          reduce using rule 40 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    SZ1             reduce using rule 40 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    SZ2             reduce using rule 40 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    NUM             reduce using rule 40 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    UINT            reduce using rule 40 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    CUINT           reduce using rule 40 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    BOOL            reduce using rule 40 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    CBOOL           reduce using rule 40 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    1DARRBOOL       reduce using rule 40 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    1DARRINT        reduce using rule 40 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    2DARRBOOL       reduce using rule 40 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    2DARRINT        reduce using rule 40 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    EXTEND1         reduce using rule 40 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    EXTEND2         reduce using rule 40 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    OPENIND         reduce using rule 40 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    ID              reduce using rule 40 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    $end            reduce using rule 40 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    CLOSEST         reduce using rule 40 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    ELSE            reduce using rule 40 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)


state 197

    (47) declaration -> OPENIND enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR OPENST . stmt_list CLOSEST
    (2) stmt_list -> . statement
    (3) stmt_list -> . stmt_list statement
    (4) statement -> . error
    (5) statement -> . expr
    (6) statement -> . OPENST stmt_list CLOSEST
    (7) statement -> . create_id
    (8) statement -> . assign
    (9) statement -> . create_1darr
    (10) statement -> . create_2darr
    (11) statement -> . extend1
    (12) statement -> . extend2
    (13) statement -> . declaration
    (14) statement -> . call
    (15) statement -> . WHILE OPENBR expr CLOSEBR DO statement
    (16) statement -> . IF OPENBR expr CLOSEBR statement
    (17) statement -> . IF OPENBR expr CLOSEBR statement ELSE statement
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (78) create_id -> . UINT id ASGN expr
    (79) create_id -> . CUINT id ASGN expr
    (80) create_id -> . BOOL id ASGN expr
    (81) create_id -> . CBOOL id ASGN expr
    (82) assign -> . id ASGN expr
    (83) assign -> . id OPENBR expr CLOSEBR ASGN expr
    (84) assign -> . id OPENBR expr COMMA expr CLOSEBR ASGN expr
    (37) create_1darr -> . 1DARRBOOL id ASGN OPENIND enum CLOSEIND
    (38) create_1darr -> . 1DARRINT id ASGN OPENIND enum CLOSEIND
    (41) create_2darr -> . 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND
    (42) create_2darr -> . 2DARRINT id ASGN OPENIND enum2 CLOSEIND
    (39) extend1 -> . EXTEND1 id expr
    (40) extend2 -> . EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (47) declaration -> . OPENIND enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST
    (58) call -> . OPENIND enum_id CLOSEIND ASGN id OPENBR enum_par CLOSEBR
    (85) id -> . ID

    error           shift and go to state 4
    OPENST          shift and go to state 6
    WHILE           shift and go to state 15
    IF              shift and go to state 17
    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    UINT            shift and go to state 26
    CUINT           shift and go to state 27
    BOOL            shift and go to state 28
    CBOOL           shift and go to state 29
    1DARRBOOL       shift and go to state 30
    1DARRINT        shift and go to state 32
    2DARRBOOL       shift and go to state 33
    2DARRINT        shift and go to state 34
    EXTEND1         shift and go to state 35
    EXTEND2         shift and go to state 36
    OPENIND         shift and go to state 31
    ID              shift and go to state 37

    id                             shift and go to state 21
    stmt_list                      shift and go to state 202
    statement                      shift and go to state 3
    expr                           shift and go to state 5
    create_id                      shift and go to state 7
    assign                         shift and go to state 8
    create_1darr                   shift and go to state 9
    create_2darr                   shift and go to state 10
    extend1                        shift and go to state 11
    extend2                        shift and go to state 12
    declaration                    shift and go to state 13
    call                           shift and go to state 14

state 198

    (72) enum_id_tail -> id OPENBR expr CLOSEBR OPENBR expr . CLOSEBR
    (73) enum_id_tail -> id OPENBR expr CLOSEBR OPENBR expr . CLOSEBR COMMA enum_id_tail
    (22) expr -> expr . PLUS expr
    (23) expr -> expr . MINUS expr
    (24) expr -> expr . MUL expr
    (25) expr -> expr . DIV expr
    (26) expr -> expr . OR expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . LT expr
    (29) expr -> expr . EQ expr

    CLOSEBR         shift and go to state 203
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    OR              shift and go to state 43
    GT              shift and go to state 44
    LT              shift and go to state 45
    EQ              shift and go to state 46


state 199

    (71) enum_id_tail -> id OPENBR expr CLOSEBR COMMA enum_id_tail .

    CLOSEIND        reduce using rule 71 (enum_id_tail -> id OPENBR expr CLOSEBR COMMA enum_id_tail .)


state 200

    (65) enum_id -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR COMMA . enum_id_tail
    (66) enum_id_tail -> .
    (67) enum_id_tail -> . id
    (68) enum_id_tail -> . COMMA enum_id_tail
    (69) enum_id_tail -> . id COMMA enum_id_tail
    (70) enum_id_tail -> . id OPENBR expr CLOSEBR
    (71) enum_id_tail -> . id OPENBR expr CLOSEBR COMMA enum_id_tail
    (72) enum_id_tail -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (73) enum_id_tail -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR COMMA enum_id_tail
    (85) id -> . ID

    CLOSEIND        reduce using rule 66 (enum_id_tail -> .)
    COMMA           shift and go to state 119
    ID              shift and go to state 37

    id                             shift and go to state 118
    enum_id_tail                   shift and go to state 204

state 201

    (77) enum_par -> expr COMMA enum_par .

    CLOSEBR         reduce using rule 77 (enum_par -> expr COMMA enum_par .)


state 202

    (47) declaration -> OPENIND enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list . CLOSEST
    (3) stmt_list -> stmt_list . statement
    (4) statement -> . error
    (5) statement -> . expr
    (6) statement -> . OPENST stmt_list CLOSEST
    (7) statement -> . create_id
    (8) statement -> . assign
    (9) statement -> . create_1darr
    (10) statement -> . create_2darr
    (11) statement -> . extend1
    (12) statement -> . extend2
    (13) statement -> . declaration
    (14) statement -> . call
    (15) statement -> . WHILE OPENBR expr CLOSEBR DO statement
    (16) statement -> . IF OPENBR expr CLOSEBR statement
    (17) statement -> . IF OPENBR expr CLOSEBR statement ELSE statement
    (18) expr -> . MINUS expr
    (19) expr -> . NOT expr
    (20) expr -> . INC id
    (21) expr -> . DEC id
    (22) expr -> . expr PLUS expr
    (23) expr -> . expr MINUS expr
    (24) expr -> . expr MUL expr
    (25) expr -> . expr DIV expr
    (26) expr -> . expr OR expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr LT expr
    (29) expr -> . expr EQ expr
    (30) expr -> . OPENBR expr CLOSEBR
    (31) expr -> . id OPENBR expr CLOSEBR
    (32) expr -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (33) expr -> . SZ1 id
    (34) expr -> . SZ2 id expr
    (35) expr -> . NUM
    (36) expr -> . id
    (78) create_id -> . UINT id ASGN expr
    (79) create_id -> . CUINT id ASGN expr
    (80) create_id -> . BOOL id ASGN expr
    (81) create_id -> . CBOOL id ASGN expr
    (82) assign -> . id ASGN expr
    (83) assign -> . id OPENBR expr CLOSEBR ASGN expr
    (84) assign -> . id OPENBR expr COMMA expr CLOSEBR ASGN expr
    (37) create_1darr -> . 1DARRBOOL id ASGN OPENIND enum CLOSEIND
    (38) create_1darr -> . 1DARRINT id ASGN OPENIND enum CLOSEIND
    (41) create_2darr -> . 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND
    (42) create_2darr -> . 2DARRINT id ASGN OPENIND enum2 CLOSEIND
    (39) extend1 -> . EXTEND1 id expr
    (40) extend2 -> . EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (47) declaration -> . OPENIND enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST
    (58) call -> . OPENIND enum_id CLOSEIND ASGN id OPENBR enum_par CLOSEBR
    (85) id -> . ID

    CLOSEST         shift and go to state 205
    error           shift and go to state 4
    OPENST          shift and go to state 6
    WHILE           shift and go to state 15
    IF              shift and go to state 17
    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    INC             shift and go to state 20
    DEC             shift and go to state 22
    OPENBR          shift and go to state 16
    SZ1             shift and go to state 23
    SZ2             shift and go to state 24
    NUM             shift and go to state 25
    UINT            shift and go to state 26
    CUINT           shift and go to state 27
    BOOL            shift and go to state 28
    CBOOL           shift and go to state 29
    1DARRBOOL       shift and go to state 30
    1DARRINT        shift and go to state 32
    2DARRBOOL       shift and go to state 33
    2DARRINT        shift and go to state 34
    EXTEND1         shift and go to state 35
    EXTEND2         shift and go to state 36
    OPENIND         shift and go to state 31
    ID              shift and go to state 37

    id                             shift and go to state 21
    statement                      shift and go to state 38
    expr                           shift and go to state 5
    create_id                      shift and go to state 7
    assign                         shift and go to state 8
    create_1darr                   shift and go to state 9
    create_2darr                   shift and go to state 10
    extend1                        shift and go to state 11
    extend2                        shift and go to state 12
    declaration                    shift and go to state 13
    call                           shift and go to state 14

state 203

    (72) enum_id_tail -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .
    (73) enum_id_tail -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR . COMMA enum_id_tail

    CLOSEIND        reduce using rule 72 (enum_id_tail -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    COMMA           shift and go to state 206


state 204

    (65) enum_id -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR COMMA enum_id_tail .

    CLOSEIND        reduce using rule 65 (enum_id -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR COMMA enum_id_tail .)


state 205

    (47) declaration -> OPENIND enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST .

    error           reduce using rule 47 (declaration -> OPENIND enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST .)
    OPENST          reduce using rule 47 (declaration -> OPENIND enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST .)
    WHILE           reduce using rule 47 (declaration -> OPENIND enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST .)
    IF              reduce using rule 47 (declaration -> OPENIND enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST .)
    MINUS           reduce using rule 47 (declaration -> OPENIND enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST .)
    NOT             reduce using rule 47 (declaration -> OPENIND enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST .)
    INC             reduce using rule 47 (declaration -> OPENIND enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST .)
    DEC             reduce using rule 47 (declaration -> OPENIND enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST .)
    OPENBR          reduce using rule 47 (declaration -> OPENIND enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST .)
    SZ1             reduce using rule 47 (declaration -> OPENIND enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST .)
    SZ2             reduce using rule 47 (declaration -> OPENIND enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST .)
    NUM             reduce using rule 47 (declaration -> OPENIND enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST .)
    UINT            reduce using rule 47 (declaration -> OPENIND enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST .)
    CUINT           reduce using rule 47 (declaration -> OPENIND enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST .)
    BOOL            reduce using rule 47 (declaration -> OPENIND enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST .)
    CBOOL           reduce using rule 47 (declaration -> OPENIND enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST .)
    1DARRBOOL       reduce using rule 47 (declaration -> OPENIND enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST .)
    1DARRINT        reduce using rule 47 (declaration -> OPENIND enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST .)
    2DARRBOOL       reduce using rule 47 (declaration -> OPENIND enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST .)
    2DARRINT        reduce using rule 47 (declaration -> OPENIND enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST .)
    EXTEND1         reduce using rule 47 (declaration -> OPENIND enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST .)
    EXTEND2         reduce using rule 47 (declaration -> OPENIND enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST .)
    OPENIND         reduce using rule 47 (declaration -> OPENIND enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST .)
    ID              reduce using rule 47 (declaration -> OPENIND enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST .)
    $end            reduce using rule 47 (declaration -> OPENIND enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST .)
    CLOSEST         reduce using rule 47 (declaration -> OPENIND enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST .)
    ELSE            reduce using rule 47 (declaration -> OPENIND enum_rets CLOSEIND FUNC id OPENBR opt_enum_ids CLOSEBR OPENST stmt_list CLOSEST .)


state 206

    (73) enum_id_tail -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR COMMA . enum_id_tail
    (66) enum_id_tail -> .
    (67) enum_id_tail -> . id
    (68) enum_id_tail -> . COMMA enum_id_tail
    (69) enum_id_tail -> . id COMMA enum_id_tail
    (70) enum_id_tail -> . id OPENBR expr CLOSEBR
    (71) enum_id_tail -> . id OPENBR expr CLOSEBR COMMA enum_id_tail
    (72) enum_id_tail -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (73) enum_id_tail -> . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR COMMA enum_id_tail
    (85) id -> . ID

    CLOSEIND        reduce using rule 66 (enum_id_tail -> .)
    COMMA           shift and go to state 119
    ID              shift and go to state 37

    id                             shift and go to state 118
    enum_id_tail                   shift and go to state 207

state 207

    (73) enum_id_tail -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR COMMA enum_id_tail .

    CLOSEIND        reduce using rule 73 (enum_id_tail -> id OPENBR expr CLOSEBR OPENBR expr CLOSEBR COMMA enum_id_tail .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MINUS in state 5 resolved as shift
WARNING: shift/reduce conflict for OPENBR in state 21 resolved as shift
WARNING: shift/reduce conflict for OPENBR in state 50 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 79 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 79 resolved as shift
WARNING: shift/reduce conflict for MUL in state 79 resolved as shift
WARNING: shift/reduce conflict for DIV in state 79 resolved as shift
WARNING: shift/reduce conflict for OR in state 79 resolved as shift
WARNING: shift/reduce conflict for GT in state 79 resolved as shift
WARNING: shift/reduce conflict for LT in state 79 resolved as shift
WARNING: shift/reduce conflict for EQ in state 79 resolved as shift
WARNING: shift/reduce conflict for OPENBR in state 110 resolved as shift
WARNING: shift/reduce conflict for OPENBR in state 132 resolved as shift
