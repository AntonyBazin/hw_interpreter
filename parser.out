Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BACK
    FALSE
    FORW
    FUNC
    GETB
    GETF
    GETL
    GETR
    LEFT
    NL
    PUSHB
    PUSHF
    PUSHL
    PUSHR
    RET
    RIGHT
    TRUE
    UNDO

Grammar

Rule 0     S' -> program
Rule 1     program -> stmt_list
Rule 2     stmt_list -> statement
Rule 3     stmt_list -> stmt_list statement
Rule 4     statement -> error
Rule 5     statement -> expr
Rule 6     statement -> OPENST stmt_list CLOSEST
Rule 7     statement -> create_id
Rule 8     statement -> assign
Rule 9     statement -> create_1darr
Rule 10    statement -> create_2darr
Rule 11    statement -> extend1
Rule 12    statement -> extend2
Rule 13    statement -> WHILE OPENBR expr CLOSEBR DO statement
Rule 14    statement -> IF OPENBR expr CLOSEBR statement
Rule 15    statement -> IF OPENBR expr CLOSEBR statement ELSE statement
Rule 16    expr -> MINUS expr
Rule 17    expr -> NOT expr
Rule 18    expr -> INC id
Rule 19    expr -> DEC id
Rule 20    expr -> expr PLUS expr
Rule 21    expr -> expr MINUS expr
Rule 22    expr -> expr MUL expr
Rule 23    expr -> expr DIV expr
Rule 24    expr -> expr OR expr
Rule 25    expr -> expr GT expr
Rule 26    expr -> expr LT expr
Rule 27    expr -> expr EQ expr
Rule 28    expr -> OPENBR expr CLOSEBR
Rule 29    expr -> id OPENBR expr CLOSEBR
Rule 30    expr -> SZ1 id
Rule 31    expr -> SZ2 id expr
Rule 32    expr -> NUM
Rule 33    expr -> id
Rule 34    create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND
Rule 35    create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND
Rule 36    extend1 -> EXTEND1 id expr
Rule 37    extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
Rule 38    create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND
Rule 39    create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND
Rule 40    enum -> expr
Rule 41    enum -> expr COMMA enum
Rule 42    enum2 -> enum
Rule 43    enum2 -> enum DCOMMA enum2
Rule 44    create_id -> UINT id ASGN expr
Rule 45    create_id -> CUINT id ASGN expr
Rule 46    create_id -> BOOL id ASGN expr
Rule 47    create_id -> CBOOL id ASGN expr
Rule 48    assign -> id ASGN expr
Rule 49    assign -> id OPENBR expr CLOSEBR ASGN expr
Rule 50    assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr
Rule 51    id -> ID

Terminals, with rules where they appear

1DARRBOOL            : 34
1DARRINT             : 35
2DARRBOOL            : 38
2DARRINT             : 39
ASGN                 : 34 35 38 39 44 45 46 47 48 49 50
BACK                 : 
BOOL                 : 46
CBOOL                : 47
CLOSEBR              : 13 14 15 28 29 37 37 49 50
CLOSEIND             : 34 35 38 39
CLOSEST              : 6
COMMA                : 41 50
CUINT                : 45
DCOMMA               : 43
DEC                  : 19
DIV                  : 23
DO                   : 13
ELSE                 : 15
EQ                   : 27
EXTEND1              : 36
EXTEND2              : 37
FALSE                : 
FORW                 : 
FUNC                 : 
GETB                 : 
GETF                 : 
GETL                 : 
GETR                 : 
GT                   : 25
ID                   : 51
IF                   : 14 15
INC                  : 18
LEFT                 : 
LT                   : 26
MINUS                : 16 21
MUL                  : 22
NL                   : 
NOT                  : 17
NUM                  : 32
OPENBR               : 13 14 15 28 29 37 37 49 50
OPENIND              : 34 35 38 39
OPENST               : 6
OR                   : 24
PLUS                 : 20
PUSHB                : 
PUSHF                : 
PUSHL                : 
PUSHR                : 
RET                  : 
RIGHT                : 
SZ1                  : 30
SZ2                  : 31
TRUE                 : 
UINT                 : 44
UNDO                 : 
WHILE                : 13
error                : 4

Nonterminals, with rules where they appear

assign               : 8
create_1darr         : 9
create_2darr         : 10
create_id            : 7
enum                 : 34 35 41 42 43
enum2                : 38 39 43
expr                 : 5 13 14 15 16 17 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 29 31 36 37 37 40 41 44 45 46 47 48 49 49 50 50 50
extend1              : 11
extend2              : 12
id                   : 18 19 29 30 31 33 34 35 36 37 38 39 44 45 46 47 48 49 50
program              : 0
statement            : 2 3 13 14 15 15
stmt_list            : 1 3 6

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . stmt_list
    (2) stmt_list -> . statement
    (3) stmt_list -> . stmt_list statement
    (4) statement -> . error
    (5) statement -> . expr
    (6) statement -> . OPENST stmt_list CLOSEST
    (7) statement -> . create_id
    (8) statement -> . assign
    (9) statement -> . create_1darr
    (10) statement -> . create_2darr
    (11) statement -> . extend1
    (12) statement -> . extend2
    (13) statement -> . WHILE OPENBR expr CLOSEBR DO statement
    (14) statement -> . IF OPENBR expr CLOSEBR statement
    (15) statement -> . IF OPENBR expr CLOSEBR statement ELSE statement
    (16) expr -> . MINUS expr
    (17) expr -> . NOT expr
    (18) expr -> . INC id
    (19) expr -> . DEC id
    (20) expr -> . expr PLUS expr
    (21) expr -> . expr MINUS expr
    (22) expr -> . expr MUL expr
    (23) expr -> . expr DIV expr
    (24) expr -> . expr OR expr
    (25) expr -> . expr GT expr
    (26) expr -> . expr LT expr
    (27) expr -> . expr EQ expr
    (28) expr -> . OPENBR expr CLOSEBR
    (29) expr -> . id OPENBR expr CLOSEBR
    (30) expr -> . SZ1 id
    (31) expr -> . SZ2 id expr
    (32) expr -> . NUM
    (33) expr -> . id
    (44) create_id -> . UINT id ASGN expr
    (45) create_id -> . CUINT id ASGN expr
    (46) create_id -> . BOOL id ASGN expr
    (47) create_id -> . CBOOL id ASGN expr
    (48) assign -> . id ASGN expr
    (49) assign -> . id OPENBR expr CLOSEBR ASGN expr
    (50) assign -> . id OPENBR expr COMMA expr CLOSEBR ASGN expr
    (34) create_1darr -> . 1DARRBOOL id ASGN OPENIND enum CLOSEIND
    (35) create_1darr -> . 1DARRINT id ASGN OPENIND enum CLOSEIND
    (38) create_2darr -> . 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND
    (39) create_2darr -> . 2DARRINT id ASGN OPENIND enum2 CLOSEIND
    (36) extend1 -> . EXTEND1 id expr
    (37) extend2 -> . EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (51) id -> . ID

    error           shift and go to state 4
    OPENST          shift and go to state 6
    WHILE           shift and go to state 13
    IF              shift and go to state 15
    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    INC             shift and go to state 18
    DEC             shift and go to state 20
    OPENBR          shift and go to state 14
    SZ1             shift and go to state 21
    SZ2             shift and go to state 22
    NUM             shift and go to state 23
    UINT            shift and go to state 24
    CUINT           shift and go to state 25
    BOOL            shift and go to state 26
    CBOOL           shift and go to state 27
    1DARRBOOL       shift and go to state 28
    1DARRINT        shift and go to state 29
    2DARRBOOL       shift and go to state 30
    2DARRINT        shift and go to state 31
    EXTEND1         shift and go to state 32
    EXTEND2         shift and go to state 33
    ID              shift and go to state 34

    program                        shift and go to state 1
    stmt_list                      shift and go to state 2
    statement                      shift and go to state 3
    expr                           shift and go to state 5
    create_id                      shift and go to state 7
    assign                         shift and go to state 8
    create_1darr                   shift and go to state 9
    create_2darr                   shift and go to state 10
    extend1                        shift and go to state 11
    extend2                        shift and go to state 12
    id                             shift and go to state 19

state 1

    (0) S' -> program .



state 2

    (1) program -> stmt_list .
    (3) stmt_list -> stmt_list . statement
    (4) statement -> . error
    (5) statement -> . expr
    (6) statement -> . OPENST stmt_list CLOSEST
    (7) statement -> . create_id
    (8) statement -> . assign
    (9) statement -> . create_1darr
    (10) statement -> . create_2darr
    (11) statement -> . extend1
    (12) statement -> . extend2
    (13) statement -> . WHILE OPENBR expr CLOSEBR DO statement
    (14) statement -> . IF OPENBR expr CLOSEBR statement
    (15) statement -> . IF OPENBR expr CLOSEBR statement ELSE statement
    (16) expr -> . MINUS expr
    (17) expr -> . NOT expr
    (18) expr -> . INC id
    (19) expr -> . DEC id
    (20) expr -> . expr PLUS expr
    (21) expr -> . expr MINUS expr
    (22) expr -> . expr MUL expr
    (23) expr -> . expr DIV expr
    (24) expr -> . expr OR expr
    (25) expr -> . expr GT expr
    (26) expr -> . expr LT expr
    (27) expr -> . expr EQ expr
    (28) expr -> . OPENBR expr CLOSEBR
    (29) expr -> . id OPENBR expr CLOSEBR
    (30) expr -> . SZ1 id
    (31) expr -> . SZ2 id expr
    (32) expr -> . NUM
    (33) expr -> . id
    (44) create_id -> . UINT id ASGN expr
    (45) create_id -> . CUINT id ASGN expr
    (46) create_id -> . BOOL id ASGN expr
    (47) create_id -> . CBOOL id ASGN expr
    (48) assign -> . id ASGN expr
    (49) assign -> . id OPENBR expr CLOSEBR ASGN expr
    (50) assign -> . id OPENBR expr COMMA expr CLOSEBR ASGN expr
    (34) create_1darr -> . 1DARRBOOL id ASGN OPENIND enum CLOSEIND
    (35) create_1darr -> . 1DARRINT id ASGN OPENIND enum CLOSEIND
    (38) create_2darr -> . 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND
    (39) create_2darr -> . 2DARRINT id ASGN OPENIND enum2 CLOSEIND
    (36) extend1 -> . EXTEND1 id expr
    (37) extend2 -> . EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (51) id -> . ID

    $end            reduce using rule 1 (program -> stmt_list .)
    error           shift and go to state 4
    OPENST          shift and go to state 6
    WHILE           shift and go to state 13
    IF              shift and go to state 15
    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    INC             shift and go to state 18
    DEC             shift and go to state 20
    OPENBR          shift and go to state 14
    SZ1             shift and go to state 21
    SZ2             shift and go to state 22
    NUM             shift and go to state 23
    UINT            shift and go to state 24
    CUINT           shift and go to state 25
    BOOL            shift and go to state 26
    CBOOL           shift and go to state 27
    1DARRBOOL       shift and go to state 28
    1DARRINT        shift and go to state 29
    2DARRBOOL       shift and go to state 30
    2DARRINT        shift and go to state 31
    EXTEND1         shift and go to state 32
    EXTEND2         shift and go to state 33
    ID              shift and go to state 34

    statement                      shift and go to state 35
    expr                           shift and go to state 5
    create_id                      shift and go to state 7
    assign                         shift and go to state 8
    create_1darr                   shift and go to state 9
    create_2darr                   shift and go to state 10
    extend1                        shift and go to state 11
    extend2                        shift and go to state 12
    id                             shift and go to state 19

state 3

    (2) stmt_list -> statement .

    error           reduce using rule 2 (stmt_list -> statement .)
    OPENST          reduce using rule 2 (stmt_list -> statement .)
    WHILE           reduce using rule 2 (stmt_list -> statement .)
    IF              reduce using rule 2 (stmt_list -> statement .)
    MINUS           reduce using rule 2 (stmt_list -> statement .)
    NOT             reduce using rule 2 (stmt_list -> statement .)
    INC             reduce using rule 2 (stmt_list -> statement .)
    DEC             reduce using rule 2 (stmt_list -> statement .)
    OPENBR          reduce using rule 2 (stmt_list -> statement .)
    SZ1             reduce using rule 2 (stmt_list -> statement .)
    SZ2             reduce using rule 2 (stmt_list -> statement .)
    NUM             reduce using rule 2 (stmt_list -> statement .)
    UINT            reduce using rule 2 (stmt_list -> statement .)
    CUINT           reduce using rule 2 (stmt_list -> statement .)
    BOOL            reduce using rule 2 (stmt_list -> statement .)
    CBOOL           reduce using rule 2 (stmt_list -> statement .)
    1DARRBOOL       reduce using rule 2 (stmt_list -> statement .)
    1DARRINT        reduce using rule 2 (stmt_list -> statement .)
    2DARRBOOL       reduce using rule 2 (stmt_list -> statement .)
    2DARRINT        reduce using rule 2 (stmt_list -> statement .)
    EXTEND1         reduce using rule 2 (stmt_list -> statement .)
    EXTEND2         reduce using rule 2 (stmt_list -> statement .)
    ID              reduce using rule 2 (stmt_list -> statement .)
    $end            reduce using rule 2 (stmt_list -> statement .)
    CLOSEST         reduce using rule 2 (stmt_list -> statement .)


state 4

    (4) statement -> error .

    error           reduce using rule 4 (statement -> error .)
    OPENST          reduce using rule 4 (statement -> error .)
    WHILE           reduce using rule 4 (statement -> error .)
    IF              reduce using rule 4 (statement -> error .)
    MINUS           reduce using rule 4 (statement -> error .)
    NOT             reduce using rule 4 (statement -> error .)
    INC             reduce using rule 4 (statement -> error .)
    DEC             reduce using rule 4 (statement -> error .)
    OPENBR          reduce using rule 4 (statement -> error .)
    SZ1             reduce using rule 4 (statement -> error .)
    SZ2             reduce using rule 4 (statement -> error .)
    NUM             reduce using rule 4 (statement -> error .)
    UINT            reduce using rule 4 (statement -> error .)
    CUINT           reduce using rule 4 (statement -> error .)
    BOOL            reduce using rule 4 (statement -> error .)
    CBOOL           reduce using rule 4 (statement -> error .)
    1DARRBOOL       reduce using rule 4 (statement -> error .)
    1DARRINT        reduce using rule 4 (statement -> error .)
    2DARRBOOL       reduce using rule 4 (statement -> error .)
    2DARRINT        reduce using rule 4 (statement -> error .)
    EXTEND1         reduce using rule 4 (statement -> error .)
    EXTEND2         reduce using rule 4 (statement -> error .)
    ID              reduce using rule 4 (statement -> error .)
    $end            reduce using rule 4 (statement -> error .)
    CLOSEST         reduce using rule 4 (statement -> error .)
    ELSE            reduce using rule 4 (statement -> error .)


state 5

    (5) statement -> expr .
    (20) expr -> expr . PLUS expr
    (21) expr -> expr . MINUS expr
    (22) expr -> expr . MUL expr
    (23) expr -> expr . DIV expr
    (24) expr -> expr . OR expr
    (25) expr -> expr . GT expr
    (26) expr -> expr . LT expr
    (27) expr -> expr . EQ expr

  ! shift/reduce conflict for MINUS resolved as shift
    error           reduce using rule 5 (statement -> expr .)
    OPENST          reduce using rule 5 (statement -> expr .)
    WHILE           reduce using rule 5 (statement -> expr .)
    IF              reduce using rule 5 (statement -> expr .)
    NOT             reduce using rule 5 (statement -> expr .)
    INC             reduce using rule 5 (statement -> expr .)
    DEC             reduce using rule 5 (statement -> expr .)
    OPENBR          reduce using rule 5 (statement -> expr .)
    SZ1             reduce using rule 5 (statement -> expr .)
    SZ2             reduce using rule 5 (statement -> expr .)
    NUM             reduce using rule 5 (statement -> expr .)
    UINT            reduce using rule 5 (statement -> expr .)
    CUINT           reduce using rule 5 (statement -> expr .)
    BOOL            reduce using rule 5 (statement -> expr .)
    CBOOL           reduce using rule 5 (statement -> expr .)
    1DARRBOOL       reduce using rule 5 (statement -> expr .)
    1DARRINT        reduce using rule 5 (statement -> expr .)
    2DARRBOOL       reduce using rule 5 (statement -> expr .)
    2DARRINT        reduce using rule 5 (statement -> expr .)
    EXTEND1         reduce using rule 5 (statement -> expr .)
    EXTEND2         reduce using rule 5 (statement -> expr .)
    ID              reduce using rule 5 (statement -> expr .)
    $end            reduce using rule 5 (statement -> expr .)
    CLOSEST         reduce using rule 5 (statement -> expr .)
    ELSE            reduce using rule 5 (statement -> expr .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    MUL             shift and go to state 38
    DIV             shift and go to state 39
    OR              shift and go to state 40
    GT              shift and go to state 41
    LT              shift and go to state 42
    EQ              shift and go to state 43

  ! MINUS           [ reduce using rule 5 (statement -> expr .) ]


state 6

    (6) statement -> OPENST . stmt_list CLOSEST
    (2) stmt_list -> . statement
    (3) stmt_list -> . stmt_list statement
    (4) statement -> . error
    (5) statement -> . expr
    (6) statement -> . OPENST stmt_list CLOSEST
    (7) statement -> . create_id
    (8) statement -> . assign
    (9) statement -> . create_1darr
    (10) statement -> . create_2darr
    (11) statement -> . extend1
    (12) statement -> . extend2
    (13) statement -> . WHILE OPENBR expr CLOSEBR DO statement
    (14) statement -> . IF OPENBR expr CLOSEBR statement
    (15) statement -> . IF OPENBR expr CLOSEBR statement ELSE statement
    (16) expr -> . MINUS expr
    (17) expr -> . NOT expr
    (18) expr -> . INC id
    (19) expr -> . DEC id
    (20) expr -> . expr PLUS expr
    (21) expr -> . expr MINUS expr
    (22) expr -> . expr MUL expr
    (23) expr -> . expr DIV expr
    (24) expr -> . expr OR expr
    (25) expr -> . expr GT expr
    (26) expr -> . expr LT expr
    (27) expr -> . expr EQ expr
    (28) expr -> . OPENBR expr CLOSEBR
    (29) expr -> . id OPENBR expr CLOSEBR
    (30) expr -> . SZ1 id
    (31) expr -> . SZ2 id expr
    (32) expr -> . NUM
    (33) expr -> . id
    (44) create_id -> . UINT id ASGN expr
    (45) create_id -> . CUINT id ASGN expr
    (46) create_id -> . BOOL id ASGN expr
    (47) create_id -> . CBOOL id ASGN expr
    (48) assign -> . id ASGN expr
    (49) assign -> . id OPENBR expr CLOSEBR ASGN expr
    (50) assign -> . id OPENBR expr COMMA expr CLOSEBR ASGN expr
    (34) create_1darr -> . 1DARRBOOL id ASGN OPENIND enum CLOSEIND
    (35) create_1darr -> . 1DARRINT id ASGN OPENIND enum CLOSEIND
    (38) create_2darr -> . 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND
    (39) create_2darr -> . 2DARRINT id ASGN OPENIND enum2 CLOSEIND
    (36) extend1 -> . EXTEND1 id expr
    (37) extend2 -> . EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (51) id -> . ID

    error           shift and go to state 4
    OPENST          shift and go to state 6
    WHILE           shift and go to state 13
    IF              shift and go to state 15
    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    INC             shift and go to state 18
    DEC             shift and go to state 20
    OPENBR          shift and go to state 14
    SZ1             shift and go to state 21
    SZ2             shift and go to state 22
    NUM             shift and go to state 23
    UINT            shift and go to state 24
    CUINT           shift and go to state 25
    BOOL            shift and go to state 26
    CBOOL           shift and go to state 27
    1DARRBOOL       shift and go to state 28
    1DARRINT        shift and go to state 29
    2DARRBOOL       shift and go to state 30
    2DARRINT        shift and go to state 31
    EXTEND1         shift and go to state 32
    EXTEND2         shift and go to state 33
    ID              shift and go to state 34

    stmt_list                      shift and go to state 44
    statement                      shift and go to state 3
    expr                           shift and go to state 5
    create_id                      shift and go to state 7
    assign                         shift and go to state 8
    create_1darr                   shift and go to state 9
    create_2darr                   shift and go to state 10
    extend1                        shift and go to state 11
    extend2                        shift and go to state 12
    id                             shift and go to state 19

state 7

    (7) statement -> create_id .

    error           reduce using rule 7 (statement -> create_id .)
    OPENST          reduce using rule 7 (statement -> create_id .)
    WHILE           reduce using rule 7 (statement -> create_id .)
    IF              reduce using rule 7 (statement -> create_id .)
    MINUS           reduce using rule 7 (statement -> create_id .)
    NOT             reduce using rule 7 (statement -> create_id .)
    INC             reduce using rule 7 (statement -> create_id .)
    DEC             reduce using rule 7 (statement -> create_id .)
    OPENBR          reduce using rule 7 (statement -> create_id .)
    SZ1             reduce using rule 7 (statement -> create_id .)
    SZ2             reduce using rule 7 (statement -> create_id .)
    NUM             reduce using rule 7 (statement -> create_id .)
    UINT            reduce using rule 7 (statement -> create_id .)
    CUINT           reduce using rule 7 (statement -> create_id .)
    BOOL            reduce using rule 7 (statement -> create_id .)
    CBOOL           reduce using rule 7 (statement -> create_id .)
    1DARRBOOL       reduce using rule 7 (statement -> create_id .)
    1DARRINT        reduce using rule 7 (statement -> create_id .)
    2DARRBOOL       reduce using rule 7 (statement -> create_id .)
    2DARRINT        reduce using rule 7 (statement -> create_id .)
    EXTEND1         reduce using rule 7 (statement -> create_id .)
    EXTEND2         reduce using rule 7 (statement -> create_id .)
    ID              reduce using rule 7 (statement -> create_id .)
    $end            reduce using rule 7 (statement -> create_id .)
    CLOSEST         reduce using rule 7 (statement -> create_id .)
    ELSE            reduce using rule 7 (statement -> create_id .)


state 8

    (8) statement -> assign .

    error           reduce using rule 8 (statement -> assign .)
    OPENST          reduce using rule 8 (statement -> assign .)
    WHILE           reduce using rule 8 (statement -> assign .)
    IF              reduce using rule 8 (statement -> assign .)
    MINUS           reduce using rule 8 (statement -> assign .)
    NOT             reduce using rule 8 (statement -> assign .)
    INC             reduce using rule 8 (statement -> assign .)
    DEC             reduce using rule 8 (statement -> assign .)
    OPENBR          reduce using rule 8 (statement -> assign .)
    SZ1             reduce using rule 8 (statement -> assign .)
    SZ2             reduce using rule 8 (statement -> assign .)
    NUM             reduce using rule 8 (statement -> assign .)
    UINT            reduce using rule 8 (statement -> assign .)
    CUINT           reduce using rule 8 (statement -> assign .)
    BOOL            reduce using rule 8 (statement -> assign .)
    CBOOL           reduce using rule 8 (statement -> assign .)
    1DARRBOOL       reduce using rule 8 (statement -> assign .)
    1DARRINT        reduce using rule 8 (statement -> assign .)
    2DARRBOOL       reduce using rule 8 (statement -> assign .)
    2DARRINT        reduce using rule 8 (statement -> assign .)
    EXTEND1         reduce using rule 8 (statement -> assign .)
    EXTEND2         reduce using rule 8 (statement -> assign .)
    ID              reduce using rule 8 (statement -> assign .)
    $end            reduce using rule 8 (statement -> assign .)
    CLOSEST         reduce using rule 8 (statement -> assign .)
    ELSE            reduce using rule 8 (statement -> assign .)


state 9

    (9) statement -> create_1darr .

    error           reduce using rule 9 (statement -> create_1darr .)
    OPENST          reduce using rule 9 (statement -> create_1darr .)
    WHILE           reduce using rule 9 (statement -> create_1darr .)
    IF              reduce using rule 9 (statement -> create_1darr .)
    MINUS           reduce using rule 9 (statement -> create_1darr .)
    NOT             reduce using rule 9 (statement -> create_1darr .)
    INC             reduce using rule 9 (statement -> create_1darr .)
    DEC             reduce using rule 9 (statement -> create_1darr .)
    OPENBR          reduce using rule 9 (statement -> create_1darr .)
    SZ1             reduce using rule 9 (statement -> create_1darr .)
    SZ2             reduce using rule 9 (statement -> create_1darr .)
    NUM             reduce using rule 9 (statement -> create_1darr .)
    UINT            reduce using rule 9 (statement -> create_1darr .)
    CUINT           reduce using rule 9 (statement -> create_1darr .)
    BOOL            reduce using rule 9 (statement -> create_1darr .)
    CBOOL           reduce using rule 9 (statement -> create_1darr .)
    1DARRBOOL       reduce using rule 9 (statement -> create_1darr .)
    1DARRINT        reduce using rule 9 (statement -> create_1darr .)
    2DARRBOOL       reduce using rule 9 (statement -> create_1darr .)
    2DARRINT        reduce using rule 9 (statement -> create_1darr .)
    EXTEND1         reduce using rule 9 (statement -> create_1darr .)
    EXTEND2         reduce using rule 9 (statement -> create_1darr .)
    ID              reduce using rule 9 (statement -> create_1darr .)
    $end            reduce using rule 9 (statement -> create_1darr .)
    CLOSEST         reduce using rule 9 (statement -> create_1darr .)
    ELSE            reduce using rule 9 (statement -> create_1darr .)


state 10

    (10) statement -> create_2darr .

    error           reduce using rule 10 (statement -> create_2darr .)
    OPENST          reduce using rule 10 (statement -> create_2darr .)
    WHILE           reduce using rule 10 (statement -> create_2darr .)
    IF              reduce using rule 10 (statement -> create_2darr .)
    MINUS           reduce using rule 10 (statement -> create_2darr .)
    NOT             reduce using rule 10 (statement -> create_2darr .)
    INC             reduce using rule 10 (statement -> create_2darr .)
    DEC             reduce using rule 10 (statement -> create_2darr .)
    OPENBR          reduce using rule 10 (statement -> create_2darr .)
    SZ1             reduce using rule 10 (statement -> create_2darr .)
    SZ2             reduce using rule 10 (statement -> create_2darr .)
    NUM             reduce using rule 10 (statement -> create_2darr .)
    UINT            reduce using rule 10 (statement -> create_2darr .)
    CUINT           reduce using rule 10 (statement -> create_2darr .)
    BOOL            reduce using rule 10 (statement -> create_2darr .)
    CBOOL           reduce using rule 10 (statement -> create_2darr .)
    1DARRBOOL       reduce using rule 10 (statement -> create_2darr .)
    1DARRINT        reduce using rule 10 (statement -> create_2darr .)
    2DARRBOOL       reduce using rule 10 (statement -> create_2darr .)
    2DARRINT        reduce using rule 10 (statement -> create_2darr .)
    EXTEND1         reduce using rule 10 (statement -> create_2darr .)
    EXTEND2         reduce using rule 10 (statement -> create_2darr .)
    ID              reduce using rule 10 (statement -> create_2darr .)
    $end            reduce using rule 10 (statement -> create_2darr .)
    CLOSEST         reduce using rule 10 (statement -> create_2darr .)
    ELSE            reduce using rule 10 (statement -> create_2darr .)


state 11

    (11) statement -> extend1 .

    error           reduce using rule 11 (statement -> extend1 .)
    OPENST          reduce using rule 11 (statement -> extend1 .)
    WHILE           reduce using rule 11 (statement -> extend1 .)
    IF              reduce using rule 11 (statement -> extend1 .)
    MINUS           reduce using rule 11 (statement -> extend1 .)
    NOT             reduce using rule 11 (statement -> extend1 .)
    INC             reduce using rule 11 (statement -> extend1 .)
    DEC             reduce using rule 11 (statement -> extend1 .)
    OPENBR          reduce using rule 11 (statement -> extend1 .)
    SZ1             reduce using rule 11 (statement -> extend1 .)
    SZ2             reduce using rule 11 (statement -> extend1 .)
    NUM             reduce using rule 11 (statement -> extend1 .)
    UINT            reduce using rule 11 (statement -> extend1 .)
    CUINT           reduce using rule 11 (statement -> extend1 .)
    BOOL            reduce using rule 11 (statement -> extend1 .)
    CBOOL           reduce using rule 11 (statement -> extend1 .)
    1DARRBOOL       reduce using rule 11 (statement -> extend1 .)
    1DARRINT        reduce using rule 11 (statement -> extend1 .)
    2DARRBOOL       reduce using rule 11 (statement -> extend1 .)
    2DARRINT        reduce using rule 11 (statement -> extend1 .)
    EXTEND1         reduce using rule 11 (statement -> extend1 .)
    EXTEND2         reduce using rule 11 (statement -> extend1 .)
    ID              reduce using rule 11 (statement -> extend1 .)
    $end            reduce using rule 11 (statement -> extend1 .)
    CLOSEST         reduce using rule 11 (statement -> extend1 .)
    ELSE            reduce using rule 11 (statement -> extend1 .)


state 12

    (12) statement -> extend2 .

    error           reduce using rule 12 (statement -> extend2 .)
    OPENST          reduce using rule 12 (statement -> extend2 .)
    WHILE           reduce using rule 12 (statement -> extend2 .)
    IF              reduce using rule 12 (statement -> extend2 .)
    MINUS           reduce using rule 12 (statement -> extend2 .)
    NOT             reduce using rule 12 (statement -> extend2 .)
    INC             reduce using rule 12 (statement -> extend2 .)
    DEC             reduce using rule 12 (statement -> extend2 .)
    OPENBR          reduce using rule 12 (statement -> extend2 .)
    SZ1             reduce using rule 12 (statement -> extend2 .)
    SZ2             reduce using rule 12 (statement -> extend2 .)
    NUM             reduce using rule 12 (statement -> extend2 .)
    UINT            reduce using rule 12 (statement -> extend2 .)
    CUINT           reduce using rule 12 (statement -> extend2 .)
    BOOL            reduce using rule 12 (statement -> extend2 .)
    CBOOL           reduce using rule 12 (statement -> extend2 .)
    1DARRBOOL       reduce using rule 12 (statement -> extend2 .)
    1DARRINT        reduce using rule 12 (statement -> extend2 .)
    2DARRBOOL       reduce using rule 12 (statement -> extend2 .)
    2DARRINT        reduce using rule 12 (statement -> extend2 .)
    EXTEND1         reduce using rule 12 (statement -> extend2 .)
    EXTEND2         reduce using rule 12 (statement -> extend2 .)
    ID              reduce using rule 12 (statement -> extend2 .)
    $end            reduce using rule 12 (statement -> extend2 .)
    CLOSEST         reduce using rule 12 (statement -> extend2 .)
    ELSE            reduce using rule 12 (statement -> extend2 .)


state 13

    (13) statement -> WHILE . OPENBR expr CLOSEBR DO statement

    OPENBR          shift and go to state 45


state 14

    (28) expr -> OPENBR . expr CLOSEBR
    (16) expr -> . MINUS expr
    (17) expr -> . NOT expr
    (18) expr -> . INC id
    (19) expr -> . DEC id
    (20) expr -> . expr PLUS expr
    (21) expr -> . expr MINUS expr
    (22) expr -> . expr MUL expr
    (23) expr -> . expr DIV expr
    (24) expr -> . expr OR expr
    (25) expr -> . expr GT expr
    (26) expr -> . expr LT expr
    (27) expr -> . expr EQ expr
    (28) expr -> . OPENBR expr CLOSEBR
    (29) expr -> . id OPENBR expr CLOSEBR
    (30) expr -> . SZ1 id
    (31) expr -> . SZ2 id expr
    (32) expr -> . NUM
    (33) expr -> . id
    (51) id -> . ID

    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    INC             shift and go to state 18
    DEC             shift and go to state 20
    OPENBR          shift and go to state 14
    SZ1             shift and go to state 21
    SZ2             shift and go to state 22
    NUM             shift and go to state 23
    ID              shift and go to state 34

    expr                           shift and go to state 46
    id                             shift and go to state 47

state 15

    (14) statement -> IF . OPENBR expr CLOSEBR statement
    (15) statement -> IF . OPENBR expr CLOSEBR statement ELSE statement

    OPENBR          shift and go to state 48


state 16

    (16) expr -> MINUS . expr
    (16) expr -> . MINUS expr
    (17) expr -> . NOT expr
    (18) expr -> . INC id
    (19) expr -> . DEC id
    (20) expr -> . expr PLUS expr
    (21) expr -> . expr MINUS expr
    (22) expr -> . expr MUL expr
    (23) expr -> . expr DIV expr
    (24) expr -> . expr OR expr
    (25) expr -> . expr GT expr
    (26) expr -> . expr LT expr
    (27) expr -> . expr EQ expr
    (28) expr -> . OPENBR expr CLOSEBR
    (29) expr -> . id OPENBR expr CLOSEBR
    (30) expr -> . SZ1 id
    (31) expr -> . SZ2 id expr
    (32) expr -> . NUM
    (33) expr -> . id
    (51) id -> . ID

    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    INC             shift and go to state 18
    DEC             shift and go to state 20
    OPENBR          shift and go to state 14
    SZ1             shift and go to state 21
    SZ2             shift and go to state 22
    NUM             shift and go to state 23
    ID              shift and go to state 34

    expr                           shift and go to state 49
    id                             shift and go to state 47

state 17

    (17) expr -> NOT . expr
    (16) expr -> . MINUS expr
    (17) expr -> . NOT expr
    (18) expr -> . INC id
    (19) expr -> . DEC id
    (20) expr -> . expr PLUS expr
    (21) expr -> . expr MINUS expr
    (22) expr -> . expr MUL expr
    (23) expr -> . expr DIV expr
    (24) expr -> . expr OR expr
    (25) expr -> . expr GT expr
    (26) expr -> . expr LT expr
    (27) expr -> . expr EQ expr
    (28) expr -> . OPENBR expr CLOSEBR
    (29) expr -> . id OPENBR expr CLOSEBR
    (30) expr -> . SZ1 id
    (31) expr -> . SZ2 id expr
    (32) expr -> . NUM
    (33) expr -> . id
    (51) id -> . ID

    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    INC             shift and go to state 18
    DEC             shift and go to state 20
    OPENBR          shift and go to state 14
    SZ1             shift and go to state 21
    SZ2             shift and go to state 22
    NUM             shift and go to state 23
    ID              shift and go to state 34

    expr                           shift and go to state 50
    id                             shift and go to state 47

state 18

    (18) expr -> INC . id
    (51) id -> . ID

    ID              shift and go to state 34

    id                             shift and go to state 51

state 19

    (29) expr -> id . OPENBR expr CLOSEBR
    (33) expr -> id .
    (48) assign -> id . ASGN expr
    (49) assign -> id . OPENBR expr CLOSEBR ASGN expr
    (50) assign -> id . OPENBR expr COMMA expr CLOSEBR ASGN expr

  ! shift/reduce conflict for OPENBR resolved as shift
    OPENBR          shift and go to state 52
    PLUS            reduce using rule 33 (expr -> id .)
    MINUS           reduce using rule 33 (expr -> id .)
    MUL             reduce using rule 33 (expr -> id .)
    DIV             reduce using rule 33 (expr -> id .)
    OR              reduce using rule 33 (expr -> id .)
    GT              reduce using rule 33 (expr -> id .)
    LT              reduce using rule 33 (expr -> id .)
    EQ              reduce using rule 33 (expr -> id .)
    error           reduce using rule 33 (expr -> id .)
    OPENST          reduce using rule 33 (expr -> id .)
    WHILE           reduce using rule 33 (expr -> id .)
    IF              reduce using rule 33 (expr -> id .)
    NOT             reduce using rule 33 (expr -> id .)
    INC             reduce using rule 33 (expr -> id .)
    DEC             reduce using rule 33 (expr -> id .)
    SZ1             reduce using rule 33 (expr -> id .)
    SZ2             reduce using rule 33 (expr -> id .)
    NUM             reduce using rule 33 (expr -> id .)
    UINT            reduce using rule 33 (expr -> id .)
    CUINT           reduce using rule 33 (expr -> id .)
    BOOL            reduce using rule 33 (expr -> id .)
    CBOOL           reduce using rule 33 (expr -> id .)
    1DARRBOOL       reduce using rule 33 (expr -> id .)
    1DARRINT        reduce using rule 33 (expr -> id .)
    2DARRBOOL       reduce using rule 33 (expr -> id .)
    2DARRINT        reduce using rule 33 (expr -> id .)
    EXTEND1         reduce using rule 33 (expr -> id .)
    EXTEND2         reduce using rule 33 (expr -> id .)
    ID              reduce using rule 33 (expr -> id .)
    $end            reduce using rule 33 (expr -> id .)
    CLOSEST         reduce using rule 33 (expr -> id .)
    ELSE            reduce using rule 33 (expr -> id .)
    ASGN            shift and go to state 53

  ! OPENBR          [ reduce using rule 33 (expr -> id .) ]


state 20

    (19) expr -> DEC . id
    (51) id -> . ID

    ID              shift and go to state 34

    id                             shift and go to state 54

state 21

    (30) expr -> SZ1 . id
    (51) id -> . ID

    ID              shift and go to state 34

    id                             shift and go to state 55

state 22

    (31) expr -> SZ2 . id expr
    (51) id -> . ID

    ID              shift and go to state 34

    id                             shift and go to state 56

state 23

    (32) expr -> NUM .

    PLUS            reduce using rule 32 (expr -> NUM .)
    MINUS           reduce using rule 32 (expr -> NUM .)
    MUL             reduce using rule 32 (expr -> NUM .)
    DIV             reduce using rule 32 (expr -> NUM .)
    OR              reduce using rule 32 (expr -> NUM .)
    GT              reduce using rule 32 (expr -> NUM .)
    LT              reduce using rule 32 (expr -> NUM .)
    EQ              reduce using rule 32 (expr -> NUM .)
    error           reduce using rule 32 (expr -> NUM .)
    OPENST          reduce using rule 32 (expr -> NUM .)
    WHILE           reduce using rule 32 (expr -> NUM .)
    IF              reduce using rule 32 (expr -> NUM .)
    NOT             reduce using rule 32 (expr -> NUM .)
    INC             reduce using rule 32 (expr -> NUM .)
    DEC             reduce using rule 32 (expr -> NUM .)
    OPENBR          reduce using rule 32 (expr -> NUM .)
    SZ1             reduce using rule 32 (expr -> NUM .)
    SZ2             reduce using rule 32 (expr -> NUM .)
    NUM             reduce using rule 32 (expr -> NUM .)
    UINT            reduce using rule 32 (expr -> NUM .)
    CUINT           reduce using rule 32 (expr -> NUM .)
    BOOL            reduce using rule 32 (expr -> NUM .)
    CBOOL           reduce using rule 32 (expr -> NUM .)
    1DARRBOOL       reduce using rule 32 (expr -> NUM .)
    1DARRINT        reduce using rule 32 (expr -> NUM .)
    2DARRBOOL       reduce using rule 32 (expr -> NUM .)
    2DARRINT        reduce using rule 32 (expr -> NUM .)
    EXTEND1         reduce using rule 32 (expr -> NUM .)
    EXTEND2         reduce using rule 32 (expr -> NUM .)
    ID              reduce using rule 32 (expr -> NUM .)
    $end            reduce using rule 32 (expr -> NUM .)
    CLOSEST         reduce using rule 32 (expr -> NUM .)
    CLOSEBR         reduce using rule 32 (expr -> NUM .)
    COMMA           reduce using rule 32 (expr -> NUM .)
    ELSE            reduce using rule 32 (expr -> NUM .)
    CLOSEIND        reduce using rule 32 (expr -> NUM .)
    DCOMMA          reduce using rule 32 (expr -> NUM .)


state 24

    (44) create_id -> UINT . id ASGN expr
    (51) id -> . ID

    ID              shift and go to state 34

    id                             shift and go to state 57

state 25

    (45) create_id -> CUINT . id ASGN expr
    (51) id -> . ID

    ID              shift and go to state 34

    id                             shift and go to state 58

state 26

    (46) create_id -> BOOL . id ASGN expr
    (51) id -> . ID

    ID              shift and go to state 34

    id                             shift and go to state 59

state 27

    (47) create_id -> CBOOL . id ASGN expr
    (51) id -> . ID

    ID              shift and go to state 34

    id                             shift and go to state 60

state 28

    (34) create_1darr -> 1DARRBOOL . id ASGN OPENIND enum CLOSEIND
    (51) id -> . ID

    ID              shift and go to state 34

    id                             shift and go to state 61

state 29

    (35) create_1darr -> 1DARRINT . id ASGN OPENIND enum CLOSEIND
    (51) id -> . ID

    ID              shift and go to state 34

    id                             shift and go to state 62

state 30

    (38) create_2darr -> 2DARRBOOL . id ASGN OPENIND enum2 CLOSEIND
    (51) id -> . ID

    ID              shift and go to state 34

    id                             shift and go to state 63

state 31

    (39) create_2darr -> 2DARRINT . id ASGN OPENIND enum2 CLOSEIND
    (51) id -> . ID

    ID              shift and go to state 34

    id                             shift and go to state 64

state 32

    (36) extend1 -> EXTEND1 . id expr
    (51) id -> . ID

    ID              shift and go to state 34

    id                             shift and go to state 65

state 33

    (37) extend2 -> EXTEND2 . id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (51) id -> . ID

    ID              shift and go to state 34

    id                             shift and go to state 66

state 34

    (51) id -> ID .

    OPENBR          reduce using rule 51 (id -> ID .)
    ASGN            reduce using rule 51 (id -> ID .)
    PLUS            reduce using rule 51 (id -> ID .)
    MINUS           reduce using rule 51 (id -> ID .)
    MUL             reduce using rule 51 (id -> ID .)
    DIV             reduce using rule 51 (id -> ID .)
    OR              reduce using rule 51 (id -> ID .)
    GT              reduce using rule 51 (id -> ID .)
    LT              reduce using rule 51 (id -> ID .)
    EQ              reduce using rule 51 (id -> ID .)
    error           reduce using rule 51 (id -> ID .)
    OPENST          reduce using rule 51 (id -> ID .)
    WHILE           reduce using rule 51 (id -> ID .)
    IF              reduce using rule 51 (id -> ID .)
    NOT             reduce using rule 51 (id -> ID .)
    INC             reduce using rule 51 (id -> ID .)
    DEC             reduce using rule 51 (id -> ID .)
    SZ1             reduce using rule 51 (id -> ID .)
    SZ2             reduce using rule 51 (id -> ID .)
    NUM             reduce using rule 51 (id -> ID .)
    UINT            reduce using rule 51 (id -> ID .)
    CUINT           reduce using rule 51 (id -> ID .)
    BOOL            reduce using rule 51 (id -> ID .)
    CBOOL           reduce using rule 51 (id -> ID .)
    1DARRBOOL       reduce using rule 51 (id -> ID .)
    1DARRINT        reduce using rule 51 (id -> ID .)
    2DARRBOOL       reduce using rule 51 (id -> ID .)
    2DARRINT        reduce using rule 51 (id -> ID .)
    EXTEND1         reduce using rule 51 (id -> ID .)
    EXTEND2         reduce using rule 51 (id -> ID .)
    ID              reduce using rule 51 (id -> ID .)
    $end            reduce using rule 51 (id -> ID .)
    CLOSEST         reduce using rule 51 (id -> ID .)
    CLOSEBR         reduce using rule 51 (id -> ID .)
    COMMA           reduce using rule 51 (id -> ID .)
    ELSE            reduce using rule 51 (id -> ID .)
    CLOSEIND        reduce using rule 51 (id -> ID .)
    DCOMMA          reduce using rule 51 (id -> ID .)


state 35

    (3) stmt_list -> stmt_list statement .

    error           reduce using rule 3 (stmt_list -> stmt_list statement .)
    OPENST          reduce using rule 3 (stmt_list -> stmt_list statement .)
    WHILE           reduce using rule 3 (stmt_list -> stmt_list statement .)
    IF              reduce using rule 3 (stmt_list -> stmt_list statement .)
    MINUS           reduce using rule 3 (stmt_list -> stmt_list statement .)
    NOT             reduce using rule 3 (stmt_list -> stmt_list statement .)
    INC             reduce using rule 3 (stmt_list -> stmt_list statement .)
    DEC             reduce using rule 3 (stmt_list -> stmt_list statement .)
    OPENBR          reduce using rule 3 (stmt_list -> stmt_list statement .)
    SZ1             reduce using rule 3 (stmt_list -> stmt_list statement .)
    SZ2             reduce using rule 3 (stmt_list -> stmt_list statement .)
    NUM             reduce using rule 3 (stmt_list -> stmt_list statement .)
    UINT            reduce using rule 3 (stmt_list -> stmt_list statement .)
    CUINT           reduce using rule 3 (stmt_list -> stmt_list statement .)
    BOOL            reduce using rule 3 (stmt_list -> stmt_list statement .)
    CBOOL           reduce using rule 3 (stmt_list -> stmt_list statement .)
    1DARRBOOL       reduce using rule 3 (stmt_list -> stmt_list statement .)
    1DARRINT        reduce using rule 3 (stmt_list -> stmt_list statement .)
    2DARRBOOL       reduce using rule 3 (stmt_list -> stmt_list statement .)
    2DARRINT        reduce using rule 3 (stmt_list -> stmt_list statement .)
    EXTEND1         reduce using rule 3 (stmt_list -> stmt_list statement .)
    EXTEND2         reduce using rule 3 (stmt_list -> stmt_list statement .)
    ID              reduce using rule 3 (stmt_list -> stmt_list statement .)
    $end            reduce using rule 3 (stmt_list -> stmt_list statement .)
    CLOSEST         reduce using rule 3 (stmt_list -> stmt_list statement .)


state 36

    (20) expr -> expr PLUS . expr
    (16) expr -> . MINUS expr
    (17) expr -> . NOT expr
    (18) expr -> . INC id
    (19) expr -> . DEC id
    (20) expr -> . expr PLUS expr
    (21) expr -> . expr MINUS expr
    (22) expr -> . expr MUL expr
    (23) expr -> . expr DIV expr
    (24) expr -> . expr OR expr
    (25) expr -> . expr GT expr
    (26) expr -> . expr LT expr
    (27) expr -> . expr EQ expr
    (28) expr -> . OPENBR expr CLOSEBR
    (29) expr -> . id OPENBR expr CLOSEBR
    (30) expr -> . SZ1 id
    (31) expr -> . SZ2 id expr
    (32) expr -> . NUM
    (33) expr -> . id
    (51) id -> . ID

    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    INC             shift and go to state 18
    DEC             shift and go to state 20
    OPENBR          shift and go to state 14
    SZ1             shift and go to state 21
    SZ2             shift and go to state 22
    NUM             shift and go to state 23
    ID              shift and go to state 34

    expr                           shift and go to state 67
    id                             shift and go to state 47

state 37

    (21) expr -> expr MINUS . expr
    (16) expr -> . MINUS expr
    (17) expr -> . NOT expr
    (18) expr -> . INC id
    (19) expr -> . DEC id
    (20) expr -> . expr PLUS expr
    (21) expr -> . expr MINUS expr
    (22) expr -> . expr MUL expr
    (23) expr -> . expr DIV expr
    (24) expr -> . expr OR expr
    (25) expr -> . expr GT expr
    (26) expr -> . expr LT expr
    (27) expr -> . expr EQ expr
    (28) expr -> . OPENBR expr CLOSEBR
    (29) expr -> . id OPENBR expr CLOSEBR
    (30) expr -> . SZ1 id
    (31) expr -> . SZ2 id expr
    (32) expr -> . NUM
    (33) expr -> . id
    (51) id -> . ID

    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    INC             shift and go to state 18
    DEC             shift and go to state 20
    OPENBR          shift and go to state 14
    SZ1             shift and go to state 21
    SZ2             shift and go to state 22
    NUM             shift and go to state 23
    ID              shift and go to state 34

    expr                           shift and go to state 68
    id                             shift and go to state 47

state 38

    (22) expr -> expr MUL . expr
    (16) expr -> . MINUS expr
    (17) expr -> . NOT expr
    (18) expr -> . INC id
    (19) expr -> . DEC id
    (20) expr -> . expr PLUS expr
    (21) expr -> . expr MINUS expr
    (22) expr -> . expr MUL expr
    (23) expr -> . expr DIV expr
    (24) expr -> . expr OR expr
    (25) expr -> . expr GT expr
    (26) expr -> . expr LT expr
    (27) expr -> . expr EQ expr
    (28) expr -> . OPENBR expr CLOSEBR
    (29) expr -> . id OPENBR expr CLOSEBR
    (30) expr -> . SZ1 id
    (31) expr -> . SZ2 id expr
    (32) expr -> . NUM
    (33) expr -> . id
    (51) id -> . ID

    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    INC             shift and go to state 18
    DEC             shift and go to state 20
    OPENBR          shift and go to state 14
    SZ1             shift and go to state 21
    SZ2             shift and go to state 22
    NUM             shift and go to state 23
    ID              shift and go to state 34

    expr                           shift and go to state 69
    id                             shift and go to state 47

state 39

    (23) expr -> expr DIV . expr
    (16) expr -> . MINUS expr
    (17) expr -> . NOT expr
    (18) expr -> . INC id
    (19) expr -> . DEC id
    (20) expr -> . expr PLUS expr
    (21) expr -> . expr MINUS expr
    (22) expr -> . expr MUL expr
    (23) expr -> . expr DIV expr
    (24) expr -> . expr OR expr
    (25) expr -> . expr GT expr
    (26) expr -> . expr LT expr
    (27) expr -> . expr EQ expr
    (28) expr -> . OPENBR expr CLOSEBR
    (29) expr -> . id OPENBR expr CLOSEBR
    (30) expr -> . SZ1 id
    (31) expr -> . SZ2 id expr
    (32) expr -> . NUM
    (33) expr -> . id
    (51) id -> . ID

    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    INC             shift and go to state 18
    DEC             shift and go to state 20
    OPENBR          shift and go to state 14
    SZ1             shift and go to state 21
    SZ2             shift and go to state 22
    NUM             shift and go to state 23
    ID              shift and go to state 34

    expr                           shift and go to state 70
    id                             shift and go to state 47

state 40

    (24) expr -> expr OR . expr
    (16) expr -> . MINUS expr
    (17) expr -> . NOT expr
    (18) expr -> . INC id
    (19) expr -> . DEC id
    (20) expr -> . expr PLUS expr
    (21) expr -> . expr MINUS expr
    (22) expr -> . expr MUL expr
    (23) expr -> . expr DIV expr
    (24) expr -> . expr OR expr
    (25) expr -> . expr GT expr
    (26) expr -> . expr LT expr
    (27) expr -> . expr EQ expr
    (28) expr -> . OPENBR expr CLOSEBR
    (29) expr -> . id OPENBR expr CLOSEBR
    (30) expr -> . SZ1 id
    (31) expr -> . SZ2 id expr
    (32) expr -> . NUM
    (33) expr -> . id
    (51) id -> . ID

    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    INC             shift and go to state 18
    DEC             shift and go to state 20
    OPENBR          shift and go to state 14
    SZ1             shift and go to state 21
    SZ2             shift and go to state 22
    NUM             shift and go to state 23
    ID              shift and go to state 34

    expr                           shift and go to state 71
    id                             shift and go to state 47

state 41

    (25) expr -> expr GT . expr
    (16) expr -> . MINUS expr
    (17) expr -> . NOT expr
    (18) expr -> . INC id
    (19) expr -> . DEC id
    (20) expr -> . expr PLUS expr
    (21) expr -> . expr MINUS expr
    (22) expr -> . expr MUL expr
    (23) expr -> . expr DIV expr
    (24) expr -> . expr OR expr
    (25) expr -> . expr GT expr
    (26) expr -> . expr LT expr
    (27) expr -> . expr EQ expr
    (28) expr -> . OPENBR expr CLOSEBR
    (29) expr -> . id OPENBR expr CLOSEBR
    (30) expr -> . SZ1 id
    (31) expr -> . SZ2 id expr
    (32) expr -> . NUM
    (33) expr -> . id
    (51) id -> . ID

    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    INC             shift and go to state 18
    DEC             shift and go to state 20
    OPENBR          shift and go to state 14
    SZ1             shift and go to state 21
    SZ2             shift and go to state 22
    NUM             shift and go to state 23
    ID              shift and go to state 34

    expr                           shift and go to state 72
    id                             shift and go to state 47

state 42

    (26) expr -> expr LT . expr
    (16) expr -> . MINUS expr
    (17) expr -> . NOT expr
    (18) expr -> . INC id
    (19) expr -> . DEC id
    (20) expr -> . expr PLUS expr
    (21) expr -> . expr MINUS expr
    (22) expr -> . expr MUL expr
    (23) expr -> . expr DIV expr
    (24) expr -> . expr OR expr
    (25) expr -> . expr GT expr
    (26) expr -> . expr LT expr
    (27) expr -> . expr EQ expr
    (28) expr -> . OPENBR expr CLOSEBR
    (29) expr -> . id OPENBR expr CLOSEBR
    (30) expr -> . SZ1 id
    (31) expr -> . SZ2 id expr
    (32) expr -> . NUM
    (33) expr -> . id
    (51) id -> . ID

    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    INC             shift and go to state 18
    DEC             shift and go to state 20
    OPENBR          shift and go to state 14
    SZ1             shift and go to state 21
    SZ2             shift and go to state 22
    NUM             shift and go to state 23
    ID              shift and go to state 34

    expr                           shift and go to state 73
    id                             shift and go to state 47

state 43

    (27) expr -> expr EQ . expr
    (16) expr -> . MINUS expr
    (17) expr -> . NOT expr
    (18) expr -> . INC id
    (19) expr -> . DEC id
    (20) expr -> . expr PLUS expr
    (21) expr -> . expr MINUS expr
    (22) expr -> . expr MUL expr
    (23) expr -> . expr DIV expr
    (24) expr -> . expr OR expr
    (25) expr -> . expr GT expr
    (26) expr -> . expr LT expr
    (27) expr -> . expr EQ expr
    (28) expr -> . OPENBR expr CLOSEBR
    (29) expr -> . id OPENBR expr CLOSEBR
    (30) expr -> . SZ1 id
    (31) expr -> . SZ2 id expr
    (32) expr -> . NUM
    (33) expr -> . id
    (51) id -> . ID

    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    INC             shift and go to state 18
    DEC             shift and go to state 20
    OPENBR          shift and go to state 14
    SZ1             shift and go to state 21
    SZ2             shift and go to state 22
    NUM             shift and go to state 23
    ID              shift and go to state 34

    expr                           shift and go to state 74
    id                             shift and go to state 47

state 44

    (6) statement -> OPENST stmt_list . CLOSEST
    (3) stmt_list -> stmt_list . statement
    (4) statement -> . error
    (5) statement -> . expr
    (6) statement -> . OPENST stmt_list CLOSEST
    (7) statement -> . create_id
    (8) statement -> . assign
    (9) statement -> . create_1darr
    (10) statement -> . create_2darr
    (11) statement -> . extend1
    (12) statement -> . extend2
    (13) statement -> . WHILE OPENBR expr CLOSEBR DO statement
    (14) statement -> . IF OPENBR expr CLOSEBR statement
    (15) statement -> . IF OPENBR expr CLOSEBR statement ELSE statement
    (16) expr -> . MINUS expr
    (17) expr -> . NOT expr
    (18) expr -> . INC id
    (19) expr -> . DEC id
    (20) expr -> . expr PLUS expr
    (21) expr -> . expr MINUS expr
    (22) expr -> . expr MUL expr
    (23) expr -> . expr DIV expr
    (24) expr -> . expr OR expr
    (25) expr -> . expr GT expr
    (26) expr -> . expr LT expr
    (27) expr -> . expr EQ expr
    (28) expr -> . OPENBR expr CLOSEBR
    (29) expr -> . id OPENBR expr CLOSEBR
    (30) expr -> . SZ1 id
    (31) expr -> . SZ2 id expr
    (32) expr -> . NUM
    (33) expr -> . id
    (44) create_id -> . UINT id ASGN expr
    (45) create_id -> . CUINT id ASGN expr
    (46) create_id -> . BOOL id ASGN expr
    (47) create_id -> . CBOOL id ASGN expr
    (48) assign -> . id ASGN expr
    (49) assign -> . id OPENBR expr CLOSEBR ASGN expr
    (50) assign -> . id OPENBR expr COMMA expr CLOSEBR ASGN expr
    (34) create_1darr -> . 1DARRBOOL id ASGN OPENIND enum CLOSEIND
    (35) create_1darr -> . 1DARRINT id ASGN OPENIND enum CLOSEIND
    (38) create_2darr -> . 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND
    (39) create_2darr -> . 2DARRINT id ASGN OPENIND enum2 CLOSEIND
    (36) extend1 -> . EXTEND1 id expr
    (37) extend2 -> . EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (51) id -> . ID

    CLOSEST         shift and go to state 75
    error           shift and go to state 4
    OPENST          shift and go to state 6
    WHILE           shift and go to state 13
    IF              shift and go to state 15
    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    INC             shift and go to state 18
    DEC             shift and go to state 20
    OPENBR          shift and go to state 14
    SZ1             shift and go to state 21
    SZ2             shift and go to state 22
    NUM             shift and go to state 23
    UINT            shift and go to state 24
    CUINT           shift and go to state 25
    BOOL            shift and go to state 26
    CBOOL           shift and go to state 27
    1DARRBOOL       shift and go to state 28
    1DARRINT        shift and go to state 29
    2DARRBOOL       shift and go to state 30
    2DARRINT        shift and go to state 31
    EXTEND1         shift and go to state 32
    EXTEND2         shift and go to state 33
    ID              shift and go to state 34

    statement                      shift and go to state 35
    expr                           shift and go to state 5
    create_id                      shift and go to state 7
    assign                         shift and go to state 8
    create_1darr                   shift and go to state 9
    create_2darr                   shift and go to state 10
    extend1                        shift and go to state 11
    extend2                        shift and go to state 12
    id                             shift and go to state 19

state 45

    (13) statement -> WHILE OPENBR . expr CLOSEBR DO statement
    (16) expr -> . MINUS expr
    (17) expr -> . NOT expr
    (18) expr -> . INC id
    (19) expr -> . DEC id
    (20) expr -> . expr PLUS expr
    (21) expr -> . expr MINUS expr
    (22) expr -> . expr MUL expr
    (23) expr -> . expr DIV expr
    (24) expr -> . expr OR expr
    (25) expr -> . expr GT expr
    (26) expr -> . expr LT expr
    (27) expr -> . expr EQ expr
    (28) expr -> . OPENBR expr CLOSEBR
    (29) expr -> . id OPENBR expr CLOSEBR
    (30) expr -> . SZ1 id
    (31) expr -> . SZ2 id expr
    (32) expr -> . NUM
    (33) expr -> . id
    (51) id -> . ID

    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    INC             shift and go to state 18
    DEC             shift and go to state 20
    OPENBR          shift and go to state 14
    SZ1             shift and go to state 21
    SZ2             shift and go to state 22
    NUM             shift and go to state 23
    ID              shift and go to state 34

    expr                           shift and go to state 76
    id                             shift and go to state 47

state 46

    (28) expr -> OPENBR expr . CLOSEBR
    (20) expr -> expr . PLUS expr
    (21) expr -> expr . MINUS expr
    (22) expr -> expr . MUL expr
    (23) expr -> expr . DIV expr
    (24) expr -> expr . OR expr
    (25) expr -> expr . GT expr
    (26) expr -> expr . LT expr
    (27) expr -> expr . EQ expr

    CLOSEBR         shift and go to state 77
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    MUL             shift and go to state 38
    DIV             shift and go to state 39
    OR              shift and go to state 40
    GT              shift and go to state 41
    LT              shift and go to state 42
    EQ              shift and go to state 43


state 47

    (29) expr -> id . OPENBR expr CLOSEBR
    (33) expr -> id .

  ! shift/reduce conflict for OPENBR resolved as shift
    OPENBR          shift and go to state 78
    CLOSEBR         reduce using rule 33 (expr -> id .)
    PLUS            reduce using rule 33 (expr -> id .)
    MINUS           reduce using rule 33 (expr -> id .)
    MUL             reduce using rule 33 (expr -> id .)
    DIV             reduce using rule 33 (expr -> id .)
    OR              reduce using rule 33 (expr -> id .)
    GT              reduce using rule 33 (expr -> id .)
    LT              reduce using rule 33 (expr -> id .)
    EQ              reduce using rule 33 (expr -> id .)
    error           reduce using rule 33 (expr -> id .)
    OPENST          reduce using rule 33 (expr -> id .)
    WHILE           reduce using rule 33 (expr -> id .)
    IF              reduce using rule 33 (expr -> id .)
    NOT             reduce using rule 33 (expr -> id .)
    INC             reduce using rule 33 (expr -> id .)
    DEC             reduce using rule 33 (expr -> id .)
    SZ1             reduce using rule 33 (expr -> id .)
    SZ2             reduce using rule 33 (expr -> id .)
    NUM             reduce using rule 33 (expr -> id .)
    UINT            reduce using rule 33 (expr -> id .)
    CUINT           reduce using rule 33 (expr -> id .)
    BOOL            reduce using rule 33 (expr -> id .)
    CBOOL           reduce using rule 33 (expr -> id .)
    1DARRBOOL       reduce using rule 33 (expr -> id .)
    1DARRINT        reduce using rule 33 (expr -> id .)
    2DARRBOOL       reduce using rule 33 (expr -> id .)
    2DARRINT        reduce using rule 33 (expr -> id .)
    EXTEND1         reduce using rule 33 (expr -> id .)
    EXTEND2         reduce using rule 33 (expr -> id .)
    ID              reduce using rule 33 (expr -> id .)
    $end            reduce using rule 33 (expr -> id .)
    CLOSEST         reduce using rule 33 (expr -> id .)
    COMMA           reduce using rule 33 (expr -> id .)
    ELSE            reduce using rule 33 (expr -> id .)
    CLOSEIND        reduce using rule 33 (expr -> id .)
    DCOMMA          reduce using rule 33 (expr -> id .)

  ! OPENBR          [ reduce using rule 33 (expr -> id .) ]


state 48

    (14) statement -> IF OPENBR . expr CLOSEBR statement
    (15) statement -> IF OPENBR . expr CLOSEBR statement ELSE statement
    (16) expr -> . MINUS expr
    (17) expr -> . NOT expr
    (18) expr -> . INC id
    (19) expr -> . DEC id
    (20) expr -> . expr PLUS expr
    (21) expr -> . expr MINUS expr
    (22) expr -> . expr MUL expr
    (23) expr -> . expr DIV expr
    (24) expr -> . expr OR expr
    (25) expr -> . expr GT expr
    (26) expr -> . expr LT expr
    (27) expr -> . expr EQ expr
    (28) expr -> . OPENBR expr CLOSEBR
    (29) expr -> . id OPENBR expr CLOSEBR
    (30) expr -> . SZ1 id
    (31) expr -> . SZ2 id expr
    (32) expr -> . NUM
    (33) expr -> . id
    (51) id -> . ID

    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    INC             shift and go to state 18
    DEC             shift and go to state 20
    OPENBR          shift and go to state 14
    SZ1             shift and go to state 21
    SZ2             shift and go to state 22
    NUM             shift and go to state 23
    ID              shift and go to state 34

    expr                           shift and go to state 79
    id                             shift and go to state 47

state 49

    (16) expr -> MINUS expr .
    (20) expr -> expr . PLUS expr
    (21) expr -> expr . MINUS expr
    (22) expr -> expr . MUL expr
    (23) expr -> expr . DIV expr
    (24) expr -> expr . OR expr
    (25) expr -> expr . GT expr
    (26) expr -> expr . LT expr
    (27) expr -> expr . EQ expr

    PLUS            reduce using rule 16 (expr -> MINUS expr .)
    MINUS           reduce using rule 16 (expr -> MINUS expr .)
    MUL             reduce using rule 16 (expr -> MINUS expr .)
    DIV             reduce using rule 16 (expr -> MINUS expr .)
    OR              reduce using rule 16 (expr -> MINUS expr .)
    GT              reduce using rule 16 (expr -> MINUS expr .)
    LT              reduce using rule 16 (expr -> MINUS expr .)
    EQ              reduce using rule 16 (expr -> MINUS expr .)
    error           reduce using rule 16 (expr -> MINUS expr .)
    OPENST          reduce using rule 16 (expr -> MINUS expr .)
    WHILE           reduce using rule 16 (expr -> MINUS expr .)
    IF              reduce using rule 16 (expr -> MINUS expr .)
    NOT             reduce using rule 16 (expr -> MINUS expr .)
    INC             reduce using rule 16 (expr -> MINUS expr .)
    DEC             reduce using rule 16 (expr -> MINUS expr .)
    OPENBR          reduce using rule 16 (expr -> MINUS expr .)
    SZ1             reduce using rule 16 (expr -> MINUS expr .)
    SZ2             reduce using rule 16 (expr -> MINUS expr .)
    NUM             reduce using rule 16 (expr -> MINUS expr .)
    UINT            reduce using rule 16 (expr -> MINUS expr .)
    CUINT           reduce using rule 16 (expr -> MINUS expr .)
    BOOL            reduce using rule 16 (expr -> MINUS expr .)
    CBOOL           reduce using rule 16 (expr -> MINUS expr .)
    1DARRBOOL       reduce using rule 16 (expr -> MINUS expr .)
    1DARRINT        reduce using rule 16 (expr -> MINUS expr .)
    2DARRBOOL       reduce using rule 16 (expr -> MINUS expr .)
    2DARRINT        reduce using rule 16 (expr -> MINUS expr .)
    EXTEND1         reduce using rule 16 (expr -> MINUS expr .)
    EXTEND2         reduce using rule 16 (expr -> MINUS expr .)
    ID              reduce using rule 16 (expr -> MINUS expr .)
    $end            reduce using rule 16 (expr -> MINUS expr .)
    CLOSEST         reduce using rule 16 (expr -> MINUS expr .)
    CLOSEBR         reduce using rule 16 (expr -> MINUS expr .)
    COMMA           reduce using rule 16 (expr -> MINUS expr .)
    ELSE            reduce using rule 16 (expr -> MINUS expr .)
    CLOSEIND        reduce using rule 16 (expr -> MINUS expr .)
    DCOMMA          reduce using rule 16 (expr -> MINUS expr .)

  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]
  ! MUL             [ shift and go to state 38 ]
  ! DIV             [ shift and go to state 39 ]
  ! OR              [ shift and go to state 40 ]
  ! GT              [ shift and go to state 41 ]
  ! LT              [ shift and go to state 42 ]
  ! EQ              [ shift and go to state 43 ]


state 50

    (17) expr -> NOT expr .
    (20) expr -> expr . PLUS expr
    (21) expr -> expr . MINUS expr
    (22) expr -> expr . MUL expr
    (23) expr -> expr . DIV expr
    (24) expr -> expr . OR expr
    (25) expr -> expr . GT expr
    (26) expr -> expr . LT expr
    (27) expr -> expr . EQ expr

    PLUS            reduce using rule 17 (expr -> NOT expr .)
    MINUS           reduce using rule 17 (expr -> NOT expr .)
    MUL             reduce using rule 17 (expr -> NOT expr .)
    DIV             reduce using rule 17 (expr -> NOT expr .)
    OR              reduce using rule 17 (expr -> NOT expr .)
    GT              reduce using rule 17 (expr -> NOT expr .)
    LT              reduce using rule 17 (expr -> NOT expr .)
    EQ              reduce using rule 17 (expr -> NOT expr .)
    error           reduce using rule 17 (expr -> NOT expr .)
    OPENST          reduce using rule 17 (expr -> NOT expr .)
    WHILE           reduce using rule 17 (expr -> NOT expr .)
    IF              reduce using rule 17 (expr -> NOT expr .)
    NOT             reduce using rule 17 (expr -> NOT expr .)
    INC             reduce using rule 17 (expr -> NOT expr .)
    DEC             reduce using rule 17 (expr -> NOT expr .)
    OPENBR          reduce using rule 17 (expr -> NOT expr .)
    SZ1             reduce using rule 17 (expr -> NOT expr .)
    SZ2             reduce using rule 17 (expr -> NOT expr .)
    NUM             reduce using rule 17 (expr -> NOT expr .)
    UINT            reduce using rule 17 (expr -> NOT expr .)
    CUINT           reduce using rule 17 (expr -> NOT expr .)
    BOOL            reduce using rule 17 (expr -> NOT expr .)
    CBOOL           reduce using rule 17 (expr -> NOT expr .)
    1DARRBOOL       reduce using rule 17 (expr -> NOT expr .)
    1DARRINT        reduce using rule 17 (expr -> NOT expr .)
    2DARRBOOL       reduce using rule 17 (expr -> NOT expr .)
    2DARRINT        reduce using rule 17 (expr -> NOT expr .)
    EXTEND1         reduce using rule 17 (expr -> NOT expr .)
    EXTEND2         reduce using rule 17 (expr -> NOT expr .)
    ID              reduce using rule 17 (expr -> NOT expr .)
    $end            reduce using rule 17 (expr -> NOT expr .)
    CLOSEST         reduce using rule 17 (expr -> NOT expr .)
    CLOSEBR         reduce using rule 17 (expr -> NOT expr .)
    COMMA           reduce using rule 17 (expr -> NOT expr .)
    ELSE            reduce using rule 17 (expr -> NOT expr .)
    CLOSEIND        reduce using rule 17 (expr -> NOT expr .)
    DCOMMA          reduce using rule 17 (expr -> NOT expr .)

  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]
  ! MUL             [ shift and go to state 38 ]
  ! DIV             [ shift and go to state 39 ]
  ! OR              [ shift and go to state 40 ]
  ! GT              [ shift and go to state 41 ]
  ! LT              [ shift and go to state 42 ]
  ! EQ              [ shift and go to state 43 ]


state 51

    (18) expr -> INC id .

    PLUS            reduce using rule 18 (expr -> INC id .)
    MINUS           reduce using rule 18 (expr -> INC id .)
    MUL             reduce using rule 18 (expr -> INC id .)
    DIV             reduce using rule 18 (expr -> INC id .)
    OR              reduce using rule 18 (expr -> INC id .)
    GT              reduce using rule 18 (expr -> INC id .)
    LT              reduce using rule 18 (expr -> INC id .)
    EQ              reduce using rule 18 (expr -> INC id .)
    error           reduce using rule 18 (expr -> INC id .)
    OPENST          reduce using rule 18 (expr -> INC id .)
    WHILE           reduce using rule 18 (expr -> INC id .)
    IF              reduce using rule 18 (expr -> INC id .)
    NOT             reduce using rule 18 (expr -> INC id .)
    INC             reduce using rule 18 (expr -> INC id .)
    DEC             reduce using rule 18 (expr -> INC id .)
    OPENBR          reduce using rule 18 (expr -> INC id .)
    SZ1             reduce using rule 18 (expr -> INC id .)
    SZ2             reduce using rule 18 (expr -> INC id .)
    NUM             reduce using rule 18 (expr -> INC id .)
    UINT            reduce using rule 18 (expr -> INC id .)
    CUINT           reduce using rule 18 (expr -> INC id .)
    BOOL            reduce using rule 18 (expr -> INC id .)
    CBOOL           reduce using rule 18 (expr -> INC id .)
    1DARRBOOL       reduce using rule 18 (expr -> INC id .)
    1DARRINT        reduce using rule 18 (expr -> INC id .)
    2DARRBOOL       reduce using rule 18 (expr -> INC id .)
    2DARRINT        reduce using rule 18 (expr -> INC id .)
    EXTEND1         reduce using rule 18 (expr -> INC id .)
    EXTEND2         reduce using rule 18 (expr -> INC id .)
    ID              reduce using rule 18 (expr -> INC id .)
    $end            reduce using rule 18 (expr -> INC id .)
    CLOSEST         reduce using rule 18 (expr -> INC id .)
    CLOSEBR         reduce using rule 18 (expr -> INC id .)
    COMMA           reduce using rule 18 (expr -> INC id .)
    ELSE            reduce using rule 18 (expr -> INC id .)
    CLOSEIND        reduce using rule 18 (expr -> INC id .)
    DCOMMA          reduce using rule 18 (expr -> INC id .)


state 52

    (29) expr -> id OPENBR . expr CLOSEBR
    (49) assign -> id OPENBR . expr CLOSEBR ASGN expr
    (50) assign -> id OPENBR . expr COMMA expr CLOSEBR ASGN expr
    (16) expr -> . MINUS expr
    (17) expr -> . NOT expr
    (18) expr -> . INC id
    (19) expr -> . DEC id
    (20) expr -> . expr PLUS expr
    (21) expr -> . expr MINUS expr
    (22) expr -> . expr MUL expr
    (23) expr -> . expr DIV expr
    (24) expr -> . expr OR expr
    (25) expr -> . expr GT expr
    (26) expr -> . expr LT expr
    (27) expr -> . expr EQ expr
    (28) expr -> . OPENBR expr CLOSEBR
    (29) expr -> . id OPENBR expr CLOSEBR
    (30) expr -> . SZ1 id
    (31) expr -> . SZ2 id expr
    (32) expr -> . NUM
    (33) expr -> . id
    (51) id -> . ID

    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    INC             shift and go to state 18
    DEC             shift and go to state 20
    OPENBR          shift and go to state 14
    SZ1             shift and go to state 21
    SZ2             shift and go to state 22
    NUM             shift and go to state 23
    ID              shift and go to state 34

    id                             shift and go to state 47
    expr                           shift and go to state 80

state 53

    (48) assign -> id ASGN . expr
    (16) expr -> . MINUS expr
    (17) expr -> . NOT expr
    (18) expr -> . INC id
    (19) expr -> . DEC id
    (20) expr -> . expr PLUS expr
    (21) expr -> . expr MINUS expr
    (22) expr -> . expr MUL expr
    (23) expr -> . expr DIV expr
    (24) expr -> . expr OR expr
    (25) expr -> . expr GT expr
    (26) expr -> . expr LT expr
    (27) expr -> . expr EQ expr
    (28) expr -> . OPENBR expr CLOSEBR
    (29) expr -> . id OPENBR expr CLOSEBR
    (30) expr -> . SZ1 id
    (31) expr -> . SZ2 id expr
    (32) expr -> . NUM
    (33) expr -> . id
    (51) id -> . ID

    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    INC             shift and go to state 18
    DEC             shift and go to state 20
    OPENBR          shift and go to state 14
    SZ1             shift and go to state 21
    SZ2             shift and go to state 22
    NUM             shift and go to state 23
    ID              shift and go to state 34

    id                             shift and go to state 47
    expr                           shift and go to state 81

state 54

    (19) expr -> DEC id .

    PLUS            reduce using rule 19 (expr -> DEC id .)
    MINUS           reduce using rule 19 (expr -> DEC id .)
    MUL             reduce using rule 19 (expr -> DEC id .)
    DIV             reduce using rule 19 (expr -> DEC id .)
    OR              reduce using rule 19 (expr -> DEC id .)
    GT              reduce using rule 19 (expr -> DEC id .)
    LT              reduce using rule 19 (expr -> DEC id .)
    EQ              reduce using rule 19 (expr -> DEC id .)
    error           reduce using rule 19 (expr -> DEC id .)
    OPENST          reduce using rule 19 (expr -> DEC id .)
    WHILE           reduce using rule 19 (expr -> DEC id .)
    IF              reduce using rule 19 (expr -> DEC id .)
    NOT             reduce using rule 19 (expr -> DEC id .)
    INC             reduce using rule 19 (expr -> DEC id .)
    DEC             reduce using rule 19 (expr -> DEC id .)
    OPENBR          reduce using rule 19 (expr -> DEC id .)
    SZ1             reduce using rule 19 (expr -> DEC id .)
    SZ2             reduce using rule 19 (expr -> DEC id .)
    NUM             reduce using rule 19 (expr -> DEC id .)
    UINT            reduce using rule 19 (expr -> DEC id .)
    CUINT           reduce using rule 19 (expr -> DEC id .)
    BOOL            reduce using rule 19 (expr -> DEC id .)
    CBOOL           reduce using rule 19 (expr -> DEC id .)
    1DARRBOOL       reduce using rule 19 (expr -> DEC id .)
    1DARRINT        reduce using rule 19 (expr -> DEC id .)
    2DARRBOOL       reduce using rule 19 (expr -> DEC id .)
    2DARRINT        reduce using rule 19 (expr -> DEC id .)
    EXTEND1         reduce using rule 19 (expr -> DEC id .)
    EXTEND2         reduce using rule 19 (expr -> DEC id .)
    ID              reduce using rule 19 (expr -> DEC id .)
    $end            reduce using rule 19 (expr -> DEC id .)
    CLOSEST         reduce using rule 19 (expr -> DEC id .)
    CLOSEBR         reduce using rule 19 (expr -> DEC id .)
    COMMA           reduce using rule 19 (expr -> DEC id .)
    ELSE            reduce using rule 19 (expr -> DEC id .)
    CLOSEIND        reduce using rule 19 (expr -> DEC id .)
    DCOMMA          reduce using rule 19 (expr -> DEC id .)


state 55

    (30) expr -> SZ1 id .

    PLUS            reduce using rule 30 (expr -> SZ1 id .)
    MINUS           reduce using rule 30 (expr -> SZ1 id .)
    MUL             reduce using rule 30 (expr -> SZ1 id .)
    DIV             reduce using rule 30 (expr -> SZ1 id .)
    OR              reduce using rule 30 (expr -> SZ1 id .)
    GT              reduce using rule 30 (expr -> SZ1 id .)
    LT              reduce using rule 30 (expr -> SZ1 id .)
    EQ              reduce using rule 30 (expr -> SZ1 id .)
    error           reduce using rule 30 (expr -> SZ1 id .)
    OPENST          reduce using rule 30 (expr -> SZ1 id .)
    WHILE           reduce using rule 30 (expr -> SZ1 id .)
    IF              reduce using rule 30 (expr -> SZ1 id .)
    NOT             reduce using rule 30 (expr -> SZ1 id .)
    INC             reduce using rule 30 (expr -> SZ1 id .)
    DEC             reduce using rule 30 (expr -> SZ1 id .)
    OPENBR          reduce using rule 30 (expr -> SZ1 id .)
    SZ1             reduce using rule 30 (expr -> SZ1 id .)
    SZ2             reduce using rule 30 (expr -> SZ1 id .)
    NUM             reduce using rule 30 (expr -> SZ1 id .)
    UINT            reduce using rule 30 (expr -> SZ1 id .)
    CUINT           reduce using rule 30 (expr -> SZ1 id .)
    BOOL            reduce using rule 30 (expr -> SZ1 id .)
    CBOOL           reduce using rule 30 (expr -> SZ1 id .)
    1DARRBOOL       reduce using rule 30 (expr -> SZ1 id .)
    1DARRINT        reduce using rule 30 (expr -> SZ1 id .)
    2DARRBOOL       reduce using rule 30 (expr -> SZ1 id .)
    2DARRINT        reduce using rule 30 (expr -> SZ1 id .)
    EXTEND1         reduce using rule 30 (expr -> SZ1 id .)
    EXTEND2         reduce using rule 30 (expr -> SZ1 id .)
    ID              reduce using rule 30 (expr -> SZ1 id .)
    $end            reduce using rule 30 (expr -> SZ1 id .)
    CLOSEST         reduce using rule 30 (expr -> SZ1 id .)
    CLOSEBR         reduce using rule 30 (expr -> SZ1 id .)
    COMMA           reduce using rule 30 (expr -> SZ1 id .)
    ELSE            reduce using rule 30 (expr -> SZ1 id .)
    CLOSEIND        reduce using rule 30 (expr -> SZ1 id .)
    DCOMMA          reduce using rule 30 (expr -> SZ1 id .)


state 56

    (31) expr -> SZ2 id . expr
    (16) expr -> . MINUS expr
    (17) expr -> . NOT expr
    (18) expr -> . INC id
    (19) expr -> . DEC id
    (20) expr -> . expr PLUS expr
    (21) expr -> . expr MINUS expr
    (22) expr -> . expr MUL expr
    (23) expr -> . expr DIV expr
    (24) expr -> . expr OR expr
    (25) expr -> . expr GT expr
    (26) expr -> . expr LT expr
    (27) expr -> . expr EQ expr
    (28) expr -> . OPENBR expr CLOSEBR
    (29) expr -> . id OPENBR expr CLOSEBR
    (30) expr -> . SZ1 id
    (31) expr -> . SZ2 id expr
    (32) expr -> . NUM
    (33) expr -> . id
    (51) id -> . ID

    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    INC             shift and go to state 18
    DEC             shift and go to state 20
    OPENBR          shift and go to state 14
    SZ1             shift and go to state 21
    SZ2             shift and go to state 22
    NUM             shift and go to state 23
    ID              shift and go to state 34

    id                             shift and go to state 47
    expr                           shift and go to state 82

state 57

    (44) create_id -> UINT id . ASGN expr

    ASGN            shift and go to state 83


state 58

    (45) create_id -> CUINT id . ASGN expr

    ASGN            shift and go to state 84


state 59

    (46) create_id -> BOOL id . ASGN expr

    ASGN            shift and go to state 85


state 60

    (47) create_id -> CBOOL id . ASGN expr

    ASGN            shift and go to state 86


state 61

    (34) create_1darr -> 1DARRBOOL id . ASGN OPENIND enum CLOSEIND

    ASGN            shift and go to state 87


state 62

    (35) create_1darr -> 1DARRINT id . ASGN OPENIND enum CLOSEIND

    ASGN            shift and go to state 88


state 63

    (38) create_2darr -> 2DARRBOOL id . ASGN OPENIND enum2 CLOSEIND

    ASGN            shift and go to state 89


state 64

    (39) create_2darr -> 2DARRINT id . ASGN OPENIND enum2 CLOSEIND

    ASGN            shift and go to state 90


state 65

    (36) extend1 -> EXTEND1 id . expr
    (16) expr -> . MINUS expr
    (17) expr -> . NOT expr
    (18) expr -> . INC id
    (19) expr -> . DEC id
    (20) expr -> . expr PLUS expr
    (21) expr -> . expr MINUS expr
    (22) expr -> . expr MUL expr
    (23) expr -> . expr DIV expr
    (24) expr -> . expr OR expr
    (25) expr -> . expr GT expr
    (26) expr -> . expr LT expr
    (27) expr -> . expr EQ expr
    (28) expr -> . OPENBR expr CLOSEBR
    (29) expr -> . id OPENBR expr CLOSEBR
    (30) expr -> . SZ1 id
    (31) expr -> . SZ2 id expr
    (32) expr -> . NUM
    (33) expr -> . id
    (51) id -> . ID

    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    INC             shift and go to state 18
    DEC             shift and go to state 20
    OPENBR          shift and go to state 14
    SZ1             shift and go to state 21
    SZ2             shift and go to state 22
    NUM             shift and go to state 23
    ID              shift and go to state 34

    id                             shift and go to state 47
    expr                           shift and go to state 91

state 66

    (37) extend2 -> EXTEND2 id . OPENBR expr CLOSEBR OPENBR expr CLOSEBR

    OPENBR          shift and go to state 92


state 67

    (20) expr -> expr PLUS expr .
    (20) expr -> expr . PLUS expr
    (21) expr -> expr . MINUS expr
    (22) expr -> expr . MUL expr
    (23) expr -> expr . DIV expr
    (24) expr -> expr . OR expr
    (25) expr -> expr . GT expr
    (26) expr -> expr . LT expr
    (27) expr -> expr . EQ expr

    PLUS            reduce using rule 20 (expr -> expr PLUS expr .)
    MINUS           reduce using rule 20 (expr -> expr PLUS expr .)
    OR              reduce using rule 20 (expr -> expr PLUS expr .)
    GT              reduce using rule 20 (expr -> expr PLUS expr .)
    LT              reduce using rule 20 (expr -> expr PLUS expr .)
    EQ              reduce using rule 20 (expr -> expr PLUS expr .)
    error           reduce using rule 20 (expr -> expr PLUS expr .)
    OPENST          reduce using rule 20 (expr -> expr PLUS expr .)
    WHILE           reduce using rule 20 (expr -> expr PLUS expr .)
    IF              reduce using rule 20 (expr -> expr PLUS expr .)
    NOT             reduce using rule 20 (expr -> expr PLUS expr .)
    INC             reduce using rule 20 (expr -> expr PLUS expr .)
    DEC             reduce using rule 20 (expr -> expr PLUS expr .)
    OPENBR          reduce using rule 20 (expr -> expr PLUS expr .)
    SZ1             reduce using rule 20 (expr -> expr PLUS expr .)
    SZ2             reduce using rule 20 (expr -> expr PLUS expr .)
    NUM             reduce using rule 20 (expr -> expr PLUS expr .)
    UINT            reduce using rule 20 (expr -> expr PLUS expr .)
    CUINT           reduce using rule 20 (expr -> expr PLUS expr .)
    BOOL            reduce using rule 20 (expr -> expr PLUS expr .)
    CBOOL           reduce using rule 20 (expr -> expr PLUS expr .)
    1DARRBOOL       reduce using rule 20 (expr -> expr PLUS expr .)
    1DARRINT        reduce using rule 20 (expr -> expr PLUS expr .)
    2DARRBOOL       reduce using rule 20 (expr -> expr PLUS expr .)
    2DARRINT        reduce using rule 20 (expr -> expr PLUS expr .)
    EXTEND1         reduce using rule 20 (expr -> expr PLUS expr .)
    EXTEND2         reduce using rule 20 (expr -> expr PLUS expr .)
    ID              reduce using rule 20 (expr -> expr PLUS expr .)
    $end            reduce using rule 20 (expr -> expr PLUS expr .)
    CLOSEST         reduce using rule 20 (expr -> expr PLUS expr .)
    CLOSEBR         reduce using rule 20 (expr -> expr PLUS expr .)
    COMMA           reduce using rule 20 (expr -> expr PLUS expr .)
    ELSE            reduce using rule 20 (expr -> expr PLUS expr .)
    CLOSEIND        reduce using rule 20 (expr -> expr PLUS expr .)
    DCOMMA          reduce using rule 20 (expr -> expr PLUS expr .)
    MUL             shift and go to state 38
    DIV             shift and go to state 39

  ! MUL             [ reduce using rule 20 (expr -> expr PLUS expr .) ]
  ! DIV             [ reduce using rule 20 (expr -> expr PLUS expr .) ]
  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]
  ! OR              [ shift and go to state 40 ]
  ! GT              [ shift and go to state 41 ]
  ! LT              [ shift and go to state 42 ]
  ! EQ              [ shift and go to state 43 ]


state 68

    (21) expr -> expr MINUS expr .
    (20) expr -> expr . PLUS expr
    (21) expr -> expr . MINUS expr
    (22) expr -> expr . MUL expr
    (23) expr -> expr . DIV expr
    (24) expr -> expr . OR expr
    (25) expr -> expr . GT expr
    (26) expr -> expr . LT expr
    (27) expr -> expr . EQ expr

    PLUS            reduce using rule 21 (expr -> expr MINUS expr .)
    MINUS           reduce using rule 21 (expr -> expr MINUS expr .)
    OR              reduce using rule 21 (expr -> expr MINUS expr .)
    GT              reduce using rule 21 (expr -> expr MINUS expr .)
    LT              reduce using rule 21 (expr -> expr MINUS expr .)
    EQ              reduce using rule 21 (expr -> expr MINUS expr .)
    error           reduce using rule 21 (expr -> expr MINUS expr .)
    OPENST          reduce using rule 21 (expr -> expr MINUS expr .)
    WHILE           reduce using rule 21 (expr -> expr MINUS expr .)
    IF              reduce using rule 21 (expr -> expr MINUS expr .)
    NOT             reduce using rule 21 (expr -> expr MINUS expr .)
    INC             reduce using rule 21 (expr -> expr MINUS expr .)
    DEC             reduce using rule 21 (expr -> expr MINUS expr .)
    OPENBR          reduce using rule 21 (expr -> expr MINUS expr .)
    SZ1             reduce using rule 21 (expr -> expr MINUS expr .)
    SZ2             reduce using rule 21 (expr -> expr MINUS expr .)
    NUM             reduce using rule 21 (expr -> expr MINUS expr .)
    UINT            reduce using rule 21 (expr -> expr MINUS expr .)
    CUINT           reduce using rule 21 (expr -> expr MINUS expr .)
    BOOL            reduce using rule 21 (expr -> expr MINUS expr .)
    CBOOL           reduce using rule 21 (expr -> expr MINUS expr .)
    1DARRBOOL       reduce using rule 21 (expr -> expr MINUS expr .)
    1DARRINT        reduce using rule 21 (expr -> expr MINUS expr .)
    2DARRBOOL       reduce using rule 21 (expr -> expr MINUS expr .)
    2DARRINT        reduce using rule 21 (expr -> expr MINUS expr .)
    EXTEND1         reduce using rule 21 (expr -> expr MINUS expr .)
    EXTEND2         reduce using rule 21 (expr -> expr MINUS expr .)
    ID              reduce using rule 21 (expr -> expr MINUS expr .)
    $end            reduce using rule 21 (expr -> expr MINUS expr .)
    CLOSEST         reduce using rule 21 (expr -> expr MINUS expr .)
    CLOSEBR         reduce using rule 21 (expr -> expr MINUS expr .)
    COMMA           reduce using rule 21 (expr -> expr MINUS expr .)
    ELSE            reduce using rule 21 (expr -> expr MINUS expr .)
    CLOSEIND        reduce using rule 21 (expr -> expr MINUS expr .)
    DCOMMA          reduce using rule 21 (expr -> expr MINUS expr .)
    MUL             shift and go to state 38
    DIV             shift and go to state 39

  ! MUL             [ reduce using rule 21 (expr -> expr MINUS expr .) ]
  ! DIV             [ reduce using rule 21 (expr -> expr MINUS expr .) ]
  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]
  ! OR              [ shift and go to state 40 ]
  ! GT              [ shift and go to state 41 ]
  ! LT              [ shift and go to state 42 ]
  ! EQ              [ shift and go to state 43 ]


state 69

    (22) expr -> expr MUL expr .
    (20) expr -> expr . PLUS expr
    (21) expr -> expr . MINUS expr
    (22) expr -> expr . MUL expr
    (23) expr -> expr . DIV expr
    (24) expr -> expr . OR expr
    (25) expr -> expr . GT expr
    (26) expr -> expr . LT expr
    (27) expr -> expr . EQ expr

    PLUS            reduce using rule 22 (expr -> expr MUL expr .)
    MINUS           reduce using rule 22 (expr -> expr MUL expr .)
    MUL             reduce using rule 22 (expr -> expr MUL expr .)
    DIV             reduce using rule 22 (expr -> expr MUL expr .)
    OR              reduce using rule 22 (expr -> expr MUL expr .)
    GT              reduce using rule 22 (expr -> expr MUL expr .)
    LT              reduce using rule 22 (expr -> expr MUL expr .)
    EQ              reduce using rule 22 (expr -> expr MUL expr .)
    error           reduce using rule 22 (expr -> expr MUL expr .)
    OPENST          reduce using rule 22 (expr -> expr MUL expr .)
    WHILE           reduce using rule 22 (expr -> expr MUL expr .)
    IF              reduce using rule 22 (expr -> expr MUL expr .)
    NOT             reduce using rule 22 (expr -> expr MUL expr .)
    INC             reduce using rule 22 (expr -> expr MUL expr .)
    DEC             reduce using rule 22 (expr -> expr MUL expr .)
    OPENBR          reduce using rule 22 (expr -> expr MUL expr .)
    SZ1             reduce using rule 22 (expr -> expr MUL expr .)
    SZ2             reduce using rule 22 (expr -> expr MUL expr .)
    NUM             reduce using rule 22 (expr -> expr MUL expr .)
    UINT            reduce using rule 22 (expr -> expr MUL expr .)
    CUINT           reduce using rule 22 (expr -> expr MUL expr .)
    BOOL            reduce using rule 22 (expr -> expr MUL expr .)
    CBOOL           reduce using rule 22 (expr -> expr MUL expr .)
    1DARRBOOL       reduce using rule 22 (expr -> expr MUL expr .)
    1DARRINT        reduce using rule 22 (expr -> expr MUL expr .)
    2DARRBOOL       reduce using rule 22 (expr -> expr MUL expr .)
    2DARRINT        reduce using rule 22 (expr -> expr MUL expr .)
    EXTEND1         reduce using rule 22 (expr -> expr MUL expr .)
    EXTEND2         reduce using rule 22 (expr -> expr MUL expr .)
    ID              reduce using rule 22 (expr -> expr MUL expr .)
    $end            reduce using rule 22 (expr -> expr MUL expr .)
    CLOSEST         reduce using rule 22 (expr -> expr MUL expr .)
    CLOSEBR         reduce using rule 22 (expr -> expr MUL expr .)
    COMMA           reduce using rule 22 (expr -> expr MUL expr .)
    ELSE            reduce using rule 22 (expr -> expr MUL expr .)
    CLOSEIND        reduce using rule 22 (expr -> expr MUL expr .)
    DCOMMA          reduce using rule 22 (expr -> expr MUL expr .)

  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]
  ! MUL             [ shift and go to state 38 ]
  ! DIV             [ shift and go to state 39 ]
  ! OR              [ shift and go to state 40 ]
  ! GT              [ shift and go to state 41 ]
  ! LT              [ shift and go to state 42 ]
  ! EQ              [ shift and go to state 43 ]


state 70

    (23) expr -> expr DIV expr .
    (20) expr -> expr . PLUS expr
    (21) expr -> expr . MINUS expr
    (22) expr -> expr . MUL expr
    (23) expr -> expr . DIV expr
    (24) expr -> expr . OR expr
    (25) expr -> expr . GT expr
    (26) expr -> expr . LT expr
    (27) expr -> expr . EQ expr

    PLUS            reduce using rule 23 (expr -> expr DIV expr .)
    MINUS           reduce using rule 23 (expr -> expr DIV expr .)
    MUL             reduce using rule 23 (expr -> expr DIV expr .)
    DIV             reduce using rule 23 (expr -> expr DIV expr .)
    OR              reduce using rule 23 (expr -> expr DIV expr .)
    GT              reduce using rule 23 (expr -> expr DIV expr .)
    LT              reduce using rule 23 (expr -> expr DIV expr .)
    EQ              reduce using rule 23 (expr -> expr DIV expr .)
    error           reduce using rule 23 (expr -> expr DIV expr .)
    OPENST          reduce using rule 23 (expr -> expr DIV expr .)
    WHILE           reduce using rule 23 (expr -> expr DIV expr .)
    IF              reduce using rule 23 (expr -> expr DIV expr .)
    NOT             reduce using rule 23 (expr -> expr DIV expr .)
    INC             reduce using rule 23 (expr -> expr DIV expr .)
    DEC             reduce using rule 23 (expr -> expr DIV expr .)
    OPENBR          reduce using rule 23 (expr -> expr DIV expr .)
    SZ1             reduce using rule 23 (expr -> expr DIV expr .)
    SZ2             reduce using rule 23 (expr -> expr DIV expr .)
    NUM             reduce using rule 23 (expr -> expr DIV expr .)
    UINT            reduce using rule 23 (expr -> expr DIV expr .)
    CUINT           reduce using rule 23 (expr -> expr DIV expr .)
    BOOL            reduce using rule 23 (expr -> expr DIV expr .)
    CBOOL           reduce using rule 23 (expr -> expr DIV expr .)
    1DARRBOOL       reduce using rule 23 (expr -> expr DIV expr .)
    1DARRINT        reduce using rule 23 (expr -> expr DIV expr .)
    2DARRBOOL       reduce using rule 23 (expr -> expr DIV expr .)
    2DARRINT        reduce using rule 23 (expr -> expr DIV expr .)
    EXTEND1         reduce using rule 23 (expr -> expr DIV expr .)
    EXTEND2         reduce using rule 23 (expr -> expr DIV expr .)
    ID              reduce using rule 23 (expr -> expr DIV expr .)
    $end            reduce using rule 23 (expr -> expr DIV expr .)
    CLOSEST         reduce using rule 23 (expr -> expr DIV expr .)
    CLOSEBR         reduce using rule 23 (expr -> expr DIV expr .)
    COMMA           reduce using rule 23 (expr -> expr DIV expr .)
    ELSE            reduce using rule 23 (expr -> expr DIV expr .)
    CLOSEIND        reduce using rule 23 (expr -> expr DIV expr .)
    DCOMMA          reduce using rule 23 (expr -> expr DIV expr .)

  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]
  ! MUL             [ shift and go to state 38 ]
  ! DIV             [ shift and go to state 39 ]
  ! OR              [ shift and go to state 40 ]
  ! GT              [ shift and go to state 41 ]
  ! LT              [ shift and go to state 42 ]
  ! EQ              [ shift and go to state 43 ]


state 71

    (24) expr -> expr OR expr .
    (20) expr -> expr . PLUS expr
    (21) expr -> expr . MINUS expr
    (22) expr -> expr . MUL expr
    (23) expr -> expr . DIV expr
    (24) expr -> expr . OR expr
    (25) expr -> expr . GT expr
    (26) expr -> expr . LT expr
    (27) expr -> expr . EQ expr

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
    error           reduce using rule 24 (expr -> expr OR expr .)
    OPENST          reduce using rule 24 (expr -> expr OR expr .)
    WHILE           reduce using rule 24 (expr -> expr OR expr .)
    IF              reduce using rule 24 (expr -> expr OR expr .)
    NOT             reduce using rule 24 (expr -> expr OR expr .)
    INC             reduce using rule 24 (expr -> expr OR expr .)
    DEC             reduce using rule 24 (expr -> expr OR expr .)
    OPENBR          reduce using rule 24 (expr -> expr OR expr .)
    SZ1             reduce using rule 24 (expr -> expr OR expr .)
    SZ2             reduce using rule 24 (expr -> expr OR expr .)
    NUM             reduce using rule 24 (expr -> expr OR expr .)
    UINT            reduce using rule 24 (expr -> expr OR expr .)
    CUINT           reduce using rule 24 (expr -> expr OR expr .)
    BOOL            reduce using rule 24 (expr -> expr OR expr .)
    CBOOL           reduce using rule 24 (expr -> expr OR expr .)
    1DARRBOOL       reduce using rule 24 (expr -> expr OR expr .)
    1DARRINT        reduce using rule 24 (expr -> expr OR expr .)
    2DARRBOOL       reduce using rule 24 (expr -> expr OR expr .)
    2DARRINT        reduce using rule 24 (expr -> expr OR expr .)
    EXTEND1         reduce using rule 24 (expr -> expr OR expr .)
    EXTEND2         reduce using rule 24 (expr -> expr OR expr .)
    ID              reduce using rule 24 (expr -> expr OR expr .)
    $end            reduce using rule 24 (expr -> expr OR expr .)
    CLOSEST         reduce using rule 24 (expr -> expr OR expr .)
    CLOSEBR         reduce using rule 24 (expr -> expr OR expr .)
    COMMA           reduce using rule 24 (expr -> expr OR expr .)
    ELSE            reduce using rule 24 (expr -> expr OR expr .)
    CLOSEIND        reduce using rule 24 (expr -> expr OR expr .)
    DCOMMA          reduce using rule 24 (expr -> expr OR expr .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    MUL             shift and go to state 38
    DIV             shift and go to state 39
    OR              shift and go to state 40
    GT              shift and go to state 41
    LT              shift and go to state 42
    EQ              shift and go to state 43

  ! PLUS            [ reduce using rule 24 (expr -> expr OR expr .) ]
  ! MINUS           [ reduce using rule 24 (expr -> expr OR expr .) ]
  ! MUL             [ reduce using rule 24 (expr -> expr OR expr .) ]
  ! DIV             [ reduce using rule 24 (expr -> expr OR expr .) ]
  ! OR              [ reduce using rule 24 (expr -> expr OR expr .) ]
  ! GT              [ reduce using rule 24 (expr -> expr OR expr .) ]
  ! LT              [ reduce using rule 24 (expr -> expr OR expr .) ]
  ! EQ              [ reduce using rule 24 (expr -> expr OR expr .) ]


state 72

    (25) expr -> expr GT expr .
    (20) expr -> expr . PLUS expr
    (21) expr -> expr . MINUS expr
    (22) expr -> expr . MUL expr
    (23) expr -> expr . DIV expr
    (24) expr -> expr . OR expr
    (25) expr -> expr . GT expr
    (26) expr -> expr . LT expr
    (27) expr -> expr . EQ expr

    OR              reduce using rule 25 (expr -> expr GT expr .)
    GT              reduce using rule 25 (expr -> expr GT expr .)
    LT              reduce using rule 25 (expr -> expr GT expr .)
    EQ              reduce using rule 25 (expr -> expr GT expr .)
    error           reduce using rule 25 (expr -> expr GT expr .)
    OPENST          reduce using rule 25 (expr -> expr GT expr .)
    WHILE           reduce using rule 25 (expr -> expr GT expr .)
    IF              reduce using rule 25 (expr -> expr GT expr .)
    NOT             reduce using rule 25 (expr -> expr GT expr .)
    INC             reduce using rule 25 (expr -> expr GT expr .)
    DEC             reduce using rule 25 (expr -> expr GT expr .)
    OPENBR          reduce using rule 25 (expr -> expr GT expr .)
    SZ1             reduce using rule 25 (expr -> expr GT expr .)
    SZ2             reduce using rule 25 (expr -> expr GT expr .)
    NUM             reduce using rule 25 (expr -> expr GT expr .)
    UINT            reduce using rule 25 (expr -> expr GT expr .)
    CUINT           reduce using rule 25 (expr -> expr GT expr .)
    BOOL            reduce using rule 25 (expr -> expr GT expr .)
    CBOOL           reduce using rule 25 (expr -> expr GT expr .)
    1DARRBOOL       reduce using rule 25 (expr -> expr GT expr .)
    1DARRINT        reduce using rule 25 (expr -> expr GT expr .)
    2DARRBOOL       reduce using rule 25 (expr -> expr GT expr .)
    2DARRINT        reduce using rule 25 (expr -> expr GT expr .)
    EXTEND1         reduce using rule 25 (expr -> expr GT expr .)
    EXTEND2         reduce using rule 25 (expr -> expr GT expr .)
    ID              reduce using rule 25 (expr -> expr GT expr .)
    $end            reduce using rule 25 (expr -> expr GT expr .)
    CLOSEST         reduce using rule 25 (expr -> expr GT expr .)
    CLOSEBR         reduce using rule 25 (expr -> expr GT expr .)
    COMMA           reduce using rule 25 (expr -> expr GT expr .)
    ELSE            reduce using rule 25 (expr -> expr GT expr .)
    CLOSEIND        reduce using rule 25 (expr -> expr GT expr .)
    DCOMMA          reduce using rule 25 (expr -> expr GT expr .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    MUL             shift and go to state 38
    DIV             shift and go to state 39

  ! PLUS            [ reduce using rule 25 (expr -> expr GT expr .) ]
  ! MINUS           [ reduce using rule 25 (expr -> expr GT expr .) ]
  ! MUL             [ reduce using rule 25 (expr -> expr GT expr .) ]
  ! DIV             [ reduce using rule 25 (expr -> expr GT expr .) ]
  ! OR              [ shift and go to state 40 ]
  ! GT              [ shift and go to state 41 ]
  ! LT              [ shift and go to state 42 ]
  ! EQ              [ shift and go to state 43 ]


state 73

    (26) expr -> expr LT expr .
    (20) expr -> expr . PLUS expr
    (21) expr -> expr . MINUS expr
    (22) expr -> expr . MUL expr
    (23) expr -> expr . DIV expr
    (24) expr -> expr . OR expr
    (25) expr -> expr . GT expr
    (26) expr -> expr . LT expr
    (27) expr -> expr . EQ expr

    OR              reduce using rule 26 (expr -> expr LT expr .)
    GT              reduce using rule 26 (expr -> expr LT expr .)
    LT              reduce using rule 26 (expr -> expr LT expr .)
    EQ              reduce using rule 26 (expr -> expr LT expr .)
    error           reduce using rule 26 (expr -> expr LT expr .)
    OPENST          reduce using rule 26 (expr -> expr LT expr .)
    WHILE           reduce using rule 26 (expr -> expr LT expr .)
    IF              reduce using rule 26 (expr -> expr LT expr .)
    NOT             reduce using rule 26 (expr -> expr LT expr .)
    INC             reduce using rule 26 (expr -> expr LT expr .)
    DEC             reduce using rule 26 (expr -> expr LT expr .)
    OPENBR          reduce using rule 26 (expr -> expr LT expr .)
    SZ1             reduce using rule 26 (expr -> expr LT expr .)
    SZ2             reduce using rule 26 (expr -> expr LT expr .)
    NUM             reduce using rule 26 (expr -> expr LT expr .)
    UINT            reduce using rule 26 (expr -> expr LT expr .)
    CUINT           reduce using rule 26 (expr -> expr LT expr .)
    BOOL            reduce using rule 26 (expr -> expr LT expr .)
    CBOOL           reduce using rule 26 (expr -> expr LT expr .)
    1DARRBOOL       reduce using rule 26 (expr -> expr LT expr .)
    1DARRINT        reduce using rule 26 (expr -> expr LT expr .)
    2DARRBOOL       reduce using rule 26 (expr -> expr LT expr .)
    2DARRINT        reduce using rule 26 (expr -> expr LT expr .)
    EXTEND1         reduce using rule 26 (expr -> expr LT expr .)
    EXTEND2         reduce using rule 26 (expr -> expr LT expr .)
    ID              reduce using rule 26 (expr -> expr LT expr .)
    $end            reduce using rule 26 (expr -> expr LT expr .)
    CLOSEST         reduce using rule 26 (expr -> expr LT expr .)
    CLOSEBR         reduce using rule 26 (expr -> expr LT expr .)
    COMMA           reduce using rule 26 (expr -> expr LT expr .)
    ELSE            reduce using rule 26 (expr -> expr LT expr .)
    CLOSEIND        reduce using rule 26 (expr -> expr LT expr .)
    DCOMMA          reduce using rule 26 (expr -> expr LT expr .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    MUL             shift and go to state 38
    DIV             shift and go to state 39

  ! PLUS            [ reduce using rule 26 (expr -> expr LT expr .) ]
  ! MINUS           [ reduce using rule 26 (expr -> expr LT expr .) ]
  ! MUL             [ reduce using rule 26 (expr -> expr LT expr .) ]
  ! DIV             [ reduce using rule 26 (expr -> expr LT expr .) ]
  ! OR              [ shift and go to state 40 ]
  ! GT              [ shift and go to state 41 ]
  ! LT              [ shift and go to state 42 ]
  ! EQ              [ shift and go to state 43 ]


state 74

    (27) expr -> expr EQ expr .
    (20) expr -> expr . PLUS expr
    (21) expr -> expr . MINUS expr
    (22) expr -> expr . MUL expr
    (23) expr -> expr . DIV expr
    (24) expr -> expr . OR expr
    (25) expr -> expr . GT expr
    (26) expr -> expr . LT expr
    (27) expr -> expr . EQ expr

    OR              reduce using rule 27 (expr -> expr EQ expr .)
    GT              reduce using rule 27 (expr -> expr EQ expr .)
    LT              reduce using rule 27 (expr -> expr EQ expr .)
    EQ              reduce using rule 27 (expr -> expr EQ expr .)
    error           reduce using rule 27 (expr -> expr EQ expr .)
    OPENST          reduce using rule 27 (expr -> expr EQ expr .)
    WHILE           reduce using rule 27 (expr -> expr EQ expr .)
    IF              reduce using rule 27 (expr -> expr EQ expr .)
    NOT             reduce using rule 27 (expr -> expr EQ expr .)
    INC             reduce using rule 27 (expr -> expr EQ expr .)
    DEC             reduce using rule 27 (expr -> expr EQ expr .)
    OPENBR          reduce using rule 27 (expr -> expr EQ expr .)
    SZ1             reduce using rule 27 (expr -> expr EQ expr .)
    SZ2             reduce using rule 27 (expr -> expr EQ expr .)
    NUM             reduce using rule 27 (expr -> expr EQ expr .)
    UINT            reduce using rule 27 (expr -> expr EQ expr .)
    CUINT           reduce using rule 27 (expr -> expr EQ expr .)
    BOOL            reduce using rule 27 (expr -> expr EQ expr .)
    CBOOL           reduce using rule 27 (expr -> expr EQ expr .)
    1DARRBOOL       reduce using rule 27 (expr -> expr EQ expr .)
    1DARRINT        reduce using rule 27 (expr -> expr EQ expr .)
    2DARRBOOL       reduce using rule 27 (expr -> expr EQ expr .)
    2DARRINT        reduce using rule 27 (expr -> expr EQ expr .)
    EXTEND1         reduce using rule 27 (expr -> expr EQ expr .)
    EXTEND2         reduce using rule 27 (expr -> expr EQ expr .)
    ID              reduce using rule 27 (expr -> expr EQ expr .)
    $end            reduce using rule 27 (expr -> expr EQ expr .)
    CLOSEST         reduce using rule 27 (expr -> expr EQ expr .)
    CLOSEBR         reduce using rule 27 (expr -> expr EQ expr .)
    COMMA           reduce using rule 27 (expr -> expr EQ expr .)
    ELSE            reduce using rule 27 (expr -> expr EQ expr .)
    CLOSEIND        reduce using rule 27 (expr -> expr EQ expr .)
    DCOMMA          reduce using rule 27 (expr -> expr EQ expr .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    MUL             shift and go to state 38
    DIV             shift and go to state 39

  ! PLUS            [ reduce using rule 27 (expr -> expr EQ expr .) ]
  ! MINUS           [ reduce using rule 27 (expr -> expr EQ expr .) ]
  ! MUL             [ reduce using rule 27 (expr -> expr EQ expr .) ]
  ! DIV             [ reduce using rule 27 (expr -> expr EQ expr .) ]
  ! OR              [ shift and go to state 40 ]
  ! GT              [ shift and go to state 41 ]
  ! LT              [ shift and go to state 42 ]
  ! EQ              [ shift and go to state 43 ]


state 75

    (6) statement -> OPENST stmt_list CLOSEST .

    error           reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    OPENST          reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    WHILE           reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    IF              reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    MINUS           reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    NOT             reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    INC             reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    DEC             reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    OPENBR          reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    SZ1             reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    SZ2             reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    NUM             reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    UINT            reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    CUINT           reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    BOOL            reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    CBOOL           reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    1DARRBOOL       reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    1DARRINT        reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    2DARRBOOL       reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    2DARRINT        reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    EXTEND1         reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    EXTEND2         reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    ID              reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    $end            reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    CLOSEST         reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)
    ELSE            reduce using rule 6 (statement -> OPENST stmt_list CLOSEST .)


state 76

    (13) statement -> WHILE OPENBR expr . CLOSEBR DO statement
    (20) expr -> expr . PLUS expr
    (21) expr -> expr . MINUS expr
    (22) expr -> expr . MUL expr
    (23) expr -> expr . DIV expr
    (24) expr -> expr . OR expr
    (25) expr -> expr . GT expr
    (26) expr -> expr . LT expr
    (27) expr -> expr . EQ expr

    CLOSEBR         shift and go to state 93
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    MUL             shift and go to state 38
    DIV             shift and go to state 39
    OR              shift and go to state 40
    GT              shift and go to state 41
    LT              shift and go to state 42
    EQ              shift and go to state 43


state 77

    (28) expr -> OPENBR expr CLOSEBR .

    PLUS            reduce using rule 28 (expr -> OPENBR expr CLOSEBR .)
    MINUS           reduce using rule 28 (expr -> OPENBR expr CLOSEBR .)
    MUL             reduce using rule 28 (expr -> OPENBR expr CLOSEBR .)
    DIV             reduce using rule 28 (expr -> OPENBR expr CLOSEBR .)
    OR              reduce using rule 28 (expr -> OPENBR expr CLOSEBR .)
    GT              reduce using rule 28 (expr -> OPENBR expr CLOSEBR .)
    LT              reduce using rule 28 (expr -> OPENBR expr CLOSEBR .)
    EQ              reduce using rule 28 (expr -> OPENBR expr CLOSEBR .)
    error           reduce using rule 28 (expr -> OPENBR expr CLOSEBR .)
    OPENST          reduce using rule 28 (expr -> OPENBR expr CLOSEBR .)
    WHILE           reduce using rule 28 (expr -> OPENBR expr CLOSEBR .)
    IF              reduce using rule 28 (expr -> OPENBR expr CLOSEBR .)
    NOT             reduce using rule 28 (expr -> OPENBR expr CLOSEBR .)
    INC             reduce using rule 28 (expr -> OPENBR expr CLOSEBR .)
    DEC             reduce using rule 28 (expr -> OPENBR expr CLOSEBR .)
    OPENBR          reduce using rule 28 (expr -> OPENBR expr CLOSEBR .)
    SZ1             reduce using rule 28 (expr -> OPENBR expr CLOSEBR .)
    SZ2             reduce using rule 28 (expr -> OPENBR expr CLOSEBR .)
    NUM             reduce using rule 28 (expr -> OPENBR expr CLOSEBR .)
    UINT            reduce using rule 28 (expr -> OPENBR expr CLOSEBR .)
    CUINT           reduce using rule 28 (expr -> OPENBR expr CLOSEBR .)
    BOOL            reduce using rule 28 (expr -> OPENBR expr CLOSEBR .)
    CBOOL           reduce using rule 28 (expr -> OPENBR expr CLOSEBR .)
    1DARRBOOL       reduce using rule 28 (expr -> OPENBR expr CLOSEBR .)
    1DARRINT        reduce using rule 28 (expr -> OPENBR expr CLOSEBR .)
    2DARRBOOL       reduce using rule 28 (expr -> OPENBR expr CLOSEBR .)
    2DARRINT        reduce using rule 28 (expr -> OPENBR expr CLOSEBR .)
    EXTEND1         reduce using rule 28 (expr -> OPENBR expr CLOSEBR .)
    EXTEND2         reduce using rule 28 (expr -> OPENBR expr CLOSEBR .)
    ID              reduce using rule 28 (expr -> OPENBR expr CLOSEBR .)
    $end            reduce using rule 28 (expr -> OPENBR expr CLOSEBR .)
    CLOSEST         reduce using rule 28 (expr -> OPENBR expr CLOSEBR .)
    CLOSEBR         reduce using rule 28 (expr -> OPENBR expr CLOSEBR .)
    COMMA           reduce using rule 28 (expr -> OPENBR expr CLOSEBR .)
    ELSE            reduce using rule 28 (expr -> OPENBR expr CLOSEBR .)
    CLOSEIND        reduce using rule 28 (expr -> OPENBR expr CLOSEBR .)
    DCOMMA          reduce using rule 28 (expr -> OPENBR expr CLOSEBR .)


state 78

    (29) expr -> id OPENBR . expr CLOSEBR
    (16) expr -> . MINUS expr
    (17) expr -> . NOT expr
    (18) expr -> . INC id
    (19) expr -> . DEC id
    (20) expr -> . expr PLUS expr
    (21) expr -> . expr MINUS expr
    (22) expr -> . expr MUL expr
    (23) expr -> . expr DIV expr
    (24) expr -> . expr OR expr
    (25) expr -> . expr GT expr
    (26) expr -> . expr LT expr
    (27) expr -> . expr EQ expr
    (28) expr -> . OPENBR expr CLOSEBR
    (29) expr -> . id OPENBR expr CLOSEBR
    (30) expr -> . SZ1 id
    (31) expr -> . SZ2 id expr
    (32) expr -> . NUM
    (33) expr -> . id
    (51) id -> . ID

    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    INC             shift and go to state 18
    DEC             shift and go to state 20
    OPENBR          shift and go to state 14
    SZ1             shift and go to state 21
    SZ2             shift and go to state 22
    NUM             shift and go to state 23
    ID              shift and go to state 34

    id                             shift and go to state 47
    expr                           shift and go to state 94

state 79

    (14) statement -> IF OPENBR expr . CLOSEBR statement
    (15) statement -> IF OPENBR expr . CLOSEBR statement ELSE statement
    (20) expr -> expr . PLUS expr
    (21) expr -> expr . MINUS expr
    (22) expr -> expr . MUL expr
    (23) expr -> expr . DIV expr
    (24) expr -> expr . OR expr
    (25) expr -> expr . GT expr
    (26) expr -> expr . LT expr
    (27) expr -> expr . EQ expr

    CLOSEBR         shift and go to state 95
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    MUL             shift and go to state 38
    DIV             shift and go to state 39
    OR              shift and go to state 40
    GT              shift and go to state 41
    LT              shift and go to state 42
    EQ              shift and go to state 43


state 80

    (29) expr -> id OPENBR expr . CLOSEBR
    (49) assign -> id OPENBR expr . CLOSEBR ASGN expr
    (50) assign -> id OPENBR expr . COMMA expr CLOSEBR ASGN expr
    (20) expr -> expr . PLUS expr
    (21) expr -> expr . MINUS expr
    (22) expr -> expr . MUL expr
    (23) expr -> expr . DIV expr
    (24) expr -> expr . OR expr
    (25) expr -> expr . GT expr
    (26) expr -> expr . LT expr
    (27) expr -> expr . EQ expr

    CLOSEBR         shift and go to state 96
    COMMA           shift and go to state 97
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    MUL             shift and go to state 38
    DIV             shift and go to state 39
    OR              shift and go to state 40
    GT              shift and go to state 41
    LT              shift and go to state 42
    EQ              shift and go to state 43


state 81

    (48) assign -> id ASGN expr .
    (20) expr -> expr . PLUS expr
    (21) expr -> expr . MINUS expr
    (22) expr -> expr . MUL expr
    (23) expr -> expr . DIV expr
    (24) expr -> expr . OR expr
    (25) expr -> expr . GT expr
    (26) expr -> expr . LT expr
    (27) expr -> expr . EQ expr

    error           reduce using rule 48 (assign -> id ASGN expr .)
    OPENST          reduce using rule 48 (assign -> id ASGN expr .)
    WHILE           reduce using rule 48 (assign -> id ASGN expr .)
    IF              reduce using rule 48 (assign -> id ASGN expr .)
    NOT             reduce using rule 48 (assign -> id ASGN expr .)
    INC             reduce using rule 48 (assign -> id ASGN expr .)
    DEC             reduce using rule 48 (assign -> id ASGN expr .)
    OPENBR          reduce using rule 48 (assign -> id ASGN expr .)
    SZ1             reduce using rule 48 (assign -> id ASGN expr .)
    SZ2             reduce using rule 48 (assign -> id ASGN expr .)
    NUM             reduce using rule 48 (assign -> id ASGN expr .)
    UINT            reduce using rule 48 (assign -> id ASGN expr .)
    CUINT           reduce using rule 48 (assign -> id ASGN expr .)
    BOOL            reduce using rule 48 (assign -> id ASGN expr .)
    CBOOL           reduce using rule 48 (assign -> id ASGN expr .)
    1DARRBOOL       reduce using rule 48 (assign -> id ASGN expr .)
    1DARRINT        reduce using rule 48 (assign -> id ASGN expr .)
    2DARRBOOL       reduce using rule 48 (assign -> id ASGN expr .)
    2DARRINT        reduce using rule 48 (assign -> id ASGN expr .)
    EXTEND1         reduce using rule 48 (assign -> id ASGN expr .)
    EXTEND2         reduce using rule 48 (assign -> id ASGN expr .)
    ID              reduce using rule 48 (assign -> id ASGN expr .)
    $end            reduce using rule 48 (assign -> id ASGN expr .)
    CLOSEST         reduce using rule 48 (assign -> id ASGN expr .)
    ELSE            reduce using rule 48 (assign -> id ASGN expr .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    MUL             shift and go to state 38
    DIV             shift and go to state 39
    OR              shift and go to state 40
    GT              shift and go to state 41
    LT              shift and go to state 42
    EQ              shift and go to state 43

  ! MINUS           [ reduce using rule 48 (assign -> id ASGN expr .) ]


state 82

    (31) expr -> SZ2 id expr .
    (20) expr -> expr . PLUS expr
    (21) expr -> expr . MINUS expr
    (22) expr -> expr . MUL expr
    (23) expr -> expr . DIV expr
    (24) expr -> expr . OR expr
    (25) expr -> expr . GT expr
    (26) expr -> expr . LT expr
    (27) expr -> expr . EQ expr

    PLUS            reduce using rule 31 (expr -> SZ2 id expr .)
    MINUS           reduce using rule 31 (expr -> SZ2 id expr .)
    MUL             reduce using rule 31 (expr -> SZ2 id expr .)
    DIV             reduce using rule 31 (expr -> SZ2 id expr .)
    OR              reduce using rule 31 (expr -> SZ2 id expr .)
    GT              reduce using rule 31 (expr -> SZ2 id expr .)
    LT              reduce using rule 31 (expr -> SZ2 id expr .)
    EQ              reduce using rule 31 (expr -> SZ2 id expr .)
    error           reduce using rule 31 (expr -> SZ2 id expr .)
    OPENST          reduce using rule 31 (expr -> SZ2 id expr .)
    WHILE           reduce using rule 31 (expr -> SZ2 id expr .)
    IF              reduce using rule 31 (expr -> SZ2 id expr .)
    NOT             reduce using rule 31 (expr -> SZ2 id expr .)
    INC             reduce using rule 31 (expr -> SZ2 id expr .)
    DEC             reduce using rule 31 (expr -> SZ2 id expr .)
    OPENBR          reduce using rule 31 (expr -> SZ2 id expr .)
    SZ1             reduce using rule 31 (expr -> SZ2 id expr .)
    SZ2             reduce using rule 31 (expr -> SZ2 id expr .)
    NUM             reduce using rule 31 (expr -> SZ2 id expr .)
    UINT            reduce using rule 31 (expr -> SZ2 id expr .)
    CUINT           reduce using rule 31 (expr -> SZ2 id expr .)
    BOOL            reduce using rule 31 (expr -> SZ2 id expr .)
    CBOOL           reduce using rule 31 (expr -> SZ2 id expr .)
    1DARRBOOL       reduce using rule 31 (expr -> SZ2 id expr .)
    1DARRINT        reduce using rule 31 (expr -> SZ2 id expr .)
    2DARRBOOL       reduce using rule 31 (expr -> SZ2 id expr .)
    2DARRINT        reduce using rule 31 (expr -> SZ2 id expr .)
    EXTEND1         reduce using rule 31 (expr -> SZ2 id expr .)
    EXTEND2         reduce using rule 31 (expr -> SZ2 id expr .)
    ID              reduce using rule 31 (expr -> SZ2 id expr .)
    $end            reduce using rule 31 (expr -> SZ2 id expr .)
    CLOSEST         reduce using rule 31 (expr -> SZ2 id expr .)
    CLOSEBR         reduce using rule 31 (expr -> SZ2 id expr .)
    COMMA           reduce using rule 31 (expr -> SZ2 id expr .)
    ELSE            reduce using rule 31 (expr -> SZ2 id expr .)
    CLOSEIND        reduce using rule 31 (expr -> SZ2 id expr .)
    DCOMMA          reduce using rule 31 (expr -> SZ2 id expr .)

  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]
  ! MUL             [ shift and go to state 38 ]
  ! DIV             [ shift and go to state 39 ]
  ! OR              [ shift and go to state 40 ]
  ! GT              [ shift and go to state 41 ]
  ! LT              [ shift and go to state 42 ]
  ! EQ              [ shift and go to state 43 ]


state 83

    (44) create_id -> UINT id ASGN . expr
    (16) expr -> . MINUS expr
    (17) expr -> . NOT expr
    (18) expr -> . INC id
    (19) expr -> . DEC id
    (20) expr -> . expr PLUS expr
    (21) expr -> . expr MINUS expr
    (22) expr -> . expr MUL expr
    (23) expr -> . expr DIV expr
    (24) expr -> . expr OR expr
    (25) expr -> . expr GT expr
    (26) expr -> . expr LT expr
    (27) expr -> . expr EQ expr
    (28) expr -> . OPENBR expr CLOSEBR
    (29) expr -> . id OPENBR expr CLOSEBR
    (30) expr -> . SZ1 id
    (31) expr -> . SZ2 id expr
    (32) expr -> . NUM
    (33) expr -> . id
    (51) id -> . ID

    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    INC             shift and go to state 18
    DEC             shift and go to state 20
    OPENBR          shift and go to state 14
    SZ1             shift and go to state 21
    SZ2             shift and go to state 22
    NUM             shift and go to state 23
    ID              shift and go to state 34

    id                             shift and go to state 47
    expr                           shift and go to state 98

state 84

    (45) create_id -> CUINT id ASGN . expr
    (16) expr -> . MINUS expr
    (17) expr -> . NOT expr
    (18) expr -> . INC id
    (19) expr -> . DEC id
    (20) expr -> . expr PLUS expr
    (21) expr -> . expr MINUS expr
    (22) expr -> . expr MUL expr
    (23) expr -> . expr DIV expr
    (24) expr -> . expr OR expr
    (25) expr -> . expr GT expr
    (26) expr -> . expr LT expr
    (27) expr -> . expr EQ expr
    (28) expr -> . OPENBR expr CLOSEBR
    (29) expr -> . id OPENBR expr CLOSEBR
    (30) expr -> . SZ1 id
    (31) expr -> . SZ2 id expr
    (32) expr -> . NUM
    (33) expr -> . id
    (51) id -> . ID

    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    INC             shift and go to state 18
    DEC             shift and go to state 20
    OPENBR          shift and go to state 14
    SZ1             shift and go to state 21
    SZ2             shift and go to state 22
    NUM             shift and go to state 23
    ID              shift and go to state 34

    id                             shift and go to state 47
    expr                           shift and go to state 99

state 85

    (46) create_id -> BOOL id ASGN . expr
    (16) expr -> . MINUS expr
    (17) expr -> . NOT expr
    (18) expr -> . INC id
    (19) expr -> . DEC id
    (20) expr -> . expr PLUS expr
    (21) expr -> . expr MINUS expr
    (22) expr -> . expr MUL expr
    (23) expr -> . expr DIV expr
    (24) expr -> . expr OR expr
    (25) expr -> . expr GT expr
    (26) expr -> . expr LT expr
    (27) expr -> . expr EQ expr
    (28) expr -> . OPENBR expr CLOSEBR
    (29) expr -> . id OPENBR expr CLOSEBR
    (30) expr -> . SZ1 id
    (31) expr -> . SZ2 id expr
    (32) expr -> . NUM
    (33) expr -> . id
    (51) id -> . ID

    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    INC             shift and go to state 18
    DEC             shift and go to state 20
    OPENBR          shift and go to state 14
    SZ1             shift and go to state 21
    SZ2             shift and go to state 22
    NUM             shift and go to state 23
    ID              shift and go to state 34

    id                             shift and go to state 47
    expr                           shift and go to state 100

state 86

    (47) create_id -> CBOOL id ASGN . expr
    (16) expr -> . MINUS expr
    (17) expr -> . NOT expr
    (18) expr -> . INC id
    (19) expr -> . DEC id
    (20) expr -> . expr PLUS expr
    (21) expr -> . expr MINUS expr
    (22) expr -> . expr MUL expr
    (23) expr -> . expr DIV expr
    (24) expr -> . expr OR expr
    (25) expr -> . expr GT expr
    (26) expr -> . expr LT expr
    (27) expr -> . expr EQ expr
    (28) expr -> . OPENBR expr CLOSEBR
    (29) expr -> . id OPENBR expr CLOSEBR
    (30) expr -> . SZ1 id
    (31) expr -> . SZ2 id expr
    (32) expr -> . NUM
    (33) expr -> . id
    (51) id -> . ID

    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    INC             shift and go to state 18
    DEC             shift and go to state 20
    OPENBR          shift and go to state 14
    SZ1             shift and go to state 21
    SZ2             shift and go to state 22
    NUM             shift and go to state 23
    ID              shift and go to state 34

    id                             shift and go to state 47
    expr                           shift and go to state 101

state 87

    (34) create_1darr -> 1DARRBOOL id ASGN . OPENIND enum CLOSEIND

    OPENIND         shift and go to state 102


state 88

    (35) create_1darr -> 1DARRINT id ASGN . OPENIND enum CLOSEIND

    OPENIND         shift and go to state 103


state 89

    (38) create_2darr -> 2DARRBOOL id ASGN . OPENIND enum2 CLOSEIND

    OPENIND         shift and go to state 104


state 90

    (39) create_2darr -> 2DARRINT id ASGN . OPENIND enum2 CLOSEIND

    OPENIND         shift and go to state 105


state 91

    (36) extend1 -> EXTEND1 id expr .
    (20) expr -> expr . PLUS expr
    (21) expr -> expr . MINUS expr
    (22) expr -> expr . MUL expr
    (23) expr -> expr . DIV expr
    (24) expr -> expr . OR expr
    (25) expr -> expr . GT expr
    (26) expr -> expr . LT expr
    (27) expr -> expr . EQ expr

    error           reduce using rule 36 (extend1 -> EXTEND1 id expr .)
    OPENST          reduce using rule 36 (extend1 -> EXTEND1 id expr .)
    WHILE           reduce using rule 36 (extend1 -> EXTEND1 id expr .)
    IF              reduce using rule 36 (extend1 -> EXTEND1 id expr .)
    MINUS           reduce using rule 36 (extend1 -> EXTEND1 id expr .)
    NOT             reduce using rule 36 (extend1 -> EXTEND1 id expr .)
    INC             reduce using rule 36 (extend1 -> EXTEND1 id expr .)
    DEC             reduce using rule 36 (extend1 -> EXTEND1 id expr .)
    OPENBR          reduce using rule 36 (extend1 -> EXTEND1 id expr .)
    SZ1             reduce using rule 36 (extend1 -> EXTEND1 id expr .)
    SZ2             reduce using rule 36 (extend1 -> EXTEND1 id expr .)
    NUM             reduce using rule 36 (extend1 -> EXTEND1 id expr .)
    UINT            reduce using rule 36 (extend1 -> EXTEND1 id expr .)
    CUINT           reduce using rule 36 (extend1 -> EXTEND1 id expr .)
    BOOL            reduce using rule 36 (extend1 -> EXTEND1 id expr .)
    CBOOL           reduce using rule 36 (extend1 -> EXTEND1 id expr .)
    1DARRBOOL       reduce using rule 36 (extend1 -> EXTEND1 id expr .)
    1DARRINT        reduce using rule 36 (extend1 -> EXTEND1 id expr .)
    2DARRBOOL       reduce using rule 36 (extend1 -> EXTEND1 id expr .)
    2DARRINT        reduce using rule 36 (extend1 -> EXTEND1 id expr .)
    EXTEND1         reduce using rule 36 (extend1 -> EXTEND1 id expr .)
    EXTEND2         reduce using rule 36 (extend1 -> EXTEND1 id expr .)
    ID              reduce using rule 36 (extend1 -> EXTEND1 id expr .)
    $end            reduce using rule 36 (extend1 -> EXTEND1 id expr .)
    CLOSEST         reduce using rule 36 (extend1 -> EXTEND1 id expr .)
    ELSE            reduce using rule 36 (extend1 -> EXTEND1 id expr .)
    PLUS            shift and go to state 36
    MUL             shift and go to state 38
    DIV             shift and go to state 39
    OR              shift and go to state 40
    GT              shift and go to state 41
    LT              shift and go to state 42
    EQ              shift and go to state 43

  ! MINUS           [ shift and go to state 37 ]


state 92

    (37) extend2 -> EXTEND2 id OPENBR . expr CLOSEBR OPENBR expr CLOSEBR
    (16) expr -> . MINUS expr
    (17) expr -> . NOT expr
    (18) expr -> . INC id
    (19) expr -> . DEC id
    (20) expr -> . expr PLUS expr
    (21) expr -> . expr MINUS expr
    (22) expr -> . expr MUL expr
    (23) expr -> . expr DIV expr
    (24) expr -> . expr OR expr
    (25) expr -> . expr GT expr
    (26) expr -> . expr LT expr
    (27) expr -> . expr EQ expr
    (28) expr -> . OPENBR expr CLOSEBR
    (29) expr -> . id OPENBR expr CLOSEBR
    (30) expr -> . SZ1 id
    (31) expr -> . SZ2 id expr
    (32) expr -> . NUM
    (33) expr -> . id
    (51) id -> . ID

    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    INC             shift and go to state 18
    DEC             shift and go to state 20
    OPENBR          shift and go to state 14
    SZ1             shift and go to state 21
    SZ2             shift and go to state 22
    NUM             shift and go to state 23
    ID              shift and go to state 34

    id                             shift and go to state 47
    expr                           shift and go to state 106

state 93

    (13) statement -> WHILE OPENBR expr CLOSEBR . DO statement

    DO              shift and go to state 107


state 94

    (29) expr -> id OPENBR expr . CLOSEBR
    (20) expr -> expr . PLUS expr
    (21) expr -> expr . MINUS expr
    (22) expr -> expr . MUL expr
    (23) expr -> expr . DIV expr
    (24) expr -> expr . OR expr
    (25) expr -> expr . GT expr
    (26) expr -> expr . LT expr
    (27) expr -> expr . EQ expr

    CLOSEBR         shift and go to state 108
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    MUL             shift and go to state 38
    DIV             shift and go to state 39
    OR              shift and go to state 40
    GT              shift and go to state 41
    LT              shift and go to state 42
    EQ              shift and go to state 43


state 95

    (14) statement -> IF OPENBR expr CLOSEBR . statement
    (15) statement -> IF OPENBR expr CLOSEBR . statement ELSE statement
    (4) statement -> . error
    (5) statement -> . expr
    (6) statement -> . OPENST stmt_list CLOSEST
    (7) statement -> . create_id
    (8) statement -> . assign
    (9) statement -> . create_1darr
    (10) statement -> . create_2darr
    (11) statement -> . extend1
    (12) statement -> . extend2
    (13) statement -> . WHILE OPENBR expr CLOSEBR DO statement
    (14) statement -> . IF OPENBR expr CLOSEBR statement
    (15) statement -> . IF OPENBR expr CLOSEBR statement ELSE statement
    (16) expr -> . MINUS expr
    (17) expr -> . NOT expr
    (18) expr -> . INC id
    (19) expr -> . DEC id
    (20) expr -> . expr PLUS expr
    (21) expr -> . expr MINUS expr
    (22) expr -> . expr MUL expr
    (23) expr -> . expr DIV expr
    (24) expr -> . expr OR expr
    (25) expr -> . expr GT expr
    (26) expr -> . expr LT expr
    (27) expr -> . expr EQ expr
    (28) expr -> . OPENBR expr CLOSEBR
    (29) expr -> . id OPENBR expr CLOSEBR
    (30) expr -> . SZ1 id
    (31) expr -> . SZ2 id expr
    (32) expr -> . NUM
    (33) expr -> . id
    (44) create_id -> . UINT id ASGN expr
    (45) create_id -> . CUINT id ASGN expr
    (46) create_id -> . BOOL id ASGN expr
    (47) create_id -> . CBOOL id ASGN expr
    (48) assign -> . id ASGN expr
    (49) assign -> . id OPENBR expr CLOSEBR ASGN expr
    (50) assign -> . id OPENBR expr COMMA expr CLOSEBR ASGN expr
    (34) create_1darr -> . 1DARRBOOL id ASGN OPENIND enum CLOSEIND
    (35) create_1darr -> . 1DARRINT id ASGN OPENIND enum CLOSEIND
    (38) create_2darr -> . 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND
    (39) create_2darr -> . 2DARRINT id ASGN OPENIND enum2 CLOSEIND
    (36) extend1 -> . EXTEND1 id expr
    (37) extend2 -> . EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (51) id -> . ID

    error           shift and go to state 4
    OPENST          shift and go to state 6
    WHILE           shift and go to state 13
    IF              shift and go to state 15
    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    INC             shift and go to state 18
    DEC             shift and go to state 20
    OPENBR          shift and go to state 14
    SZ1             shift and go to state 21
    SZ2             shift and go to state 22
    NUM             shift and go to state 23
    UINT            shift and go to state 24
    CUINT           shift and go to state 25
    BOOL            shift and go to state 26
    CBOOL           shift and go to state 27
    1DARRBOOL       shift and go to state 28
    1DARRINT        shift and go to state 29
    2DARRBOOL       shift and go to state 30
    2DARRINT        shift and go to state 31
    EXTEND1         shift and go to state 32
    EXTEND2         shift and go to state 33
    ID              shift and go to state 34

    expr                           shift and go to state 5
    statement                      shift and go to state 109
    create_id                      shift and go to state 7
    assign                         shift and go to state 8
    create_1darr                   shift and go to state 9
    create_2darr                   shift and go to state 10
    extend1                        shift and go to state 11
    extend2                        shift and go to state 12
    id                             shift and go to state 19

state 96

    (29) expr -> id OPENBR expr CLOSEBR .
    (49) assign -> id OPENBR expr CLOSEBR . ASGN expr

    PLUS            reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    MINUS           reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    MUL             reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    DIV             reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    OR              reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    GT              reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    LT              reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    EQ              reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    error           reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    OPENST          reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    WHILE           reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    IF              reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    NOT             reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    INC             reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    DEC             reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    OPENBR          reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    SZ1             reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    SZ2             reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    NUM             reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    UINT            reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    CUINT           reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    BOOL            reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    CBOOL           reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    1DARRBOOL       reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    1DARRINT        reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    2DARRBOOL       reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    2DARRINT        reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    EXTEND1         reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    EXTEND2         reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    ID              reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    $end            reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    CLOSEST         reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    ELSE            reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    ASGN            shift and go to state 110


state 97

    (50) assign -> id OPENBR expr COMMA . expr CLOSEBR ASGN expr
    (16) expr -> . MINUS expr
    (17) expr -> . NOT expr
    (18) expr -> . INC id
    (19) expr -> . DEC id
    (20) expr -> . expr PLUS expr
    (21) expr -> . expr MINUS expr
    (22) expr -> . expr MUL expr
    (23) expr -> . expr DIV expr
    (24) expr -> . expr OR expr
    (25) expr -> . expr GT expr
    (26) expr -> . expr LT expr
    (27) expr -> . expr EQ expr
    (28) expr -> . OPENBR expr CLOSEBR
    (29) expr -> . id OPENBR expr CLOSEBR
    (30) expr -> . SZ1 id
    (31) expr -> . SZ2 id expr
    (32) expr -> . NUM
    (33) expr -> . id
    (51) id -> . ID

    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    INC             shift and go to state 18
    DEC             shift and go to state 20
    OPENBR          shift and go to state 14
    SZ1             shift and go to state 21
    SZ2             shift and go to state 22
    NUM             shift and go to state 23
    ID              shift and go to state 34

    id                             shift and go to state 47
    expr                           shift and go to state 111

state 98

    (44) create_id -> UINT id ASGN expr .
    (20) expr -> expr . PLUS expr
    (21) expr -> expr . MINUS expr
    (22) expr -> expr . MUL expr
    (23) expr -> expr . DIV expr
    (24) expr -> expr . OR expr
    (25) expr -> expr . GT expr
    (26) expr -> expr . LT expr
    (27) expr -> expr . EQ expr

    error           reduce using rule 44 (create_id -> UINT id ASGN expr .)
    OPENST          reduce using rule 44 (create_id -> UINT id ASGN expr .)
    WHILE           reduce using rule 44 (create_id -> UINT id ASGN expr .)
    IF              reduce using rule 44 (create_id -> UINT id ASGN expr .)
    NOT             reduce using rule 44 (create_id -> UINT id ASGN expr .)
    INC             reduce using rule 44 (create_id -> UINT id ASGN expr .)
    DEC             reduce using rule 44 (create_id -> UINT id ASGN expr .)
    OPENBR          reduce using rule 44 (create_id -> UINT id ASGN expr .)
    SZ1             reduce using rule 44 (create_id -> UINT id ASGN expr .)
    SZ2             reduce using rule 44 (create_id -> UINT id ASGN expr .)
    NUM             reduce using rule 44 (create_id -> UINT id ASGN expr .)
    UINT            reduce using rule 44 (create_id -> UINT id ASGN expr .)
    CUINT           reduce using rule 44 (create_id -> UINT id ASGN expr .)
    BOOL            reduce using rule 44 (create_id -> UINT id ASGN expr .)
    CBOOL           reduce using rule 44 (create_id -> UINT id ASGN expr .)
    1DARRBOOL       reduce using rule 44 (create_id -> UINT id ASGN expr .)
    1DARRINT        reduce using rule 44 (create_id -> UINT id ASGN expr .)
    2DARRBOOL       reduce using rule 44 (create_id -> UINT id ASGN expr .)
    2DARRINT        reduce using rule 44 (create_id -> UINT id ASGN expr .)
    EXTEND1         reduce using rule 44 (create_id -> UINT id ASGN expr .)
    EXTEND2         reduce using rule 44 (create_id -> UINT id ASGN expr .)
    ID              reduce using rule 44 (create_id -> UINT id ASGN expr .)
    $end            reduce using rule 44 (create_id -> UINT id ASGN expr .)
    CLOSEST         reduce using rule 44 (create_id -> UINT id ASGN expr .)
    ELSE            reduce using rule 44 (create_id -> UINT id ASGN expr .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    MUL             shift and go to state 38
    DIV             shift and go to state 39
    OR              shift and go to state 40
    GT              shift and go to state 41
    LT              shift and go to state 42
    EQ              shift and go to state 43

  ! MINUS           [ reduce using rule 44 (create_id -> UINT id ASGN expr .) ]


state 99

    (45) create_id -> CUINT id ASGN expr .
    (20) expr -> expr . PLUS expr
    (21) expr -> expr . MINUS expr
    (22) expr -> expr . MUL expr
    (23) expr -> expr . DIV expr
    (24) expr -> expr . OR expr
    (25) expr -> expr . GT expr
    (26) expr -> expr . LT expr
    (27) expr -> expr . EQ expr

    error           reduce using rule 45 (create_id -> CUINT id ASGN expr .)
    OPENST          reduce using rule 45 (create_id -> CUINT id ASGN expr .)
    WHILE           reduce using rule 45 (create_id -> CUINT id ASGN expr .)
    IF              reduce using rule 45 (create_id -> CUINT id ASGN expr .)
    NOT             reduce using rule 45 (create_id -> CUINT id ASGN expr .)
    INC             reduce using rule 45 (create_id -> CUINT id ASGN expr .)
    DEC             reduce using rule 45 (create_id -> CUINT id ASGN expr .)
    OPENBR          reduce using rule 45 (create_id -> CUINT id ASGN expr .)
    SZ1             reduce using rule 45 (create_id -> CUINT id ASGN expr .)
    SZ2             reduce using rule 45 (create_id -> CUINT id ASGN expr .)
    NUM             reduce using rule 45 (create_id -> CUINT id ASGN expr .)
    UINT            reduce using rule 45 (create_id -> CUINT id ASGN expr .)
    CUINT           reduce using rule 45 (create_id -> CUINT id ASGN expr .)
    BOOL            reduce using rule 45 (create_id -> CUINT id ASGN expr .)
    CBOOL           reduce using rule 45 (create_id -> CUINT id ASGN expr .)
    1DARRBOOL       reduce using rule 45 (create_id -> CUINT id ASGN expr .)
    1DARRINT        reduce using rule 45 (create_id -> CUINT id ASGN expr .)
    2DARRBOOL       reduce using rule 45 (create_id -> CUINT id ASGN expr .)
    2DARRINT        reduce using rule 45 (create_id -> CUINT id ASGN expr .)
    EXTEND1         reduce using rule 45 (create_id -> CUINT id ASGN expr .)
    EXTEND2         reduce using rule 45 (create_id -> CUINT id ASGN expr .)
    ID              reduce using rule 45 (create_id -> CUINT id ASGN expr .)
    $end            reduce using rule 45 (create_id -> CUINT id ASGN expr .)
    CLOSEST         reduce using rule 45 (create_id -> CUINT id ASGN expr .)
    ELSE            reduce using rule 45 (create_id -> CUINT id ASGN expr .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    MUL             shift and go to state 38
    DIV             shift and go to state 39
    OR              shift and go to state 40
    GT              shift and go to state 41
    LT              shift and go to state 42
    EQ              shift and go to state 43

  ! MINUS           [ reduce using rule 45 (create_id -> CUINT id ASGN expr .) ]


state 100

    (46) create_id -> BOOL id ASGN expr .
    (20) expr -> expr . PLUS expr
    (21) expr -> expr . MINUS expr
    (22) expr -> expr . MUL expr
    (23) expr -> expr . DIV expr
    (24) expr -> expr . OR expr
    (25) expr -> expr . GT expr
    (26) expr -> expr . LT expr
    (27) expr -> expr . EQ expr

    error           reduce using rule 46 (create_id -> BOOL id ASGN expr .)
    OPENST          reduce using rule 46 (create_id -> BOOL id ASGN expr .)
    WHILE           reduce using rule 46 (create_id -> BOOL id ASGN expr .)
    IF              reduce using rule 46 (create_id -> BOOL id ASGN expr .)
    NOT             reduce using rule 46 (create_id -> BOOL id ASGN expr .)
    INC             reduce using rule 46 (create_id -> BOOL id ASGN expr .)
    DEC             reduce using rule 46 (create_id -> BOOL id ASGN expr .)
    OPENBR          reduce using rule 46 (create_id -> BOOL id ASGN expr .)
    SZ1             reduce using rule 46 (create_id -> BOOL id ASGN expr .)
    SZ2             reduce using rule 46 (create_id -> BOOL id ASGN expr .)
    NUM             reduce using rule 46 (create_id -> BOOL id ASGN expr .)
    UINT            reduce using rule 46 (create_id -> BOOL id ASGN expr .)
    CUINT           reduce using rule 46 (create_id -> BOOL id ASGN expr .)
    BOOL            reduce using rule 46 (create_id -> BOOL id ASGN expr .)
    CBOOL           reduce using rule 46 (create_id -> BOOL id ASGN expr .)
    1DARRBOOL       reduce using rule 46 (create_id -> BOOL id ASGN expr .)
    1DARRINT        reduce using rule 46 (create_id -> BOOL id ASGN expr .)
    2DARRBOOL       reduce using rule 46 (create_id -> BOOL id ASGN expr .)
    2DARRINT        reduce using rule 46 (create_id -> BOOL id ASGN expr .)
    EXTEND1         reduce using rule 46 (create_id -> BOOL id ASGN expr .)
    EXTEND2         reduce using rule 46 (create_id -> BOOL id ASGN expr .)
    ID              reduce using rule 46 (create_id -> BOOL id ASGN expr .)
    $end            reduce using rule 46 (create_id -> BOOL id ASGN expr .)
    CLOSEST         reduce using rule 46 (create_id -> BOOL id ASGN expr .)
    ELSE            reduce using rule 46 (create_id -> BOOL id ASGN expr .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    MUL             shift and go to state 38
    DIV             shift and go to state 39
    OR              shift and go to state 40
    GT              shift and go to state 41
    LT              shift and go to state 42
    EQ              shift and go to state 43

  ! MINUS           [ reduce using rule 46 (create_id -> BOOL id ASGN expr .) ]


state 101

    (47) create_id -> CBOOL id ASGN expr .
    (20) expr -> expr . PLUS expr
    (21) expr -> expr . MINUS expr
    (22) expr -> expr . MUL expr
    (23) expr -> expr . DIV expr
    (24) expr -> expr . OR expr
    (25) expr -> expr . GT expr
    (26) expr -> expr . LT expr
    (27) expr -> expr . EQ expr

    error           reduce using rule 47 (create_id -> CBOOL id ASGN expr .)
    OPENST          reduce using rule 47 (create_id -> CBOOL id ASGN expr .)
    WHILE           reduce using rule 47 (create_id -> CBOOL id ASGN expr .)
    IF              reduce using rule 47 (create_id -> CBOOL id ASGN expr .)
    NOT             reduce using rule 47 (create_id -> CBOOL id ASGN expr .)
    INC             reduce using rule 47 (create_id -> CBOOL id ASGN expr .)
    DEC             reduce using rule 47 (create_id -> CBOOL id ASGN expr .)
    OPENBR          reduce using rule 47 (create_id -> CBOOL id ASGN expr .)
    SZ1             reduce using rule 47 (create_id -> CBOOL id ASGN expr .)
    SZ2             reduce using rule 47 (create_id -> CBOOL id ASGN expr .)
    NUM             reduce using rule 47 (create_id -> CBOOL id ASGN expr .)
    UINT            reduce using rule 47 (create_id -> CBOOL id ASGN expr .)
    CUINT           reduce using rule 47 (create_id -> CBOOL id ASGN expr .)
    BOOL            reduce using rule 47 (create_id -> CBOOL id ASGN expr .)
    CBOOL           reduce using rule 47 (create_id -> CBOOL id ASGN expr .)
    1DARRBOOL       reduce using rule 47 (create_id -> CBOOL id ASGN expr .)
    1DARRINT        reduce using rule 47 (create_id -> CBOOL id ASGN expr .)
    2DARRBOOL       reduce using rule 47 (create_id -> CBOOL id ASGN expr .)
    2DARRINT        reduce using rule 47 (create_id -> CBOOL id ASGN expr .)
    EXTEND1         reduce using rule 47 (create_id -> CBOOL id ASGN expr .)
    EXTEND2         reduce using rule 47 (create_id -> CBOOL id ASGN expr .)
    ID              reduce using rule 47 (create_id -> CBOOL id ASGN expr .)
    $end            reduce using rule 47 (create_id -> CBOOL id ASGN expr .)
    CLOSEST         reduce using rule 47 (create_id -> CBOOL id ASGN expr .)
    ELSE            reduce using rule 47 (create_id -> CBOOL id ASGN expr .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    MUL             shift and go to state 38
    DIV             shift and go to state 39
    OR              shift and go to state 40
    GT              shift and go to state 41
    LT              shift and go to state 42
    EQ              shift and go to state 43

  ! MINUS           [ reduce using rule 47 (create_id -> CBOOL id ASGN expr .) ]


state 102

    (34) create_1darr -> 1DARRBOOL id ASGN OPENIND . enum CLOSEIND
    (40) enum -> . expr
    (41) enum -> . expr COMMA enum
    (16) expr -> . MINUS expr
    (17) expr -> . NOT expr
    (18) expr -> . INC id
    (19) expr -> . DEC id
    (20) expr -> . expr PLUS expr
    (21) expr -> . expr MINUS expr
    (22) expr -> . expr MUL expr
    (23) expr -> . expr DIV expr
    (24) expr -> . expr OR expr
    (25) expr -> . expr GT expr
    (26) expr -> . expr LT expr
    (27) expr -> . expr EQ expr
    (28) expr -> . OPENBR expr CLOSEBR
    (29) expr -> . id OPENBR expr CLOSEBR
    (30) expr -> . SZ1 id
    (31) expr -> . SZ2 id expr
    (32) expr -> . NUM
    (33) expr -> . id
    (51) id -> . ID

    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    INC             shift and go to state 18
    DEC             shift and go to state 20
    OPENBR          shift and go to state 14
    SZ1             shift and go to state 21
    SZ2             shift and go to state 22
    NUM             shift and go to state 23
    ID              shift and go to state 34

    id                             shift and go to state 47
    enum                           shift and go to state 112
    expr                           shift and go to state 113

state 103

    (35) create_1darr -> 1DARRINT id ASGN OPENIND . enum CLOSEIND
    (40) enum -> . expr
    (41) enum -> . expr COMMA enum
    (16) expr -> . MINUS expr
    (17) expr -> . NOT expr
    (18) expr -> . INC id
    (19) expr -> . DEC id
    (20) expr -> . expr PLUS expr
    (21) expr -> . expr MINUS expr
    (22) expr -> . expr MUL expr
    (23) expr -> . expr DIV expr
    (24) expr -> . expr OR expr
    (25) expr -> . expr GT expr
    (26) expr -> . expr LT expr
    (27) expr -> . expr EQ expr
    (28) expr -> . OPENBR expr CLOSEBR
    (29) expr -> . id OPENBR expr CLOSEBR
    (30) expr -> . SZ1 id
    (31) expr -> . SZ2 id expr
    (32) expr -> . NUM
    (33) expr -> . id
    (51) id -> . ID

    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    INC             shift and go to state 18
    DEC             shift and go to state 20
    OPENBR          shift and go to state 14
    SZ1             shift and go to state 21
    SZ2             shift and go to state 22
    NUM             shift and go to state 23
    ID              shift and go to state 34

    id                             shift and go to state 47
    enum                           shift and go to state 114
    expr                           shift and go to state 113

state 104

    (38) create_2darr -> 2DARRBOOL id ASGN OPENIND . enum2 CLOSEIND
    (42) enum2 -> . enum
    (43) enum2 -> . enum DCOMMA enum2
    (40) enum -> . expr
    (41) enum -> . expr COMMA enum
    (16) expr -> . MINUS expr
    (17) expr -> . NOT expr
    (18) expr -> . INC id
    (19) expr -> . DEC id
    (20) expr -> . expr PLUS expr
    (21) expr -> . expr MINUS expr
    (22) expr -> . expr MUL expr
    (23) expr -> . expr DIV expr
    (24) expr -> . expr OR expr
    (25) expr -> . expr GT expr
    (26) expr -> . expr LT expr
    (27) expr -> . expr EQ expr
    (28) expr -> . OPENBR expr CLOSEBR
    (29) expr -> . id OPENBR expr CLOSEBR
    (30) expr -> . SZ1 id
    (31) expr -> . SZ2 id expr
    (32) expr -> . NUM
    (33) expr -> . id
    (51) id -> . ID

    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    INC             shift and go to state 18
    DEC             shift and go to state 20
    OPENBR          shift and go to state 14
    SZ1             shift and go to state 21
    SZ2             shift and go to state 22
    NUM             shift and go to state 23
    ID              shift and go to state 34

    id                             shift and go to state 47
    enum2                          shift and go to state 115
    enum                           shift and go to state 116
    expr                           shift and go to state 113

state 105

    (39) create_2darr -> 2DARRINT id ASGN OPENIND . enum2 CLOSEIND
    (42) enum2 -> . enum
    (43) enum2 -> . enum DCOMMA enum2
    (40) enum -> . expr
    (41) enum -> . expr COMMA enum
    (16) expr -> . MINUS expr
    (17) expr -> . NOT expr
    (18) expr -> . INC id
    (19) expr -> . DEC id
    (20) expr -> . expr PLUS expr
    (21) expr -> . expr MINUS expr
    (22) expr -> . expr MUL expr
    (23) expr -> . expr DIV expr
    (24) expr -> . expr OR expr
    (25) expr -> . expr GT expr
    (26) expr -> . expr LT expr
    (27) expr -> . expr EQ expr
    (28) expr -> . OPENBR expr CLOSEBR
    (29) expr -> . id OPENBR expr CLOSEBR
    (30) expr -> . SZ1 id
    (31) expr -> . SZ2 id expr
    (32) expr -> . NUM
    (33) expr -> . id
    (51) id -> . ID

    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    INC             shift and go to state 18
    DEC             shift and go to state 20
    OPENBR          shift and go to state 14
    SZ1             shift and go to state 21
    SZ2             shift and go to state 22
    NUM             shift and go to state 23
    ID              shift and go to state 34

    id                             shift and go to state 47
    enum2                          shift and go to state 117
    enum                           shift and go to state 116
    expr                           shift and go to state 113

state 106

    (37) extend2 -> EXTEND2 id OPENBR expr . CLOSEBR OPENBR expr CLOSEBR
    (20) expr -> expr . PLUS expr
    (21) expr -> expr . MINUS expr
    (22) expr -> expr . MUL expr
    (23) expr -> expr . DIV expr
    (24) expr -> expr . OR expr
    (25) expr -> expr . GT expr
    (26) expr -> expr . LT expr
    (27) expr -> expr . EQ expr

    CLOSEBR         shift and go to state 118
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    MUL             shift and go to state 38
    DIV             shift and go to state 39
    OR              shift and go to state 40
    GT              shift and go to state 41
    LT              shift and go to state 42
    EQ              shift and go to state 43


state 107

    (13) statement -> WHILE OPENBR expr CLOSEBR DO . statement
    (4) statement -> . error
    (5) statement -> . expr
    (6) statement -> . OPENST stmt_list CLOSEST
    (7) statement -> . create_id
    (8) statement -> . assign
    (9) statement -> . create_1darr
    (10) statement -> . create_2darr
    (11) statement -> . extend1
    (12) statement -> . extend2
    (13) statement -> . WHILE OPENBR expr CLOSEBR DO statement
    (14) statement -> . IF OPENBR expr CLOSEBR statement
    (15) statement -> . IF OPENBR expr CLOSEBR statement ELSE statement
    (16) expr -> . MINUS expr
    (17) expr -> . NOT expr
    (18) expr -> . INC id
    (19) expr -> . DEC id
    (20) expr -> . expr PLUS expr
    (21) expr -> . expr MINUS expr
    (22) expr -> . expr MUL expr
    (23) expr -> . expr DIV expr
    (24) expr -> . expr OR expr
    (25) expr -> . expr GT expr
    (26) expr -> . expr LT expr
    (27) expr -> . expr EQ expr
    (28) expr -> . OPENBR expr CLOSEBR
    (29) expr -> . id OPENBR expr CLOSEBR
    (30) expr -> . SZ1 id
    (31) expr -> . SZ2 id expr
    (32) expr -> . NUM
    (33) expr -> . id
    (44) create_id -> . UINT id ASGN expr
    (45) create_id -> . CUINT id ASGN expr
    (46) create_id -> . BOOL id ASGN expr
    (47) create_id -> . CBOOL id ASGN expr
    (48) assign -> . id ASGN expr
    (49) assign -> . id OPENBR expr CLOSEBR ASGN expr
    (50) assign -> . id OPENBR expr COMMA expr CLOSEBR ASGN expr
    (34) create_1darr -> . 1DARRBOOL id ASGN OPENIND enum CLOSEIND
    (35) create_1darr -> . 1DARRINT id ASGN OPENIND enum CLOSEIND
    (38) create_2darr -> . 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND
    (39) create_2darr -> . 2DARRINT id ASGN OPENIND enum2 CLOSEIND
    (36) extend1 -> . EXTEND1 id expr
    (37) extend2 -> . EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (51) id -> . ID

    error           shift and go to state 4
    OPENST          shift and go to state 6
    WHILE           shift and go to state 13
    IF              shift and go to state 15
    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    INC             shift and go to state 18
    DEC             shift and go to state 20
    OPENBR          shift and go to state 14
    SZ1             shift and go to state 21
    SZ2             shift and go to state 22
    NUM             shift and go to state 23
    UINT            shift and go to state 24
    CUINT           shift and go to state 25
    BOOL            shift and go to state 26
    CBOOL           shift and go to state 27
    1DARRBOOL       shift and go to state 28
    1DARRINT        shift and go to state 29
    2DARRBOOL       shift and go to state 30
    2DARRINT        shift and go to state 31
    EXTEND1         shift and go to state 32
    EXTEND2         shift and go to state 33
    ID              shift and go to state 34

    expr                           shift and go to state 5
    statement                      shift and go to state 119
    create_id                      shift and go to state 7
    assign                         shift and go to state 8
    create_1darr                   shift and go to state 9
    create_2darr                   shift and go to state 10
    extend1                        shift and go to state 11
    extend2                        shift and go to state 12
    id                             shift and go to state 19

state 108

    (29) expr -> id OPENBR expr CLOSEBR .

    CLOSEBR         reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    PLUS            reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    MINUS           reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    MUL             reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    DIV             reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    OR              reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    GT              reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    LT              reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    EQ              reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    error           reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    OPENST          reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    WHILE           reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    IF              reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    NOT             reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    INC             reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    DEC             reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    OPENBR          reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    SZ1             reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    SZ2             reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    NUM             reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    UINT            reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    CUINT           reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    BOOL            reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    CBOOL           reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    1DARRBOOL       reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    1DARRINT        reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    2DARRBOOL       reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    2DARRINT        reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    EXTEND1         reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    EXTEND2         reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    ID              reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    $end            reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    CLOSEST         reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    COMMA           reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    ELSE            reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    CLOSEIND        reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)
    DCOMMA          reduce using rule 29 (expr -> id OPENBR expr CLOSEBR .)


state 109

    (14) statement -> IF OPENBR expr CLOSEBR statement .
    (15) statement -> IF OPENBR expr CLOSEBR statement . ELSE statement

    error           reduce using rule 14 (statement -> IF OPENBR expr CLOSEBR statement .)
    OPENST          reduce using rule 14 (statement -> IF OPENBR expr CLOSEBR statement .)
    WHILE           reduce using rule 14 (statement -> IF OPENBR expr CLOSEBR statement .)
    IF              reduce using rule 14 (statement -> IF OPENBR expr CLOSEBR statement .)
    MINUS           reduce using rule 14 (statement -> IF OPENBR expr CLOSEBR statement .)
    NOT             reduce using rule 14 (statement -> IF OPENBR expr CLOSEBR statement .)
    INC             reduce using rule 14 (statement -> IF OPENBR expr CLOSEBR statement .)
    DEC             reduce using rule 14 (statement -> IF OPENBR expr CLOSEBR statement .)
    OPENBR          reduce using rule 14 (statement -> IF OPENBR expr CLOSEBR statement .)
    SZ1             reduce using rule 14 (statement -> IF OPENBR expr CLOSEBR statement .)
    SZ2             reduce using rule 14 (statement -> IF OPENBR expr CLOSEBR statement .)
    NUM             reduce using rule 14 (statement -> IF OPENBR expr CLOSEBR statement .)
    UINT            reduce using rule 14 (statement -> IF OPENBR expr CLOSEBR statement .)
    CUINT           reduce using rule 14 (statement -> IF OPENBR expr CLOSEBR statement .)
    BOOL            reduce using rule 14 (statement -> IF OPENBR expr CLOSEBR statement .)
    CBOOL           reduce using rule 14 (statement -> IF OPENBR expr CLOSEBR statement .)
    1DARRBOOL       reduce using rule 14 (statement -> IF OPENBR expr CLOSEBR statement .)
    1DARRINT        reduce using rule 14 (statement -> IF OPENBR expr CLOSEBR statement .)
    2DARRBOOL       reduce using rule 14 (statement -> IF OPENBR expr CLOSEBR statement .)
    2DARRINT        reduce using rule 14 (statement -> IF OPENBR expr CLOSEBR statement .)
    EXTEND1         reduce using rule 14 (statement -> IF OPENBR expr CLOSEBR statement .)
    EXTEND2         reduce using rule 14 (statement -> IF OPENBR expr CLOSEBR statement .)
    ID              reduce using rule 14 (statement -> IF OPENBR expr CLOSEBR statement .)
    $end            reduce using rule 14 (statement -> IF OPENBR expr CLOSEBR statement .)
    CLOSEST         reduce using rule 14 (statement -> IF OPENBR expr CLOSEBR statement .)
    ELSE            shift and go to state 120

  ! ELSE            [ reduce using rule 14 (statement -> IF OPENBR expr CLOSEBR statement .) ]


state 110

    (49) assign -> id OPENBR expr CLOSEBR ASGN . expr
    (16) expr -> . MINUS expr
    (17) expr -> . NOT expr
    (18) expr -> . INC id
    (19) expr -> . DEC id
    (20) expr -> . expr PLUS expr
    (21) expr -> . expr MINUS expr
    (22) expr -> . expr MUL expr
    (23) expr -> . expr DIV expr
    (24) expr -> . expr OR expr
    (25) expr -> . expr GT expr
    (26) expr -> . expr LT expr
    (27) expr -> . expr EQ expr
    (28) expr -> . OPENBR expr CLOSEBR
    (29) expr -> . id OPENBR expr CLOSEBR
    (30) expr -> . SZ1 id
    (31) expr -> . SZ2 id expr
    (32) expr -> . NUM
    (33) expr -> . id
    (51) id -> . ID

    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    INC             shift and go to state 18
    DEC             shift and go to state 20
    OPENBR          shift and go to state 14
    SZ1             shift and go to state 21
    SZ2             shift and go to state 22
    NUM             shift and go to state 23
    ID              shift and go to state 34

    id                             shift and go to state 47
    expr                           shift and go to state 121

state 111

    (50) assign -> id OPENBR expr COMMA expr . CLOSEBR ASGN expr
    (20) expr -> expr . PLUS expr
    (21) expr -> expr . MINUS expr
    (22) expr -> expr . MUL expr
    (23) expr -> expr . DIV expr
    (24) expr -> expr . OR expr
    (25) expr -> expr . GT expr
    (26) expr -> expr . LT expr
    (27) expr -> expr . EQ expr

    CLOSEBR         shift and go to state 122
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    MUL             shift and go to state 38
    DIV             shift and go to state 39
    OR              shift and go to state 40
    GT              shift and go to state 41
    LT              shift and go to state 42
    EQ              shift and go to state 43


state 112

    (34) create_1darr -> 1DARRBOOL id ASGN OPENIND enum . CLOSEIND

    CLOSEIND        shift and go to state 123


state 113

    (40) enum -> expr .
    (41) enum -> expr . COMMA enum
    (20) expr -> expr . PLUS expr
    (21) expr -> expr . MINUS expr
    (22) expr -> expr . MUL expr
    (23) expr -> expr . DIV expr
    (24) expr -> expr . OR expr
    (25) expr -> expr . GT expr
    (26) expr -> expr . LT expr
    (27) expr -> expr . EQ expr

    CLOSEIND        reduce using rule 40 (enum -> expr .)
    DCOMMA          reduce using rule 40 (enum -> expr .)
    COMMA           shift and go to state 124
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    MUL             shift and go to state 38
    DIV             shift and go to state 39
    OR              shift and go to state 40
    GT              shift and go to state 41
    LT              shift and go to state 42
    EQ              shift and go to state 43


state 114

    (35) create_1darr -> 1DARRINT id ASGN OPENIND enum . CLOSEIND

    CLOSEIND        shift and go to state 125


state 115

    (38) create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 . CLOSEIND

    CLOSEIND        shift and go to state 126


state 116

    (42) enum2 -> enum .
    (43) enum2 -> enum . DCOMMA enum2

    CLOSEIND        reduce using rule 42 (enum2 -> enum .)
    DCOMMA          shift and go to state 127


state 117

    (39) create_2darr -> 2DARRINT id ASGN OPENIND enum2 . CLOSEIND

    CLOSEIND        shift and go to state 128


state 118

    (37) extend2 -> EXTEND2 id OPENBR expr CLOSEBR . OPENBR expr CLOSEBR

    OPENBR          shift and go to state 129


state 119

    (13) statement -> WHILE OPENBR expr CLOSEBR DO statement .

    error           reduce using rule 13 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    OPENST          reduce using rule 13 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    WHILE           reduce using rule 13 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    IF              reduce using rule 13 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    MINUS           reduce using rule 13 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    NOT             reduce using rule 13 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    INC             reduce using rule 13 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    DEC             reduce using rule 13 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    OPENBR          reduce using rule 13 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    SZ1             reduce using rule 13 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    SZ2             reduce using rule 13 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    NUM             reduce using rule 13 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    UINT            reduce using rule 13 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    CUINT           reduce using rule 13 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    BOOL            reduce using rule 13 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    CBOOL           reduce using rule 13 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    1DARRBOOL       reduce using rule 13 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    1DARRINT        reduce using rule 13 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    2DARRBOOL       reduce using rule 13 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    2DARRINT        reduce using rule 13 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    EXTEND1         reduce using rule 13 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    EXTEND2         reduce using rule 13 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    ID              reduce using rule 13 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    $end            reduce using rule 13 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    CLOSEST         reduce using rule 13 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)
    ELSE            reduce using rule 13 (statement -> WHILE OPENBR expr CLOSEBR DO statement .)


state 120

    (15) statement -> IF OPENBR expr CLOSEBR statement ELSE . statement
    (4) statement -> . error
    (5) statement -> . expr
    (6) statement -> . OPENST stmt_list CLOSEST
    (7) statement -> . create_id
    (8) statement -> . assign
    (9) statement -> . create_1darr
    (10) statement -> . create_2darr
    (11) statement -> . extend1
    (12) statement -> . extend2
    (13) statement -> . WHILE OPENBR expr CLOSEBR DO statement
    (14) statement -> . IF OPENBR expr CLOSEBR statement
    (15) statement -> . IF OPENBR expr CLOSEBR statement ELSE statement
    (16) expr -> . MINUS expr
    (17) expr -> . NOT expr
    (18) expr -> . INC id
    (19) expr -> . DEC id
    (20) expr -> . expr PLUS expr
    (21) expr -> . expr MINUS expr
    (22) expr -> . expr MUL expr
    (23) expr -> . expr DIV expr
    (24) expr -> . expr OR expr
    (25) expr -> . expr GT expr
    (26) expr -> . expr LT expr
    (27) expr -> . expr EQ expr
    (28) expr -> . OPENBR expr CLOSEBR
    (29) expr -> . id OPENBR expr CLOSEBR
    (30) expr -> . SZ1 id
    (31) expr -> . SZ2 id expr
    (32) expr -> . NUM
    (33) expr -> . id
    (44) create_id -> . UINT id ASGN expr
    (45) create_id -> . CUINT id ASGN expr
    (46) create_id -> . BOOL id ASGN expr
    (47) create_id -> . CBOOL id ASGN expr
    (48) assign -> . id ASGN expr
    (49) assign -> . id OPENBR expr CLOSEBR ASGN expr
    (50) assign -> . id OPENBR expr COMMA expr CLOSEBR ASGN expr
    (34) create_1darr -> . 1DARRBOOL id ASGN OPENIND enum CLOSEIND
    (35) create_1darr -> . 1DARRINT id ASGN OPENIND enum CLOSEIND
    (38) create_2darr -> . 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND
    (39) create_2darr -> . 2DARRINT id ASGN OPENIND enum2 CLOSEIND
    (36) extend1 -> . EXTEND1 id expr
    (37) extend2 -> . EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR
    (51) id -> . ID

    error           shift and go to state 4
    OPENST          shift and go to state 6
    WHILE           shift and go to state 13
    IF              shift and go to state 15
    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    INC             shift and go to state 18
    DEC             shift and go to state 20
    OPENBR          shift and go to state 14
    SZ1             shift and go to state 21
    SZ2             shift and go to state 22
    NUM             shift and go to state 23
    UINT            shift and go to state 24
    CUINT           shift and go to state 25
    BOOL            shift and go to state 26
    CBOOL           shift and go to state 27
    1DARRBOOL       shift and go to state 28
    1DARRINT        shift and go to state 29
    2DARRBOOL       shift and go to state 30
    2DARRINT        shift and go to state 31
    EXTEND1         shift and go to state 32
    EXTEND2         shift and go to state 33
    ID              shift and go to state 34

    expr                           shift and go to state 5
    statement                      shift and go to state 130
    create_id                      shift and go to state 7
    assign                         shift and go to state 8
    create_1darr                   shift and go to state 9
    create_2darr                   shift and go to state 10
    extend1                        shift and go to state 11
    extend2                        shift and go to state 12
    id                             shift and go to state 19

state 121

    (49) assign -> id OPENBR expr CLOSEBR ASGN expr .
    (20) expr -> expr . PLUS expr
    (21) expr -> expr . MINUS expr
    (22) expr -> expr . MUL expr
    (23) expr -> expr . DIV expr
    (24) expr -> expr . OR expr
    (25) expr -> expr . GT expr
    (26) expr -> expr . LT expr
    (27) expr -> expr . EQ expr

    error           reduce using rule 49 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    OPENST          reduce using rule 49 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    WHILE           reduce using rule 49 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    IF              reduce using rule 49 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    NOT             reduce using rule 49 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    INC             reduce using rule 49 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    DEC             reduce using rule 49 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    OPENBR          reduce using rule 49 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    SZ1             reduce using rule 49 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    SZ2             reduce using rule 49 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    NUM             reduce using rule 49 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    UINT            reduce using rule 49 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    CUINT           reduce using rule 49 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    BOOL            reduce using rule 49 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    CBOOL           reduce using rule 49 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    1DARRBOOL       reduce using rule 49 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    1DARRINT        reduce using rule 49 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    2DARRBOOL       reduce using rule 49 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    2DARRINT        reduce using rule 49 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    EXTEND1         reduce using rule 49 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    EXTEND2         reduce using rule 49 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    ID              reduce using rule 49 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    $end            reduce using rule 49 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    CLOSEST         reduce using rule 49 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    ELSE            reduce using rule 49 (assign -> id OPENBR expr CLOSEBR ASGN expr .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    MUL             shift and go to state 38
    DIV             shift and go to state 39
    OR              shift and go to state 40
    GT              shift and go to state 41
    LT              shift and go to state 42
    EQ              shift and go to state 43

  ! MINUS           [ reduce using rule 49 (assign -> id OPENBR expr CLOSEBR ASGN expr .) ]


state 122

    (50) assign -> id OPENBR expr COMMA expr CLOSEBR . ASGN expr

    ASGN            shift and go to state 131


state 123

    (34) create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .

    error           reduce using rule 34 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    OPENST          reduce using rule 34 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    WHILE           reduce using rule 34 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    IF              reduce using rule 34 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    MINUS           reduce using rule 34 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    NOT             reduce using rule 34 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    INC             reduce using rule 34 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    DEC             reduce using rule 34 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    OPENBR          reduce using rule 34 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    SZ1             reduce using rule 34 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    SZ2             reduce using rule 34 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    NUM             reduce using rule 34 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    UINT            reduce using rule 34 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    CUINT           reduce using rule 34 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    BOOL            reduce using rule 34 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    CBOOL           reduce using rule 34 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    1DARRBOOL       reduce using rule 34 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    1DARRINT        reduce using rule 34 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    2DARRBOOL       reduce using rule 34 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    2DARRINT        reduce using rule 34 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    EXTEND1         reduce using rule 34 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    EXTEND2         reduce using rule 34 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    ID              reduce using rule 34 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    $end            reduce using rule 34 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    CLOSEST         reduce using rule 34 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)
    ELSE            reduce using rule 34 (create_1darr -> 1DARRBOOL id ASGN OPENIND enum CLOSEIND .)


state 124

    (41) enum -> expr COMMA . enum
    (40) enum -> . expr
    (41) enum -> . expr COMMA enum
    (16) expr -> . MINUS expr
    (17) expr -> . NOT expr
    (18) expr -> . INC id
    (19) expr -> . DEC id
    (20) expr -> . expr PLUS expr
    (21) expr -> . expr MINUS expr
    (22) expr -> . expr MUL expr
    (23) expr -> . expr DIV expr
    (24) expr -> . expr OR expr
    (25) expr -> . expr GT expr
    (26) expr -> . expr LT expr
    (27) expr -> . expr EQ expr
    (28) expr -> . OPENBR expr CLOSEBR
    (29) expr -> . id OPENBR expr CLOSEBR
    (30) expr -> . SZ1 id
    (31) expr -> . SZ2 id expr
    (32) expr -> . NUM
    (33) expr -> . id
    (51) id -> . ID

    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    INC             shift and go to state 18
    DEC             shift and go to state 20
    OPENBR          shift and go to state 14
    SZ1             shift and go to state 21
    SZ2             shift and go to state 22
    NUM             shift and go to state 23
    ID              shift and go to state 34

    expr                           shift and go to state 113
    enum                           shift and go to state 132
    id                             shift and go to state 47

state 125

    (35) create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .

    error           reduce using rule 35 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    OPENST          reduce using rule 35 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    WHILE           reduce using rule 35 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    IF              reduce using rule 35 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    MINUS           reduce using rule 35 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    NOT             reduce using rule 35 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    INC             reduce using rule 35 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    DEC             reduce using rule 35 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    OPENBR          reduce using rule 35 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    SZ1             reduce using rule 35 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    SZ2             reduce using rule 35 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    NUM             reduce using rule 35 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    UINT            reduce using rule 35 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    CUINT           reduce using rule 35 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    BOOL            reduce using rule 35 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    CBOOL           reduce using rule 35 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    1DARRBOOL       reduce using rule 35 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    1DARRINT        reduce using rule 35 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    2DARRBOOL       reduce using rule 35 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    2DARRINT        reduce using rule 35 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    EXTEND1         reduce using rule 35 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    EXTEND2         reduce using rule 35 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    ID              reduce using rule 35 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    $end            reduce using rule 35 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    CLOSEST         reduce using rule 35 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)
    ELSE            reduce using rule 35 (create_1darr -> 1DARRINT id ASGN OPENIND enum CLOSEIND .)


state 126

    (38) create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .

    error           reduce using rule 38 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    OPENST          reduce using rule 38 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    WHILE           reduce using rule 38 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    IF              reduce using rule 38 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    MINUS           reduce using rule 38 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    NOT             reduce using rule 38 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    INC             reduce using rule 38 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    DEC             reduce using rule 38 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    OPENBR          reduce using rule 38 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    SZ1             reduce using rule 38 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    SZ2             reduce using rule 38 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    NUM             reduce using rule 38 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    UINT            reduce using rule 38 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    CUINT           reduce using rule 38 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    BOOL            reduce using rule 38 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    CBOOL           reduce using rule 38 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    1DARRBOOL       reduce using rule 38 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    1DARRINT        reduce using rule 38 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    2DARRBOOL       reduce using rule 38 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    2DARRINT        reduce using rule 38 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    EXTEND1         reduce using rule 38 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    EXTEND2         reduce using rule 38 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    ID              reduce using rule 38 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    $end            reduce using rule 38 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    CLOSEST         reduce using rule 38 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)
    ELSE            reduce using rule 38 (create_2darr -> 2DARRBOOL id ASGN OPENIND enum2 CLOSEIND .)


state 127

    (43) enum2 -> enum DCOMMA . enum2
    (42) enum2 -> . enum
    (43) enum2 -> . enum DCOMMA enum2
    (40) enum -> . expr
    (41) enum -> . expr COMMA enum
    (16) expr -> . MINUS expr
    (17) expr -> . NOT expr
    (18) expr -> . INC id
    (19) expr -> . DEC id
    (20) expr -> . expr PLUS expr
    (21) expr -> . expr MINUS expr
    (22) expr -> . expr MUL expr
    (23) expr -> . expr DIV expr
    (24) expr -> . expr OR expr
    (25) expr -> . expr GT expr
    (26) expr -> . expr LT expr
    (27) expr -> . expr EQ expr
    (28) expr -> . OPENBR expr CLOSEBR
    (29) expr -> . id OPENBR expr CLOSEBR
    (30) expr -> . SZ1 id
    (31) expr -> . SZ2 id expr
    (32) expr -> . NUM
    (33) expr -> . id
    (51) id -> . ID

    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    INC             shift and go to state 18
    DEC             shift and go to state 20
    OPENBR          shift and go to state 14
    SZ1             shift and go to state 21
    SZ2             shift and go to state 22
    NUM             shift and go to state 23
    ID              shift and go to state 34

    enum                           shift and go to state 116
    enum2                          shift and go to state 133
    expr                           shift and go to state 113
    id                             shift and go to state 47

state 128

    (39) create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .

    error           reduce using rule 39 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    OPENST          reduce using rule 39 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    WHILE           reduce using rule 39 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    IF              reduce using rule 39 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    MINUS           reduce using rule 39 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    NOT             reduce using rule 39 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    INC             reduce using rule 39 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    DEC             reduce using rule 39 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    OPENBR          reduce using rule 39 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    SZ1             reduce using rule 39 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    SZ2             reduce using rule 39 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    NUM             reduce using rule 39 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    UINT            reduce using rule 39 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    CUINT           reduce using rule 39 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    BOOL            reduce using rule 39 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    CBOOL           reduce using rule 39 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    1DARRBOOL       reduce using rule 39 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    1DARRINT        reduce using rule 39 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    2DARRBOOL       reduce using rule 39 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    2DARRINT        reduce using rule 39 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    EXTEND1         reduce using rule 39 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    EXTEND2         reduce using rule 39 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    ID              reduce using rule 39 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    $end            reduce using rule 39 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    CLOSEST         reduce using rule 39 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)
    ELSE            reduce using rule 39 (create_2darr -> 2DARRINT id ASGN OPENIND enum2 CLOSEIND .)


state 129

    (37) extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR . expr CLOSEBR
    (16) expr -> . MINUS expr
    (17) expr -> . NOT expr
    (18) expr -> . INC id
    (19) expr -> . DEC id
    (20) expr -> . expr PLUS expr
    (21) expr -> . expr MINUS expr
    (22) expr -> . expr MUL expr
    (23) expr -> . expr DIV expr
    (24) expr -> . expr OR expr
    (25) expr -> . expr GT expr
    (26) expr -> . expr LT expr
    (27) expr -> . expr EQ expr
    (28) expr -> . OPENBR expr CLOSEBR
    (29) expr -> . id OPENBR expr CLOSEBR
    (30) expr -> . SZ1 id
    (31) expr -> . SZ2 id expr
    (32) expr -> . NUM
    (33) expr -> . id
    (51) id -> . ID

    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    INC             shift and go to state 18
    DEC             shift and go to state 20
    OPENBR          shift and go to state 14
    SZ1             shift and go to state 21
    SZ2             shift and go to state 22
    NUM             shift and go to state 23
    ID              shift and go to state 34

    id                             shift and go to state 47
    expr                           shift and go to state 134

state 130

    (15) statement -> IF OPENBR expr CLOSEBR statement ELSE statement .

    error           reduce using rule 15 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    OPENST          reduce using rule 15 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    WHILE           reduce using rule 15 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    IF              reduce using rule 15 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    MINUS           reduce using rule 15 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    NOT             reduce using rule 15 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    INC             reduce using rule 15 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    DEC             reduce using rule 15 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    OPENBR          reduce using rule 15 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    SZ1             reduce using rule 15 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    SZ2             reduce using rule 15 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    NUM             reduce using rule 15 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    UINT            reduce using rule 15 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    CUINT           reduce using rule 15 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    BOOL            reduce using rule 15 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    CBOOL           reduce using rule 15 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    1DARRBOOL       reduce using rule 15 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    1DARRINT        reduce using rule 15 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    2DARRBOOL       reduce using rule 15 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    2DARRINT        reduce using rule 15 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    EXTEND1         reduce using rule 15 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    EXTEND2         reduce using rule 15 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    ID              reduce using rule 15 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    $end            reduce using rule 15 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    CLOSEST         reduce using rule 15 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)
    ELSE            reduce using rule 15 (statement -> IF OPENBR expr CLOSEBR statement ELSE statement .)


state 131

    (50) assign -> id OPENBR expr COMMA expr CLOSEBR ASGN . expr
    (16) expr -> . MINUS expr
    (17) expr -> . NOT expr
    (18) expr -> . INC id
    (19) expr -> . DEC id
    (20) expr -> . expr PLUS expr
    (21) expr -> . expr MINUS expr
    (22) expr -> . expr MUL expr
    (23) expr -> . expr DIV expr
    (24) expr -> . expr OR expr
    (25) expr -> . expr GT expr
    (26) expr -> . expr LT expr
    (27) expr -> . expr EQ expr
    (28) expr -> . OPENBR expr CLOSEBR
    (29) expr -> . id OPENBR expr CLOSEBR
    (30) expr -> . SZ1 id
    (31) expr -> . SZ2 id expr
    (32) expr -> . NUM
    (33) expr -> . id
    (51) id -> . ID

    MINUS           shift and go to state 16
    NOT             shift and go to state 17
    INC             shift and go to state 18
    DEC             shift and go to state 20
    OPENBR          shift and go to state 14
    SZ1             shift and go to state 21
    SZ2             shift and go to state 22
    NUM             shift and go to state 23
    ID              shift and go to state 34

    id                             shift and go to state 47
    expr                           shift and go to state 135

state 132

    (41) enum -> expr COMMA enum .

    CLOSEIND        reduce using rule 41 (enum -> expr COMMA enum .)
    DCOMMA          reduce using rule 41 (enum -> expr COMMA enum .)


state 133

    (43) enum2 -> enum DCOMMA enum2 .

    CLOSEIND        reduce using rule 43 (enum2 -> enum DCOMMA enum2 .)


state 134

    (37) extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr . CLOSEBR
    (20) expr -> expr . PLUS expr
    (21) expr -> expr . MINUS expr
    (22) expr -> expr . MUL expr
    (23) expr -> expr . DIV expr
    (24) expr -> expr . OR expr
    (25) expr -> expr . GT expr
    (26) expr -> expr . LT expr
    (27) expr -> expr . EQ expr

    CLOSEBR         shift and go to state 136
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    MUL             shift and go to state 38
    DIV             shift and go to state 39
    OR              shift and go to state 40
    GT              shift and go to state 41
    LT              shift and go to state 42
    EQ              shift and go to state 43


state 135

    (50) assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .
    (20) expr -> expr . PLUS expr
    (21) expr -> expr . MINUS expr
    (22) expr -> expr . MUL expr
    (23) expr -> expr . DIV expr
    (24) expr -> expr . OR expr
    (25) expr -> expr . GT expr
    (26) expr -> expr . LT expr
    (27) expr -> expr . EQ expr

    error           reduce using rule 50 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    OPENST          reduce using rule 50 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    WHILE           reduce using rule 50 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    IF              reduce using rule 50 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    NOT             reduce using rule 50 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    INC             reduce using rule 50 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    DEC             reduce using rule 50 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    OPENBR          reduce using rule 50 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    SZ1             reduce using rule 50 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    SZ2             reduce using rule 50 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    NUM             reduce using rule 50 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    UINT            reduce using rule 50 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    CUINT           reduce using rule 50 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    BOOL            reduce using rule 50 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    CBOOL           reduce using rule 50 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    1DARRBOOL       reduce using rule 50 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    1DARRINT        reduce using rule 50 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    2DARRBOOL       reduce using rule 50 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    2DARRINT        reduce using rule 50 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    EXTEND1         reduce using rule 50 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    EXTEND2         reduce using rule 50 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    ID              reduce using rule 50 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    $end            reduce using rule 50 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    CLOSEST         reduce using rule 50 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    ELSE            reduce using rule 50 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    MUL             shift and go to state 38
    DIV             shift and go to state 39
    OR              shift and go to state 40
    GT              shift and go to state 41
    LT              shift and go to state 42
    EQ              shift and go to state 43

  ! MINUS           [ reduce using rule 50 (assign -> id OPENBR expr COMMA expr CLOSEBR ASGN expr .) ]


state 136

    (37) extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .

    error           reduce using rule 37 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    OPENST          reduce using rule 37 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    WHILE           reduce using rule 37 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    IF              reduce using rule 37 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    MINUS           reduce using rule 37 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    NOT             reduce using rule 37 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    INC             reduce using rule 37 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    DEC             reduce using rule 37 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    OPENBR          reduce using rule 37 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    SZ1             reduce using rule 37 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    SZ2             reduce using rule 37 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    NUM             reduce using rule 37 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    UINT            reduce using rule 37 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    CUINT           reduce using rule 37 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    BOOL            reduce using rule 37 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    CBOOL           reduce using rule 37 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    1DARRBOOL       reduce using rule 37 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    1DARRINT        reduce using rule 37 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    2DARRBOOL       reduce using rule 37 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    2DARRINT        reduce using rule 37 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    EXTEND1         reduce using rule 37 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    EXTEND2         reduce using rule 37 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    ID              reduce using rule 37 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    $end            reduce using rule 37 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    CLOSEST         reduce using rule 37 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)
    ELSE            reduce using rule 37 (extend2 -> EXTEND2 id OPENBR expr CLOSEBR OPENBR expr CLOSEBR .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MINUS in state 5 resolved as shift
WARNING: shift/reduce conflict for OPENBR in state 19 resolved as shift
WARNING: shift/reduce conflict for OPENBR in state 47 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 71 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 71 resolved as shift
WARNING: shift/reduce conflict for MUL in state 71 resolved as shift
WARNING: shift/reduce conflict for DIV in state 71 resolved as shift
WARNING: shift/reduce conflict for OR in state 71 resolved as shift
WARNING: shift/reduce conflict for GT in state 71 resolved as shift
WARNING: shift/reduce conflict for LT in state 71 resolved as shift
WARNING: shift/reduce conflict for EQ in state 71 resolved as shift
